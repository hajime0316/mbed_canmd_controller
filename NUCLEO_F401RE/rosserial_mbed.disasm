
NUCLEO_F401RE/rosserial_mbed.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080043b1


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 80 01 20 b1 43 00 08 e5 43 00 08 e5 43 00 08     ... .C...C...C..
 8000010:	e5 43 00 08 e5 43 00 08 e5 43 00 08 00 00 00 00     .C...C...C......
	...
 800002c:	75 42 00 08 e5 43 00 08 00 00 00 00 1b 43 00 08     uB...C.......C..
 800003c:	7b 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     {C...C...C...C..
 800004c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 800005c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 800006c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 800007c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
	...
 800009c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 80000ac:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 80000bc:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 80000cc:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 80000dc:	00 00 00 00 e5 43 00 08 e5 43 00 08 e5 43 00 08     .....C...C...C..
	...
 80000fc:	e5 43 00 08 00 00 00 00 e5 43 00 08 e5 43 00 08     .C.......C...C..
 800010c:	e5 43 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .C..............
 800011c:	00 00 00 00 e5 43 00 08 e5 43 00 08 e5 43 00 08     .....C...C...C..
 800012c:	e5 43 00 08 e5 43 00 08 00 00 00 00 00 00 00 00     .C...C..........
	...
 800014c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 e5 43 00 08     .C...C...C...C..
 800015c:	e5 43 00 08 e5 43 00 08 e5 43 00 08 00 00 00 00     .C...C...C......
	...
 8000184:	e5 43 00 08 00 00 00 00 00 00 00 00 e5 43 00 08     .C...........C..

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000230 	.word	0x20000230
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800574c 	.word	0x0800574c

080001b8 <frame_dummy>:
 80001b8:	4b0c      	ldr	r3, [pc, #48]	; (80001ec <frame_dummy+0x34>)
 80001ba:	b143      	cbz	r3, 80001ce <frame_dummy+0x16>
 80001bc:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x38>)
 80001be:	490d      	ldr	r1, [pc, #52]	; (80001f4 <frame_dummy+0x3c>)
 80001c0:	b510      	push	{r4, lr}
 80001c2:	f3af 8000 	nop.w
 80001c6:	480c      	ldr	r0, [pc, #48]	; (80001f8 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b923      	cbnz	r3, 80001d6 <frame_dummy+0x1e>
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	480a      	ldr	r0, [pc, #40]	; (80001f8 <frame_dummy+0x40>)
 80001d0:	6803      	ldr	r3, [r0, #0]
 80001d2:	b933      	cbnz	r3, 80001e2 <frame_dummy+0x2a>
 80001d4:	4770      	bx	lr
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f7      	beq.n	80001cc <frame_dummy+0x14>
 80001dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e0:	4718      	bx	r3
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <frame_dummy+0x44>)
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	d0f5      	beq.n	80001d4 <frame_dummy+0x1c>
 80001e8:	4718      	bx	r3
 80001ea:	bf00      	nop
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800574c 	.word	0x0800574c
 80001f4:	20000234 	.word	0x20000234
 80001f8:	2000022c 	.word	0x2000022c
 80001fc:	00000000 	.word	0x00000000

08000200 <std_msgs::Time::serialize(unsigned char*) const>:
 8000200:	6843      	ldr	r3, [r0, #4]
 8000202:	700b      	strb	r3, [r1, #0]
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	0a1b      	lsrs	r3, r3, #8
 8000208:	704b      	strb	r3, [r1, #1]
 800020a:	88c3      	ldrh	r3, [r0, #6]
 800020c:	708b      	strb	r3, [r1, #2]
 800020e:	79c3      	ldrb	r3, [r0, #7]
 8000210:	70cb      	strb	r3, [r1, #3]
 8000212:	6883      	ldr	r3, [r0, #8]
 8000214:	710b      	strb	r3, [r1, #4]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	0a1b      	lsrs	r3, r3, #8
 800021a:	714b      	strb	r3, [r1, #5]
 800021c:	8943      	ldrh	r3, [r0, #10]
 800021e:	718b      	strb	r3, [r1, #6]
 8000220:	7ac3      	ldrb	r3, [r0, #11]
 8000222:	71cb      	strb	r3, [r1, #7]
 8000224:	2008      	movs	r0, #8
 8000226:	4770      	bx	lr

08000228 <std_msgs::Time::deserialize(unsigned char*)>:
 8000228:	780b      	ldrb	r3, [r1, #0]
 800022a:	6043      	str	r3, [r0, #4]
 800022c:	784a      	ldrb	r2, [r1, #1]
 800022e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000232:	6043      	str	r3, [r0, #4]
 8000234:	788a      	ldrb	r2, [r1, #2]
 8000236:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023a:	6043      	str	r3, [r0, #4]
 800023c:	78ca      	ldrb	r2, [r1, #3]
 800023e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000242:	6043      	str	r3, [r0, #4]
 8000244:	790b      	ldrb	r3, [r1, #4]
 8000246:	6083      	str	r3, [r0, #8]
 8000248:	794a      	ldrb	r2, [r1, #5]
 800024a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800024e:	6083      	str	r3, [r0, #8]
 8000250:	798a      	ldrb	r2, [r1, #6]
 8000252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000256:	6083      	str	r3, [r0, #8]
 8000258:	79ca      	ldrb	r2, [r1, #7]
 800025a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800025e:	6083      	str	r3, [r0, #8]
 8000260:	2008      	movs	r0, #8
 8000262:	4770      	bx	lr

08000264 <std_msgs::Time::getType()>:
 8000264:	4800      	ldr	r0, [pc, #0]	; (8000268 <std_msgs::Time::getType()+0x4>)
 8000266:	4770      	bx	lr
 8000268:	0800535b 	.word	0x0800535b

0800026c <std_msgs::Time::getMD5()>:
 800026c:	4800      	ldr	r0, [pc, #0]	; (8000270 <std_msgs::Time::getMD5()+0x4>)
 800026e:	4770      	bx	lr
 8000270:	0800533a 	.word	0x0800533a

08000274 <rosserial_msgs::TopicInfo::getType()>:
 8000274:	4800      	ldr	r0, [pc, #0]	; (8000278 <rosserial_msgs::TopicInfo::getType()+0x4>)
 8000276:	4770      	bx	lr
 8000278:	080052cc 	.word	0x080052cc

0800027c <rosserial_msgs::TopicInfo::getMD5()>:
 800027c:	4800      	ldr	r0, [pc, #0]	; (8000280 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 800027e:	4770      	bx	lr
 8000280:	080052ab 	.word	0x080052ab

08000284 <rosserial_msgs::Log::getType()>:
 8000284:	4800      	ldr	r0, [pc, #0]	; (8000288 <rosserial_msgs::Log::getType()+0x4>)
 8000286:	4770      	bx	lr
 8000288:	08005298 	.word	0x08005298

0800028c <rosserial_msgs::Log::getMD5()>:
 800028c:	4800      	ldr	r0, [pc, #0]	; (8000290 <rosserial_msgs::Log::getMD5()+0x4>)
 800028e:	4770      	bx	lr
 8000290:	08005277 	.word	0x08005277

08000294 <rosserial_msgs::RequestParamResponse::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	080052e5 	.word	0x080052e5

0800029c <rosserial_msgs::RequestParamResponse::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	08005256 	.word	0x08005256

080002a4 <std_msgs::Int32::serialize(unsigned char*) const>:
 80002a4:	6843      	ldr	r3, [r0, #4]
 80002a6:	700b      	strb	r3, [r1, #0]
 80002a8:	0a1a      	lsrs	r2, r3, #8
 80002aa:	704a      	strb	r2, [r1, #1]
 80002ac:	0c1a      	lsrs	r2, r3, #16
 80002ae:	0e1b      	lsrs	r3, r3, #24
 80002b0:	708a      	strb	r2, [r1, #2]
 80002b2:	70cb      	strb	r3, [r1, #3]
 80002b4:	2004      	movs	r0, #4
 80002b6:	4770      	bx	lr

080002b8 <std_msgs::Int32::deserialize(unsigned char*)>:
 80002b8:	680b      	ldr	r3, [r1, #0]
 80002ba:	6043      	str	r3, [r0, #4]
 80002bc:	2004      	movs	r0, #4
 80002be:	4770      	bx	lr

080002c0 <std_msgs::Int32::getType()>:
 80002c0:	4800      	ldr	r0, [pc, #0]	; (80002c4 <std_msgs::Int32::getType()+0x4>)
 80002c2:	4770      	bx	lr
 80002c4:	0800538a 	.word	0x0800538a

080002c8 <std_msgs::Int32::getMD5()>:
 80002c8:	4800      	ldr	r0, [pc, #0]	; (80002cc <std_msgs::Int32::getMD5()+0x4>)
 80002ca:	4770      	bx	lr
 80002cc:	08005369 	.word	0x08005369

080002d0 <ros::Subscriber<std_msgs::Int32, void>::callback(unsigned char*)>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	4605      	mov	r5, r0
 80002d4:	f100 040c 	add.w	r4, r0, #12
 80002d8:	4620      	mov	r0, r4
 80002da:	f7ff ffed 	bl	80002b8 <std_msgs::Int32::deserialize(unsigned char*)>
 80002de:	696b      	ldr	r3, [r5, #20]
 80002e0:	4620      	mov	r0, r4
 80002e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80002e6:	4718      	bx	r3

080002e8 <ros::Subscriber<std_msgs::Int32, void>::getEndpointType()>:
 80002e8:	6980      	ldr	r0, [r0, #24]
 80002ea:	4770      	bx	lr

080002ec <ros::Subscriber<std_msgs::Int32, void>::getMsgType()>:
 80002ec:	4800      	ldr	r0, [pc, #0]	; (80002f0 <ros::Subscriber<std_msgs::Int32, void>::getMsgType()+0x4>)
 80002ee:	4770      	bx	lr
 80002f0:	0800538a 	.word	0x0800538a

080002f4 <ros::Subscriber<std_msgs::Int32, void>::getMsgMD5()>:
 80002f4:	4800      	ldr	r0, [pc, #0]	; (80002f8 <ros::Subscriber<std_msgs::Int32, void>::getMsgMD5()+0x4>)
 80002f6:	4770      	bx	lr
 80002f8:	08005369 	.word	0x08005369

080002fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80002fc:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 8000300:	4770      	bx	lr
	...

08000304 <messageCb_motor(std_msgs::Int32 const&)>:
 8000304:	6843      	ldr	r3, [r0, #4]
 8000306:	2b01      	cmp	r3, #1
 8000308:	4b04      	ldr	r3, [pc, #16]	; (800031c <messageCb_motor(std_msgs::Int32 const&)+0x18>)
 800030a:	bf19      	ittee	ne
 800030c:	68da      	ldrne	r2, [r3, #12]
 800030e:	681b      	ldrne	r3, [r3, #0]
 8000310:	689a      	ldreq	r2, [r3, #8]
 8000312:	681b      	ldreq	r3, [r3, #0]
 8000314:	bf18      	it	ne
 8000316:	041b      	lslne	r3, r3, #16
 8000318:	6013      	str	r3, [r2, #0]
 800031a:	4770      	bx	lr
 800031c:	2000024c 	.word	0x2000024c

08000320 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000320:	3801      	subs	r0, #1
 8000322:	2300      	movs	r3, #0
 8000324:	fa21 f203 	lsr.w	r2, r1, r3
 8000328:	3308      	adds	r3, #8
 800032a:	2b20      	cmp	r3, #32
 800032c:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000330:	d1f8      	bne.n	8000324 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000332:	4770      	bx	lr

08000334 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000334:	6843      	ldr	r3, [r0, #4]
 8000336:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800033a:	700b      	strb	r3, [r1, #0]
 800033c:	6843      	ldr	r3, [r0, #4]
 800033e:	0a1b      	lsrs	r3, r3, #8
 8000340:	704b      	strb	r3, [r1, #1]
 8000342:	88c3      	ldrh	r3, [r0, #6]
 8000344:	708b      	strb	r3, [r1, #2]
 8000346:	79c3      	ldrb	r3, [r0, #7]
 8000348:	70cb      	strb	r3, [r1, #3]
 800034a:	460d      	mov	r5, r1
 800034c:	1d0a      	adds	r2, r1, #4
 800034e:	4604      	mov	r4, r0
 8000350:	2100      	movs	r1, #0
 8000352:	6860      	ldr	r0, [r4, #4]
 8000354:	4281      	cmp	r1, r0
 8000356:	eba2 0305 	sub.w	r3, r2, r5
 800035a:	f102 0204 	add.w	r2, r2, #4
 800035e:	d20f      	bcs.n	8000380 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000360:	68e3      	ldr	r3, [r4, #12]
 8000362:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000366:	f802 3c04 	strb.w	r3, [r2, #-4]
 800036a:	0a18      	lsrs	r0, r3, #8
 800036c:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000370:	0c18      	lsrs	r0, r3, #16
 8000372:	0e1b      	lsrs	r3, r3, #24
 8000374:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000378:	f802 3c01 	strb.w	r3, [r2, #-1]
 800037c:	3101      	adds	r1, #1
 800037e:	e7e8      	b.n	8000352 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000380:	6922      	ldr	r2, [r4, #16]
 8000382:	54ea      	strb	r2, [r5, r3]
 8000384:	6921      	ldr	r1, [r4, #16]
 8000386:	18ea      	adds	r2, r5, r3
 8000388:	0a09      	lsrs	r1, r1, #8
 800038a:	7051      	strb	r1, [r2, #1]
 800038c:	8a61      	ldrh	r1, [r4, #18]
 800038e:	7091      	strb	r1, [r2, #2]
 8000390:	7ce1      	ldrb	r1, [r4, #19]
 8000392:	70d1      	strb	r1, [r2, #3]
 8000394:	3304      	adds	r3, #4
 8000396:	442b      	add	r3, r5
 8000398:	2100      	movs	r1, #0
 800039a:	6922      	ldr	r2, [r4, #16]
 800039c:	4291      	cmp	r1, r2
 800039e:	eba3 0605 	sub.w	r6, r3, r5
 80003a2:	f103 0304 	add.w	r3, r3, #4
 80003a6:	d20f      	bcs.n	80003c8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 80003a8:	69a2      	ldr	r2, [r4, #24]
 80003aa:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80003ae:	f803 2c04 	strb.w	r2, [r3, #-4]
 80003b2:	0a10      	lsrs	r0, r2, #8
 80003b4:	f803 0c03 	strb.w	r0, [r3, #-3]
 80003b8:	0c10      	lsrs	r0, r2, #16
 80003ba:	0e12      	lsrs	r2, r2, #24
 80003bc:	f803 0c02 	strb.w	r0, [r3, #-2]
 80003c0:	f803 2c01 	strb.w	r2, [r3, #-1]
 80003c4:	3101      	adds	r1, #1
 80003c6:	e7e8      	b.n	800039a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80003c8:	69e3      	ldr	r3, [r4, #28]
 80003ca:	55ab      	strb	r3, [r5, r6]
 80003cc:	69e2      	ldr	r2, [r4, #28]
 80003ce:	19ab      	adds	r3, r5, r6
 80003d0:	0a12      	lsrs	r2, r2, #8
 80003d2:	705a      	strb	r2, [r3, #1]
 80003d4:	8be2      	ldrh	r2, [r4, #30]
 80003d6:	709a      	strb	r2, [r3, #2]
 80003d8:	7fe2      	ldrb	r2, [r4, #31]
 80003da:	70da      	strb	r2, [r3, #3]
 80003dc:	3604      	adds	r6, #4
 80003de:	2700      	movs	r7, #0
 80003e0:	69e3      	ldr	r3, [r4, #28]
 80003e2:	429f      	cmp	r7, r3
 80003e4:	d214      	bcs.n	8000410 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80003e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003e8:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80003ec:	f004 fd09 	bl	8004e02 <strlen>
 80003f0:	4680      	mov	r8, r0
 80003f2:	4601      	mov	r1, r0
 80003f4:	19a8      	adds	r0, r5, r6
 80003f6:	f7ff ff93 	bl	8000320 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80003fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80003fc:	3604      	adds	r6, #4
 80003fe:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 8000402:	19a8      	adds	r0, r5, r6
 8000404:	4642      	mov	r2, r8
 8000406:	f004 fa0b 	bl	8004820 <memcpy>
 800040a:	4446      	add	r6, r8
 800040c:	3701      	adds	r7, #1
 800040e:	e7e7      	b.n	80003e0 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 8000410:	4630      	mov	r0, r6
 8000412:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000416 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000416:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000418:	460e      	mov	r6, r1
 800041a:	7903      	ldrb	r3, [r0, #4]
 800041c:	f806 3b01 	strb.w	r3, [r6], #1
 8000420:	4605      	mov	r5, r0
 8000422:	6880      	ldr	r0, [r0, #8]
 8000424:	460f      	mov	r7, r1
 8000426:	f004 fcec 	bl	8004e02 <strlen>
 800042a:	4604      	mov	r4, r0
 800042c:	4601      	mov	r1, r0
 800042e:	4630      	mov	r0, r6
 8000430:	f7ff ff76 	bl	8000320 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000434:	4622      	mov	r2, r4
 8000436:	68a9      	ldr	r1, [r5, #8]
 8000438:	1d78      	adds	r0, r7, #5
 800043a:	f004 f9f1 	bl	8004820 <memcpy>
 800043e:	1d60      	adds	r0, r4, #5
 8000440:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000442 <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000442:	8883      	ldrh	r3, [r0, #4]
 8000444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000448:	700b      	strb	r3, [r1, #0]
 800044a:	8883      	ldrh	r3, [r0, #4]
 800044c:	0a1b      	lsrs	r3, r3, #8
 800044e:	704b      	strb	r3, [r1, #1]
 8000450:	4605      	mov	r5, r0
 8000452:	6880      	ldr	r0, [r0, #8]
 8000454:	460c      	mov	r4, r1
 8000456:	f004 fcd4 	bl	8004e02 <strlen>
 800045a:	4607      	mov	r7, r0
 800045c:	4601      	mov	r1, r0
 800045e:	1ca0      	adds	r0, r4, #2
 8000460:	f7ff ff5e 	bl	8000320 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000464:	463a      	mov	r2, r7
 8000466:	68a9      	ldr	r1, [r5, #8]
 8000468:	1da0      	adds	r0, r4, #6
 800046a:	f004 f9d9 	bl	8004820 <memcpy>
 800046e:	68e8      	ldr	r0, [r5, #12]
 8000470:	f004 fcc7 	bl	8004e02 <strlen>
 8000474:	f107 0806 	add.w	r8, r7, #6
 8000478:	4606      	mov	r6, r0
 800047a:	4601      	mov	r1, r0
 800047c:	370a      	adds	r7, #10
 800047e:	eb04 0008 	add.w	r0, r4, r8
 8000482:	f7ff ff4d 	bl	8000320 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000486:	4632      	mov	r2, r6
 8000488:	68e9      	ldr	r1, [r5, #12]
 800048a:	19e0      	adds	r0, r4, r7
 800048c:	f004 f9c8 	bl	8004820 <memcpy>
 8000490:	6928      	ldr	r0, [r5, #16]
 8000492:	f004 fcb6 	bl	8004e02 <strlen>
 8000496:	443e      	add	r6, r7
 8000498:	4601      	mov	r1, r0
 800049a:	4607      	mov	r7, r0
 800049c:	19a0      	adds	r0, r4, r6
 800049e:	3604      	adds	r6, #4
 80004a0:	f7ff ff3e 	bl	8000320 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80004a4:	463a      	mov	r2, r7
 80004a6:	19a0      	adds	r0, r4, r6
 80004a8:	6929      	ldr	r1, [r5, #16]
 80004aa:	443e      	add	r6, r7
 80004ac:	f004 f9b8 	bl	8004820 <memcpy>
 80004b0:	696b      	ldr	r3, [r5, #20]
 80004b2:	55a3      	strb	r3, [r4, r6]
 80004b4:	4434      	add	r4, r6
 80004b6:	0a1a      	lsrs	r2, r3, #8
 80004b8:	7062      	strb	r2, [r4, #1]
 80004ba:	0c1a      	lsrs	r2, r3, #16
 80004bc:	0e1b      	lsrs	r3, r3, #24
 80004be:	70a2      	strb	r2, [r4, #2]
 80004c0:	70e3      	strb	r3, [r4, #3]
 80004c2:	1d30      	adds	r0, r6, #4
 80004c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080004c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80004c8:	b510      	push	{r4, lr}
 80004ca:	2300      	movs	r3, #0
 80004cc:	6003      	str	r3, [r0, #0]
 80004ce:	3901      	subs	r1, #1
 80004d0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80004d4:	fa02 f403 	lsl.w	r4, r2, r3
 80004d8:	6802      	ldr	r2, [r0, #0]
 80004da:	3308      	adds	r3, #8
 80004dc:	4322      	orrs	r2, r4
 80004de:	2b20      	cmp	r3, #32
 80004e0:	6002      	str	r2, [r0, #0]
 80004e2:	d1f5      	bne.n	80004d0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80004e4:	bd10      	pop	{r4, pc}

080004e6 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80004e6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004e8:	460c      	mov	r4, r1
 80004ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80004ee:	7103      	strb	r3, [r0, #4]
 80004f0:	4605      	mov	r5, r0
 80004f2:	a801      	add	r0, sp, #4
 80004f4:	f7ff ffe8 	bl	80004c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80004f8:	9b01      	ldr	r3, [sp, #4]
 80004fa:	1d62      	adds	r2, r4, #5
 80004fc:	1d58      	adds	r0, r3, #5
 80004fe:	1b11      	subs	r1, r2, r4
 8000500:	4288      	cmp	r0, r1
 8000502:	d904      	bls.n	800050e <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000504:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000508:	f802 1c02 	strb.w	r1, [r2, #-2]
 800050c:	e7f7      	b.n	80004fe <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 800050e:	4423      	add	r3, r4
 8000510:	2200      	movs	r2, #0
 8000512:	3404      	adds	r4, #4
 8000514:	711a      	strb	r2, [r3, #4]
 8000516:	60ac      	str	r4, [r5, #8]
 8000518:	b003      	add	sp, #12
 800051a:	bd30      	pop	{r4, r5, pc}

0800051c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 800051c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800051e:	780b      	ldrb	r3, [r1, #0]
 8000520:	8083      	strh	r3, [r0, #4]
 8000522:	784a      	ldrb	r2, [r1, #1]
 8000524:	b085      	sub	sp, #20
 8000526:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800052a:	8083      	strh	r3, [r0, #4]
 800052c:	460c      	mov	r4, r1
 800052e:	4606      	mov	r6, r0
 8000530:	3102      	adds	r1, #2
 8000532:	a801      	add	r0, sp, #4
 8000534:	f7ff ffc8 	bl	80004c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000538:	9f01      	ldr	r7, [sp, #4]
 800053a:	1da3      	adds	r3, r4, #6
 800053c:	1dbd      	adds	r5, r7, #6
 800053e:	1b1a      	subs	r2, r3, r4
 8000540:	4295      	cmp	r5, r2
 8000542:	d904      	bls.n	800054e <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000544:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000548:	f803 2c02 	strb.w	r2, [r3, #-2]
 800054c:	e7f7      	b.n	800053e <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800054e:	19e3      	adds	r3, r4, r7
 8000550:	2200      	movs	r2, #0
 8000552:	715a      	strb	r2, [r3, #5]
 8000554:	1d63      	adds	r3, r4, #5
 8000556:	60b3      	str	r3, [r6, #8]
 8000558:	1961      	adds	r1, r4, r5
 800055a:	a802      	add	r0, sp, #8
 800055c:	f7ff ffb4 	bl	80004c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000560:	1d2b      	adds	r3, r5, #4
 8000562:	9d02      	ldr	r5, [sp, #8]
 8000564:	f107 020a 	add.w	r2, r7, #10
 8000568:	441d      	add	r5, r3
 800056a:	4422      	add	r2, r4
 800056c:	1b11      	subs	r1, r2, r4
 800056e:	428d      	cmp	r5, r1
 8000570:	d904      	bls.n	800057c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 8000572:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000576:	f802 1c02 	strb.w	r1, [r2, #-2]
 800057a:	e7f7      	b.n	800056c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 800057c:	1961      	adds	r1, r4, r5
 800057e:	3b01      	subs	r3, #1
 8000580:	4423      	add	r3, r4
 8000582:	2200      	movs	r2, #0
 8000584:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000588:	a803      	add	r0, sp, #12
 800058a:	60f3      	str	r3, [r6, #12]
 800058c:	f7ff ff9c 	bl	80004c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000590:	9803      	ldr	r0, [sp, #12]
 8000592:	3504      	adds	r5, #4
 8000594:	4428      	add	r0, r5
 8000596:	1963      	adds	r3, r4, r5
 8000598:	1b1a      	subs	r2, r3, r4
 800059a:	4290      	cmp	r0, r2
 800059c:	d904      	bls.n	80005a8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 800059e:	f813 2b01 	ldrb.w	r2, [r3], #1
 80005a2:	f803 2c02 	strb.w	r2, [r3, #-2]
 80005a6:	e7f7      	b.n	8000598 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80005a8:	1822      	adds	r2, r4, r0
 80005aa:	3d01      	subs	r5, #1
 80005ac:	2300      	movs	r3, #0
 80005ae:	4425      	add	r5, r4
 80005b0:	f802 3c01 	strb.w	r3, [r2, #-1]
 80005b4:	6135      	str	r5, [r6, #16]
 80005b6:	7893      	ldrb	r3, [r2, #2]
 80005b8:	7851      	ldrb	r1, [r2, #1]
 80005ba:	78d2      	ldrb	r2, [r2, #3]
 80005bc:	041b      	lsls	r3, r3, #16
 80005be:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80005c2:	5c21      	ldrb	r1, [r4, r0]
 80005c4:	430b      	orrs	r3, r1
 80005c6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80005ca:	3004      	adds	r0, #4
 80005cc:	6173      	str	r3, [r6, #20]
 80005ce:	b005      	add	sp, #20
 80005d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080005d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80005d2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80005d6:	6843      	ldr	r3, [r0, #4]
 80005d8:	680d      	ldr	r5, [r1, #0]
 80005da:	429d      	cmp	r5, r3
 80005dc:	4604      	mov	r4, r0
 80005de:	460e      	mov	r6, r1
 80005e0:	d904      	bls.n	80005ec <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80005e2:	00a9      	lsls	r1, r5, #2
 80005e4:	68c0      	ldr	r0, [r0, #12]
 80005e6:	f004 fbb1 	bl	8004d4c <realloc>
 80005ea:	60e0      	str	r0, [r4, #12]
 80005ec:	6065      	str	r5, [r4, #4]
 80005ee:	1d32      	adds	r2, r6, #4
 80005f0:	2100      	movs	r1, #0
 80005f2:	6860      	ldr	r0, [r4, #4]
 80005f4:	4281      	cmp	r1, r0
 80005f6:	eba2 0306 	sub.w	r3, r2, r6
 80005fa:	f102 0204 	add.w	r2, r2, #4
 80005fe:	d213      	bcs.n	8000628 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 8000600:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000604:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000608:	041b      	lsls	r3, r3, #16
 800060a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800060e:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000612:	4303      	orrs	r3, r0
 8000614:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000618:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800061c:	68e0      	ldr	r0, [r4, #12]
 800061e:	60a3      	str	r3, [r4, #8]
 8000620:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000624:	3101      	adds	r1, #1
 8000626:	e7e4      	b.n	80005f2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000628:	18f2      	adds	r2, r6, r3
 800062a:	5cf1      	ldrb	r1, [r6, r3]
 800062c:	7895      	ldrb	r5, [r2, #2]
 800062e:	7850      	ldrb	r0, [r2, #1]
 8000630:	78d2      	ldrb	r2, [r2, #3]
 8000632:	042d      	lsls	r5, r5, #16
 8000634:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000638:	430d      	orrs	r5, r1
 800063a:	1d1f      	adds	r7, r3, #4
 800063c:	6923      	ldr	r3, [r4, #16]
 800063e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000642:	429d      	cmp	r5, r3
 8000644:	d904      	bls.n	8000650 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000646:	00a9      	lsls	r1, r5, #2
 8000648:	69a0      	ldr	r0, [r4, #24]
 800064a:	f004 fb7f 	bl	8004d4c <realloc>
 800064e:	61a0      	str	r0, [r4, #24]
 8000650:	6125      	str	r5, [r4, #16]
 8000652:	19f3      	adds	r3, r6, r7
 8000654:	2100      	movs	r1, #0
 8000656:	6922      	ldr	r2, [r4, #16]
 8000658:	4291      	cmp	r1, r2
 800065a:	eba3 0506 	sub.w	r5, r3, r6
 800065e:	f103 0304 	add.w	r3, r3, #4
 8000662:	d213      	bcs.n	800068c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000664:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000668:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 800066c:	0412      	lsls	r2, r2, #16
 800066e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000672:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000676:	4302      	orrs	r2, r0
 8000678:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 800067c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000680:	69a0      	ldr	r0, [r4, #24]
 8000682:	6162      	str	r2, [r4, #20]
 8000684:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000688:	3101      	adds	r1, #1
 800068a:	e7e4      	b.n	8000656 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 800068c:	1973      	adds	r3, r6, r5
 800068e:	5d72      	ldrb	r2, [r6, r5]
 8000690:	789f      	ldrb	r7, [r3, #2]
 8000692:	7859      	ldrb	r1, [r3, #1]
 8000694:	78db      	ldrb	r3, [r3, #3]
 8000696:	043f      	lsls	r7, r7, #16
 8000698:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 800069c:	4317      	orrs	r7, r2
 800069e:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 80006a2:	69e3      	ldr	r3, [r4, #28]
 80006a4:	429f      	cmp	r7, r3
 80006a6:	f105 0504 	add.w	r5, r5, #4
 80006aa:	d904      	bls.n	80006b6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80006ac:	00b9      	lsls	r1, r7, #2
 80006ae:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80006b0:	f004 fb4c 	bl	8004d4c <realloc>
 80006b4:	6260      	str	r0, [r4, #36]	; 0x24
 80006b6:	61e7      	str	r7, [r4, #28]
 80006b8:	2700      	movs	r7, #0
 80006ba:	46b8      	mov	r8, r7
 80006bc:	69e3      	ldr	r3, [r4, #28]
 80006be:	429f      	cmp	r7, r3
 80006c0:	d21a      	bcs.n	80006f8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80006c2:	1971      	adds	r1, r6, r5
 80006c4:	a801      	add	r0, sp, #4
 80006c6:	f7ff feff 	bl	80004c8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80006ca:	1d2b      	adds	r3, r5, #4
 80006cc:	9d01      	ldr	r5, [sp, #4]
 80006ce:	18f2      	adds	r2, r6, r3
 80006d0:	441d      	add	r5, r3
 80006d2:	1b91      	subs	r1, r2, r6
 80006d4:	42a9      	cmp	r1, r5
 80006d6:	d204      	bcs.n	80006e2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80006d8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80006dc:	f802 1c02 	strb.w	r1, [r2, #-2]
 80006e0:	e7f7      	b.n	80006d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80006e2:	1972      	adds	r2, r6, r5
 80006e4:	3b01      	subs	r3, #1
 80006e6:	f802 8c01 	strb.w	r8, [r2, #-1]
 80006ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80006ec:	4433      	add	r3, r6
 80006ee:	6223      	str	r3, [r4, #32]
 80006f0:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80006f4:	3701      	adds	r7, #1
 80006f6:	e7e1      	b.n	80006bc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80006f8:	4628      	mov	r0, r5
 80006fa:	b002      	add	sp, #8
 80006fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000700 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 8000700:	b530      	push	{r4, r5, lr}
 8000702:	b085      	sub	sp, #20
 8000704:	4604      	mov	r4, r0
 8000706:	4b09      	ldr	r3, [pc, #36]	; (800072c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000708:	9301      	str	r3, [sp, #4]
 800070a:	2300      	movs	r3, #0
 800070c:	9302      	str	r3, [sp, #8]
 800070e:	9303      	str	r3, [sp, #12]
 8000710:	f854 3bec 	ldr.w	r3, [r4], #236
 8000714:	aa01      	add	r2, sp, #4
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	210a      	movs	r1, #10
 800071a:	4605      	mov	r5, r0
 800071c:	4798      	blx	r3
 800071e:	4620      	mov	r0, r4
 8000720:	f003 faeb 	bl	8003cfa <mbed::Timer::read_ms()>
 8000724:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000728:	b005      	add	sp, #20
 800072a:	bd30      	pop	{r4, r5, pc}
 800072c:	080051b4 	.word	0x080051b4

08000730 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000734:	b086      	sub	sp, #24
 8000736:	4b2b      	ldr	r3, [pc, #172]	; (80007e4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000738:	9300      	str	r3, [sp, #0]
 800073a:	2200      	movs	r2, #0
 800073c:	4b2a      	ldr	r3, [pc, #168]	; (80007e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 800073e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000742:	4605      	mov	r5, r0
 8000744:	9302      	str	r3, [sp, #8]
 8000746:	9303      	str	r3, [sp, #12]
 8000748:	9304      	str	r3, [sp, #16]
 800074a:	9205      	str	r2, [sp, #20]
 800074c:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000750:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000754:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000758:	6823      	ldr	r3, [r4, #0]
 800075a:	b1bb      	cbz	r3, 800078c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 800075c:	6858      	ldr	r0, [r3, #4]
 800075e:	689a      	ldr	r2, [r3, #8]
 8000760:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000764:	681a      	ldr	r2, [r3, #0]
 8000766:	6803      	ldr	r3, [r0, #0]
 8000768:	9202      	str	r2, [sp, #8]
 800076a:	689b      	ldr	r3, [r3, #8]
 800076c:	4798      	blx	r3
 800076e:	6823      	ldr	r3, [r4, #0]
 8000770:	9003      	str	r0, [sp, #12]
 8000772:	6858      	ldr	r0, [r3, #4]
 8000774:	6803      	ldr	r3, [r0, #0]
 8000776:	68db      	ldr	r3, [r3, #12]
 8000778:	4798      	blx	r3
 800077a:	6821      	ldr	r1, [r4, #0]
 800077c:	682b      	ldr	r3, [r5, #0]
 800077e:	9004      	str	r0, [sp, #16]
 8000780:	9705      	str	r7, [sp, #20]
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	6909      	ldr	r1, [r1, #16]
 8000786:	466a      	mov	r2, sp
 8000788:	4628      	mov	r0, r5
 800078a:	4798      	blx	r3
 800078c:	3404      	adds	r4, #4
 800078e:	42b4      	cmp	r4, r6
 8000790:	d1e2      	bne.n	8000758 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000792:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000796:	f44f 7700 	mov.w	r7, #512	; 0x200
 800079a:	6820      	ldr	r0, [r4, #0]
 800079c:	b1c8      	cbz	r0, 80007d2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800079e:	6843      	ldr	r3, [r0, #4]
 80007a0:	f8ad 3004 	strh.w	r3, [sp, #4]
 80007a4:	6883      	ldr	r3, [r0, #8]
 80007a6:	9302      	str	r3, [sp, #8]
 80007a8:	6803      	ldr	r3, [r0, #0]
 80007aa:	689b      	ldr	r3, [r3, #8]
 80007ac:	4798      	blx	r3
 80007ae:	9003      	str	r0, [sp, #12]
 80007b0:	6820      	ldr	r0, [r4, #0]
 80007b2:	6803      	ldr	r3, [r0, #0]
 80007b4:	68db      	ldr	r3, [r3, #12]
 80007b6:	4798      	blx	r3
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	9004      	str	r0, [sp, #16]
 80007bc:	6820      	ldr	r0, [r4, #0]
 80007be:	f8d3 8000 	ldr.w	r8, [r3]
 80007c2:	6803      	ldr	r3, [r0, #0]
 80007c4:	9705      	str	r7, [sp, #20]
 80007c6:	685b      	ldr	r3, [r3, #4]
 80007c8:	4798      	blx	r3
 80007ca:	466a      	mov	r2, sp
 80007cc:	4601      	mov	r1, r0
 80007ce:	4628      	mov	r0, r5
 80007d0:	47c0      	blx	r8
 80007d2:	3404      	adds	r4, #4
 80007d4:	42a6      	cmp	r6, r4
 80007d6:	d1e0      	bne.n	800079a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 80007d8:	2301      	movs	r3, #1
 80007da:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 80007de:	b006      	add	sp, #24
 80007e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007e4:	080051cc 	.word	0x080051cc
 80007e8:	08005420 	.word	0x08005420

080007ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80007ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007ee:	b085      	sub	sp, #20
 80007f0:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80007f4:	4b1f      	ldr	r3, [pc, #124]	; (8000874 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80007f6:	9301      	str	r3, [sp, #4]
 80007f8:	4604      	mov	r4, r0
 80007fa:	2300      	movs	r3, #0
 80007fc:	4628      	mov	r0, r5
 80007fe:	9302      	str	r3, [sp, #8]
 8000800:	9303      	str	r3, [sp, #12]
 8000802:	460e      	mov	r6, r1
 8000804:	f003 fa79 	bl	8003cfa <mbed::Timer::read_ms()>
 8000808:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 800080c:	4631      	mov	r1, r6
 800080e:	1a87      	subs	r7, r0, r2
 8000810:	a801      	add	r0, sp, #4
 8000812:	f7ff fd09 	bl	8000228 <std_msgs::Time::deserialize(unsigned char*)>
 8000816:	9b02      	ldr	r3, [sp, #8]
 8000818:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 800081c:	fbb7 f2f6 	udiv	r2, r7, r6
 8000820:	4413      	add	r3, r2
 8000822:	9302      	str	r3, [sp, #8]
 8000824:	fb06 7212 	mls	r2, r6, r2, r7
 8000828:	9b03      	ldr	r3, [sp, #12]
 800082a:	4f13      	ldr	r7, [pc, #76]	; (8000878 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 800082c:	4628      	mov	r0, r5
 800082e:	fb07 3202 	mla	r2, r7, r2, r3
 8000832:	9203      	str	r2, [sp, #12]
 8000834:	f003 fa61 	bl	8003cfa <mbed::Timer::read_ms()>
 8000838:	9a02      	ldr	r2, [sp, #8]
 800083a:	fbb0 f3f6 	udiv	r3, r0, r6
 800083e:	3a01      	subs	r2, #1
 8000840:	1ad2      	subs	r2, r2, r3
 8000842:	9903      	ldr	r1, [sp, #12]
 8000844:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000848:	4a0c      	ldr	r2, [pc, #48]	; (800087c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 800084a:	fb06 0313 	mls	r3, r6, r3, r0
 800084e:	440a      	add	r2, r1
 8000850:	fb07 2313 	mls	r3, r7, r3, r2
 8000854:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000858:	f504 7182 	add.w	r1, r4, #260	; 0x104
 800085c:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000860:	f000 fa4e 	bl	8000d00 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000864:	4628      	mov	r0, r5
 8000866:	f003 fa48 	bl	8003cfa <mbed::Timer::read_ms()>
 800086a:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800086e:	b005      	add	sp, #20
 8000870:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000872:	bf00      	nop
 8000874:	080051b4 	.word	0x080051b4
 8000878:	000f4240 	.word	0x000f4240
 800087c:	3b9aca00 	.word	0x3b9aca00

08000880 <_GLOBAL__sub_I_nh>:
 8000880:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000882:	4c35      	ldr	r4, [pc, #212]	; (8000958 <_GLOBAL__sub_I_nh+0xd8>)
 8000884:	4b35      	ldr	r3, [pc, #212]	; (800095c <_GLOBAL__sub_I_nh+0xdc>)
 8000886:	4620      	mov	r0, r4
 8000888:	2500      	movs	r5, #0
 800088a:	f840 3b04 	str.w	r3, [r0], #4
 800088e:	2304      	movs	r3, #4
 8000890:	2203      	movs	r2, #3
 8000892:	2102      	movs	r1, #2
 8000894:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000898:	f44f 7380 	mov.w	r3, #256	; 0x100
 800089c:	f000 fb26 	bl	8000eec <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 80008a0:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 80008a4:	f003 fa3f 	bl	8003d26 <mbed::Timer::Timer()>
 80008a8:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 80008ac:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 80008b0:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 80008b4:	f003 f9f5 	bl	8003ca2 <mbed::Timer::start()>
 80008b8:	4b29      	ldr	r3, [pc, #164]	; (8000960 <_GLOBAL__sub_I_nh+0xe0>)
 80008ba:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 80008be:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 80008c2:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 80008c6:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 80008ca:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 80008ce:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 80008d2:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 80008d6:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 80008da:	462a      	mov	r2, r5
 80008dc:	1963      	adds	r3, r4, r5
 80008de:	3504      	adds	r5, #4
 80008e0:	2d64      	cmp	r5, #100	; 0x64
 80008e2:	f8c3 250c 	str.w	r2, [r3, #1292]	; 0x50c
 80008e6:	d1f9      	bne.n	80008dc <_GLOBAL__sub_I_nh+0x5c>
 80008e8:	2300      	movs	r3, #0
 80008ea:	4619      	mov	r1, r3
 80008ec:	18e2      	adds	r2, r4, r3
 80008ee:	3304      	adds	r3, #4
 80008f0:	2b64      	cmp	r3, #100	; 0x64
 80008f2:	f8c2 1570 	str.w	r1, [r2, #1392]	; 0x570
 80008f6:	d1f9      	bne.n	80008ec <_GLOBAL__sub_I_nh+0x6c>
 80008f8:	2300      	movs	r3, #0
 80008fa:	4619      	mov	r1, r3
 80008fc:	18e2      	adds	r2, r4, r3
 80008fe:	3301      	adds	r3, #1
 8000900:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000904:	f882 110c 	strb.w	r1, [r2, #268]	; 0x10c
 8000908:	d1f8      	bne.n	80008fc <_GLOBAL__sub_I_nh+0x7c>
 800090a:	2300      	movs	r3, #0
 800090c:	461d      	mov	r5, r3
 800090e:	18e2      	adds	r2, r4, r3
 8000910:	3301      	adds	r3, #1
 8000912:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000916:	f882 530c 	strb.w	r5, [r2, #780]	; 0x30c
 800091a:	d1f8      	bne.n	800090e <_GLOBAL__sub_I_nh+0x8e>
 800091c:	4a11      	ldr	r2, [pc, #68]	; (8000964 <_GLOBAL__sub_I_nh+0xe4>)
 800091e:	4912      	ldr	r1, [pc, #72]	; (8000968 <_GLOBAL__sub_I_nh+0xe8>)
 8000920:	480d      	ldr	r0, [pc, #52]	; (8000958 <_GLOBAL__sub_I_nh+0xd8>)
 8000922:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8000926:	f003 fc4d 	bl	80041c4 <__aeabi_atexit>
 800092a:	221c      	movs	r2, #28
 800092c:	2100      	movs	r1, #0
 800092e:	480f      	ldr	r0, [pc, #60]	; (800096c <_GLOBAL__sub_I_nh+0xec>)
 8000930:	f003 ff9b 	bl	800486a <memset>
 8000934:	2105      	movs	r1, #5
 8000936:	480d      	ldr	r0, [pc, #52]	; (800096c <_GLOBAL__sub_I_nh+0xec>)
 8000938:	f000 fc0a 	bl	8001150 <gpio_init_out>
 800093c:	4b0c      	ldr	r3, [pc, #48]	; (8000970 <_GLOBAL__sub_I_nh+0xf0>)
 800093e:	4a0d      	ldr	r2, [pc, #52]	; (8000974 <_GLOBAL__sub_I_nh+0xf4>)
 8000940:	601a      	str	r2, [r3, #0]
 8000942:	4a0d      	ldr	r2, [pc, #52]	; (8000978 <_GLOBAL__sub_I_nh+0xf8>)
 8000944:	60da      	str	r2, [r3, #12]
 8000946:	4a0d      	ldr	r2, [pc, #52]	; (800097c <_GLOBAL__sub_I_nh+0xfc>)
 8000948:	615a      	str	r2, [r3, #20]
 800094a:	2201      	movs	r2, #1
 800094c:	619a      	str	r2, [r3, #24]
 800094e:	4a0c      	ldr	r2, [pc, #48]	; (8000980 <_GLOBAL__sub_I_nh+0x100>)
 8000950:	611d      	str	r5, [r3, #16]
 8000952:	609a      	str	r2, [r3, #8]
 8000954:	b003      	add	sp, #12
 8000956:	bd30      	pop	{r4, r5, pc}
 8000958:	20000268 	.word	0x20000268
 800095c:	0800522c 	.word	0x0800522c
 8000960:	080051fc 	.word	0x080051fc
 8000964:	20000194 	.word	0x20000194
 8000968:	08000cc1 	.word	0x08000cc1
 800096c:	2000024c 	.word	0x2000024c
 8000970:	2000088c 	.word	0x2000088c
 8000974:	08005240 	.word	0x08005240
 8000978:	08005214 	.word	0x08005214
 800097c:	08000305 	.word	0x08000305
 8000980:	08005250 	.word	0x08005250

08000984 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000984:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000988:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 800098c:	4604      	mov	r4, r0
 800098e:	4640      	mov	r0, r8
 8000990:	f003 f9b3 	bl	8003cfa <mbed::Timer::read_ms()>
 8000994:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000998:	f642 22f8 	movw	r2, #11000	; 0x2af8
 800099c:	1ac3      	subs	r3, r0, r3
 800099e:	4293      	cmp	r3, r2
 80009a0:	bf84      	itt	hi
 80009a2:	2300      	movhi	r3, #0
 80009a4:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 80009a8:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 80009ac:	4605      	mov	r5, r0
 80009ae:	b133      	cbz	r3, 80009be <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 80009b0:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 80009b4:	4283      	cmp	r3, r0
 80009b6:	bf3c      	itt	cc
 80009b8:	2300      	movcc	r3, #0
 80009ba:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 80009be:	f104 0904 	add.w	r9, r4, #4
 80009c2:	2600      	movs	r6, #0
 80009c4:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 80009c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80009cc:	b9ab      	cbnz	r3, 80009fa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 80009ce:	4648      	mov	r0, r9
 80009d0:	f000 f9a4 	bl	8000d1c <BufferedSerial::readable()>
 80009d4:	b9e8      	cbnz	r0, 8000a12 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 80009d6:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 80009da:	b160      	cbz	r0, 80009f6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 80009dc:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 80009e0:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80009e4:	1aeb      	subs	r3, r5, r3
 80009e6:	4293      	cmp	r3, r2
 80009e8:	d904      	bls.n	80009f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 80009ea:	4620      	mov	r0, r4
 80009ec:	f7ff fe88 	bl	8000700 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 80009f0:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 80009f4:	2000      	movs	r0, #0
 80009f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80009fa:	4640      	mov	r0, r8
 80009fc:	f003 f97d 	bl	8003cfa <mbed::Timer::read_ms()>
 8000a00:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000a04:	1b40      	subs	r0, r0, r5
 8000a06:	4298      	cmp	r0, r3
 8000a08:	d9e1      	bls.n	80009ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000a0a:	f06f 0001 	mvn.w	r0, #1
 8000a0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000a12:	4648      	mov	r0, r9
 8000a14:	f000 f98c 	bl	8000d30 <BufferedSerial::getc()>
 8000a18:	2800      	cmp	r0, #0
 8000a1a:	dbdc      	blt.n	80009d6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000a1c:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000a20:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8000a24:	4403      	add	r3, r0
 8000a26:	f1ba 0f07 	cmp.w	r10, #7
 8000a2a:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000a2e:	d112      	bne.n	8000a56 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000a30:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000a34:	1c5a      	adds	r2, r3, #1
 8000a36:	4423      	add	r3, r4
 8000a38:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000a3c:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000a40:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000a44:	3b01      	subs	r3, #1
 8000a46:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000a4a:	2b00      	cmp	r3, #0
 8000a4c:	d1bc      	bne.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a4e:	2308      	movs	r3, #8
 8000a50:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a54:	e7b8      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a56:	f1ba 0f00 	cmp.w	r10, #0
 8000a5a:	d114      	bne.n	8000a86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000a5c:	28ff      	cmp	r0, #255	; 0xff
 8000a5e:	d107      	bne.n	8000a70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000a60:	2301      	movs	r3, #1
 8000a62:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000a66:	f105 0314 	add.w	r3, r5, #20
 8000a6a:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000a6e:	e7ab      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a70:	4640      	mov	r0, r8
 8000a72:	f003 f942 	bl	8003cfa <mbed::Timer::read_ms()>
 8000a76:	f241 3388 	movw	r3, #5000	; 0x1388
 8000a7a:	1b40      	subs	r0, r0, r5
 8000a7c:	4298      	cmp	r0, r3
 8000a7e:	d9a3      	bls.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000a80:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8000a84:	e7c1      	b.n	8000a0a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000a86:	f1ba 0f01 	cmp.w	r10, #1
 8000a8a:	d10d      	bne.n	8000aa8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000a8c:	28fe      	cmp	r0, #254	; 0xfe
 8000a8e:	d101      	bne.n	8000a94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000a90:	2302      	movs	r3, #2
 8000a92:	e7dd      	b.n	8000a50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000a94:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000a98:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000a9c:	2b00      	cmp	r3, #0
 8000a9e:	d193      	bne.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000aa0:	4620      	mov	r0, r4
 8000aa2:	f7ff fe2d 	bl	8000700 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000aa6:	e78f      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000aa8:	f1ba 0f02 	cmp.w	r10, #2
 8000aac:	d109      	bne.n	8000ac2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000aae:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000ab2:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000ab6:	2303      	movs	r3, #3
 8000ab8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000abc:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000ac0:	e782      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ac2:	f1ba 0f03 	cmp.w	r10, #3
 8000ac6:	d107      	bne.n	8000ad8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000ac8:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000acc:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000ad0:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000ad4:	2304      	movs	r3, #4
 8000ad6:	e7bb      	b.n	8000a50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000ad8:	f1ba 0f04 	cmp.w	r10, #4
 8000adc:	d10b      	bne.n	8000af6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000ade:	425a      	negs	r2, r3
 8000ae0:	b2d2      	uxtb	r2, r2
 8000ae2:	b2db      	uxtb	r3, r3
 8000ae4:	bf58      	it	pl
 8000ae6:	4253      	negpl	r3, r2
 8000ae8:	2bff      	cmp	r3, #255	; 0xff
 8000aea:	d101      	bne.n	8000af0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000aec:	2305      	movs	r3, #5
 8000aee:	e7af      	b.n	8000a50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000af0:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000af4:	e768      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000af6:	f1ba 0f05 	cmp.w	r10, #5
 8000afa:	d103      	bne.n	8000b04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000afc:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000b00:	2306      	movs	r3, #6
 8000b02:	e7d9      	b.n	8000ab8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000b04:	f1ba 0f06 	cmp.w	r10, #6
 8000b08:	d10b      	bne.n	8000b22 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000b0a:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000b0e:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000b12:	2307      	movs	r3, #7
 8000b14:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000b18:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000b1c:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000b20:	e793      	b.n	8000a4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000b22:	f1ba 0f08 	cmp.w	r10, #8
 8000b26:	f47f af4f 	bne.w	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b2a:	425a      	negs	r2, r3
 8000b2c:	b2d2      	uxtb	r2, r2
 8000b2e:	b2db      	uxtb	r3, r3
 8000b30:	bf58      	it	pl
 8000b32:	4253      	negpl	r3, r2
 8000b34:	2bff      	cmp	r3, #255	; 0xff
 8000b36:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000b3a:	f47f af45 	bne.w	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b3e:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000b42:	b96b      	cbnz	r3, 8000b60 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000b44:	4620      	mov	r0, r4
 8000b46:	f7ff fddb 	bl	8000700 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000b4a:	4620      	mov	r0, r4
 8000b4c:	f7ff fdf0 	bl	8000730 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000b50:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000b54:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000b58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000b60:	2b0a      	cmp	r3, #10
 8000b62:	d104      	bne.n	8000b6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000b64:	4639      	mov	r1, r7
 8000b66:	4620      	mov	r0, r4
 8000b68:	f7ff fe40 	bl	80007ec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000b6c:	e72c      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b6e:	2b06      	cmp	r3, #6
 8000b70:	d108      	bne.n	8000b84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000b72:	4639      	mov	r1, r7
 8000b74:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000b78:	f7ff fd2b 	bl	80005d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000b7c:	2301      	movs	r3, #1
 8000b7e:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000b82:	e721      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b84:	2b0b      	cmp	r3, #11
 8000b86:	d102      	bne.n	8000b8e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000b88:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000b8c:	e71c      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b8e:	33f8      	adds	r3, #248	; 0xf8
 8000b90:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000b94:	2800      	cmp	r0, #0
 8000b96:	f43f af17 	beq.w	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000b9a:	6803      	ldr	r3, [r0, #0]
 8000b9c:	4639      	mov	r1, r7
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	4798      	blx	r3
 8000ba2:	e711      	b.n	80009c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000ba4 <main>:
 8000ba4:	4c14      	ldr	r4, [pc, #80]	; (8000bf8 <main+0x54>)
 8000ba6:	b508      	push	{r3, lr}
 8000ba8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000bac:	1d20      	adds	r0, r4, #4
 8000bae:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 8000bb2:	f003 f900 	bl	8003db6 <mbed::SerialBase::baud(int)>
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000bbc:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000bc0:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000bc4:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000bc8:	f204 526c 	addw	r2, r4, #1388	; 0x56c
 8000bcc:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000bd0:	b971      	cbnz	r1, 8000bf0 <main+0x4c>
 8000bd2:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8000bd6:	4a09      	ldr	r2, [pc, #36]	; (8000bfc <main+0x58>)
 8000bd8:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8000bdc:	3364      	adds	r3, #100	; 0x64
 8000bde:	6053      	str	r3, [r2, #4]
 8000be0:	4c05      	ldr	r4, [pc, #20]	; (8000bf8 <main+0x54>)
 8000be2:	4620      	mov	r0, r4
 8000be4:	f7ff fece 	bl	8000984 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000be8:	20c8      	movs	r0, #200	; 0xc8
 8000bea:	f003 f9e9 	bl	8003fc0 <wait_ms>
 8000bee:	e7f8      	b.n	8000be2 <main+0x3e>
 8000bf0:	3301      	adds	r3, #1
 8000bf2:	2b19      	cmp	r3, #25
 8000bf4:	d1ea      	bne.n	8000bcc <main+0x28>
 8000bf6:	e7f3      	b.n	8000be0 <main+0x3c>
 8000bf8:	20000268 	.word	0x20000268
 8000bfc:	2000088c 	.word	0x2000088c

08000c00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c02:	2963      	cmp	r1, #99	; 0x63
 8000c04:	b085      	sub	sp, #20
 8000c06:	4604      	mov	r4, r0
 8000c08:	460e      	mov	r6, r1
 8000c0a:	dd03      	ble.n	8000c14 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000c0c:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000c10:	2d00      	cmp	r5, #0
 8000c12:	d04d      	beq.n	8000cb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000c14:	6813      	ldr	r3, [r2, #0]
 8000c16:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000c1a:	681b      	ldr	r3, [r3, #0]
 8000c1c:	4610      	mov	r0, r2
 8000c1e:	4798      	blx	r3
 8000c20:	23ff      	movs	r3, #255	; 0xff
 8000c22:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000c26:	23fe      	movs	r3, #254	; 0xfe
 8000c28:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000c2c:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000c30:	b2c3      	uxtb	r3, r0
 8000c32:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000c36:	4413      	add	r3, r2
 8000c38:	43db      	mvns	r3, r3
 8000c3a:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000c3e:	f346 2607 	sbfx	r6, r6, #8, #8
 8000c42:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000c46:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000c4a:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000c4e:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000c52:	2205      	movs	r2, #5
 8000c54:	2300      	movs	r3, #0
 8000c56:	1d86      	adds	r6, r0, #6
 8000c58:	42b2      	cmp	r2, r6
 8000c5a:	dc04      	bgt.n	8000c66 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000c5c:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000c60:	3201      	adds	r2, #1
 8000c62:	442b      	add	r3, r5
 8000c64:	e7f8      	b.n	8000c58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000c66:	f100 0508 	add.w	r5, r0, #8
 8000c6a:	4420      	add	r0, r4
 8000c6c:	43db      	mvns	r3, r3
 8000c6e:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000c72:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000c76:	dc0c      	bgt.n	8000c92 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000c78:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000c7c:	463e      	mov	r6, r7
 8000c7e:	3404      	adds	r4, #4
 8000c80:	1bf3      	subs	r3, r6, r7
 8000c82:	429d      	cmp	r5, r3
 8000c84:	dd14      	ble.n	8000cb0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000c86:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000c8a:	4620      	mov	r0, r4
 8000c8c:	f000 f99e 	bl	8000fcc <BufferedSerial::putc(int)>
 8000c90:	e7f6      	b.n	8000c80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000c92:	4b09      	ldr	r3, [pc, #36]	; (8000cb8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000c94:	9301      	str	r3, [sp, #4]
 8000c96:	2303      	movs	r3, #3
 8000c98:	f88d 3008 	strb.w	r3, [sp, #8]
 8000c9c:	4b07      	ldr	r3, [pc, #28]	; (8000cbc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000c9e:	9303      	str	r3, [sp, #12]
 8000ca0:	6823      	ldr	r3, [r4, #0]
 8000ca2:	aa01      	add	r2, sp, #4
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	2107      	movs	r1, #7
 8000ca8:	4620      	mov	r0, r4
 8000caa:	4798      	blx	r3
 8000cac:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000cb0:	4628      	mov	r0, r5
 8000cb2:	b005      	add	sp, #20
 8000cb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cb6:	bf00      	nop
 8000cb8:	080051e4 	.word	0x080051e4
 8000cbc:	08005301 	.word	0x08005301

08000cc0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8000cc0:	b510      	push	{r4, lr}
 8000cc2:	4b04      	ldr	r3, [pc, #16]	; (8000cd4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8000cc4:	4604      	mov	r4, r0
 8000cc6:	f840 3b04 	str.w	r3, [r0], #4
 8000cca:	f000 f8c3 	bl	8000e54 <BufferedSerial::~BufferedSerial()>
 8000cce:	4620      	mov	r0, r4
 8000cd0:	bd10      	pop	{r4, pc}
 8000cd2:	bf00      	nop
 8000cd4:	0800522c 	.word	0x0800522c

08000cd8 <_start>:
 8000cd8:	4807      	ldr	r0, [pc, #28]	; (8000cf8 <_start+0x20>)
 8000cda:	4a08      	ldr	r2, [pc, #32]	; (8000cfc <_start+0x24>)
 8000cdc:	b508      	push	{r3, lr}
 8000cde:	1a12      	subs	r2, r2, r0
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	f003 fdc2 	bl	800486a <memset>
 8000ce6:	f003 fa2b 	bl	8004140 <software_init_hook>
 8000cea:	f003 fd11 	bl	8004710 <__libc_init_array>
 8000cee:	f003 fa2e 	bl	800414e <__wrap_main>
 8000cf2:	f003 fa69 	bl	80041c8 <__wrap_exit>
 8000cf6:	bf00      	nop
 8000cf8:	20000230 	.word	0x20000230
 8000cfc:	200027c8 	.word	0x200027c8

08000d00 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000d00:	b530      	push	{r4, r5, lr}
 8000d02:	6802      	ldr	r2, [r0, #0]
 8000d04:	680d      	ldr	r5, [r1, #0]
 8000d06:	4c04      	ldr	r4, [pc, #16]	; (8000d18 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000d08:	fbb5 f3f4 	udiv	r3, r5, r4
 8000d0c:	441a      	add	r2, r3
 8000d0e:	fb04 5313 	mls	r3, r4, r3, r5
 8000d12:	6002      	str	r2, [r0, #0]
 8000d14:	600b      	str	r3, [r1, #0]
 8000d16:	bd30      	pop	{r4, r5, pc}
 8000d18:	3b9aca00 	.word	0x3b9aca00

08000d1c <BufferedSerial::readable()>:
 8000d1c:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000d20:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000d24:	1a10      	subs	r0, r2, r0
 8000d26:	bf18      	it	ne
 8000d28:	2001      	movne	r0, #1
 8000d2a:	4770      	bx	lr

08000d2c <BufferedSerial::writeable()>:
 8000d2c:	2001      	movs	r0, #1
 8000d2e:	4770      	bx	lr

08000d30 <BufferedSerial::getc()>:
 8000d30:	b510      	push	{r4, lr}
 8000d32:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000d36:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	1c50      	adds	r0, r2, #1
 8000d3e:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000d42:	5c88      	ldrb	r0, [r1, r2]
 8000d44:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000d48:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000d4c:	3a01      	subs	r2, #1
 8000d4e:	fbb4 f1f2 	udiv	r1, r4, r2
 8000d52:	fb02 4211 	mls	r2, r2, r1, r4
 8000d56:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000d5a:	bd10      	pop	{r4, pc}

08000d5c <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000d5c:	4603      	mov	r3, r0
 8000d5e:	b110      	cbz	r0, 8000d66 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8000d60:	c907      	ldmia	r1, {r0, r1, r2}
 8000d62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8000d66:	4770      	bx	lr

08000d68 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8000d68:	4770      	bx	lr

08000d6a <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8000d6a:	6842      	ldr	r2, [r0, #4]
 8000d6c:	6881      	ldr	r1, [r0, #8]
 8000d6e:	6803      	ldr	r3, [r0, #0]
 8000d70:	f012 0f01 	tst.w	r2, #1
 8000d74:	ea4f 0262 	mov.w	r2, r2, asr #1
 8000d78:	bf1c      	itt	ne
 8000d7a:	5888      	ldrne	r0, [r1, r2]
 8000d7c:	58c3      	ldrne	r3, [r0, r3]
 8000d7e:	1888      	adds	r0, r1, r2
 8000d80:	4718      	bx	r3

08000d82 <mbed::Callback<void ()>::~Callback()>:
 8000d82:	68c3      	ldr	r3, [r0, #12]
 8000d84:	b510      	push	{r4, lr}
 8000d86:	4604      	mov	r4, r0
 8000d88:	b10b      	cbz	r3, 8000d8e <mbed::Callback<void ()>::~Callback()+0xc>
 8000d8a:	689b      	ldr	r3, [r3, #8]
 8000d8c:	4798      	blx	r3
 8000d8e:	4620      	mov	r0, r4
 8000d90:	bd10      	pop	{r4, pc}

08000d92 <BufferedSerial::txIrq()>:
 8000d92:	b530      	push	{r4, r5, lr}
 8000d94:	4604      	mov	r4, r0
 8000d96:	b085      	sub	sp, #20
 8000d98:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000d9c:	4628      	mov	r0, r5
 8000d9e:	f002 f951 	bl	8003044 <serial_writable>
 8000da2:	b330      	cbz	r0, 8000df2 <BufferedSerial::txIrq()+0x60>
 8000da4:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8000da8:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000dac:	429a      	cmp	r2, r3
 8000dae:	d016      	beq.n	8000dde <BufferedSerial::txIrq()+0x4c>
 8000db0:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8000db4:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8000db8:	1c59      	adds	r1, r3, #1
 8000dba:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8000dbe:	5cd1      	ldrb	r1, [r2, r3]
 8000dc0:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8000dc4:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8000dc8:	3b01      	subs	r3, #1
 8000dca:	fbb0 f2f3 	udiv	r2, r0, r3
 8000dce:	fb03 0312 	mls	r3, r3, r2, r0
 8000dd2:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8000dd6:	4628      	mov	r0, r5
 8000dd8:	f002 f93e 	bl	8003058 <serial_putc>
 8000ddc:	e7de      	b.n	8000d9c <BufferedSerial::txIrq()+0xa>
 8000dde:	2300      	movs	r3, #0
 8000de0:	4620      	mov	r0, r4
 8000de2:	2201      	movs	r2, #1
 8000de4:	4669      	mov	r1, sp
 8000de6:	9303      	str	r3, [sp, #12]
 8000de8:	f003 f862 	bl	8003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000dec:	4668      	mov	r0, sp
 8000dee:	f7ff ffc8 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8000df2:	b005      	add	sp, #20
 8000df4:	bd30      	pop	{r4, r5, pc}

08000df6 <mbed::Callback<void (int)>::~Callback()>:
 8000df6:	68c3      	ldr	r3, [r0, #12]
 8000df8:	b510      	push	{r4, lr}
 8000dfa:	4604      	mov	r4, r0
 8000dfc:	b10b      	cbz	r3, 8000e02 <mbed::Callback<void (int)>::~Callback()+0xc>
 8000dfe:	689b      	ldr	r3, [r3, #8]
 8000e00:	4798      	blx	r3
 8000e02:	4620      	mov	r0, r4
 8000e04:	bd10      	pop	{r4, pc}
	...

08000e08 <mbed::SerialBase::~SerialBase()>:
 8000e08:	b570      	push	{r4, r5, r6, lr}
 8000e0a:	4606      	mov	r6, r0
 8000e0c:	4b0b      	ldr	r3, [pc, #44]	; (8000e3c <mbed::SerialBase::~SerialBase()+0x34>)
 8000e0e:	f846 3b98 	str.w	r3, [r6], #152
 8000e12:	4604      	mov	r4, r0
 8000e14:	b146      	cbz	r6, 8000e28 <mbed::SerialBase::~SerialBase()+0x20>
 8000e16:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8000e1a:	42b5      	cmp	r5, r6
 8000e1c:	d004      	beq.n	8000e28 <mbed::SerialBase::~SerialBase()+0x20>
 8000e1e:	3d10      	subs	r5, #16
 8000e20:	4628      	mov	r0, r5
 8000e22:	f7ff ffae 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8000e26:	e7f8      	b.n	8000e1a <mbed::SerialBase::~SerialBase()+0x12>
 8000e28:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8000e2c:	f7ff ffe3 	bl	8000df6 <mbed::Callback<void (int)>::~Callback()>
 8000e30:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8000e34:	f7ff ffdf 	bl	8000df6 <mbed::Callback<void (int)>::~Callback()>
 8000e38:	4620      	mov	r0, r4
 8000e3a:	bd70      	pop	{r4, r5, r6, pc}
 8000e3c:	08005684 	.word	0x08005684

08000e40 <mbed::SerialBase::~SerialBase()>:
 8000e40:	b510      	push	{r4, lr}
 8000e42:	4604      	mov	r4, r0
 8000e44:	f7ff ffe0 	bl	8000e08 <mbed::SerialBase::~SerialBase()>
 8000e48:	4620      	mov	r0, r4
 8000e4a:	f003 f9d9 	bl	8004200 <operator delete(void*)>
 8000e4e:	4620      	mov	r0, r4
 8000e50:	bd10      	pop	{r4, pc}
	...

08000e54 <BufferedSerial::~BufferedSerial()>:
 8000e54:	b530      	push	{r4, r5, lr}
 8000e56:	4b13      	ldr	r3, [pc, #76]	; (8000ea4 <BufferedSerial::~BufferedSerial()+0x50>)
 8000e58:	6003      	str	r3, [r0, #0]
 8000e5a:	b085      	sub	sp, #20
 8000e5c:	2500      	movs	r5, #0
 8000e5e:	462a      	mov	r2, r5
 8000e60:	4669      	mov	r1, sp
 8000e62:	4604      	mov	r4, r0
 8000e64:	9503      	str	r5, [sp, #12]
 8000e66:	f003 f823 	bl	8003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000e6a:	4668      	mov	r0, sp
 8000e6c:	f7ff ff89 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8000e70:	2201      	movs	r2, #1
 8000e72:	4669      	mov	r1, sp
 8000e74:	4620      	mov	r0, r4
 8000e76:	9503      	str	r5, [sp, #12]
 8000e78:	f003 f81a 	bl	8003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000e7c:	4668      	mov	r0, sp
 8000e7e:	f7ff ff80 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8000e82:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000e86:	f000 f923 	bl	80010d0 <Buffer<char>::~Buffer()>
 8000e8a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000e8e:	f000 f91f 	bl	80010d0 <Buffer<char>::~Buffer()>
 8000e92:	4b05      	ldr	r3, [pc, #20]	; (8000ea8 <BufferedSerial::~BufferedSerial()+0x54>)
 8000e94:	6023      	str	r3, [r4, #0]
 8000e96:	4620      	mov	r0, r4
 8000e98:	f7ff ffb6 	bl	8000e08 <mbed::SerialBase::~SerialBase()>
 8000e9c:	4620      	mov	r0, r4
 8000e9e:	b005      	add	sp, #20
 8000ea0:	bd30      	pop	{r4, r5, pc}
 8000ea2:	bf00      	nop
 8000ea4:	0800542c 	.word	0x0800542c
 8000ea8:	08005660 	.word	0x08005660

08000eac <BufferedSerial::~BufferedSerial()>:
 8000eac:	b510      	push	{r4, lr}
 8000eae:	4604      	mov	r4, r0
 8000eb0:	f7ff ffd0 	bl	8000e54 <BufferedSerial::~BufferedSerial()>
 8000eb4:	4620      	mov	r0, r4
 8000eb6:	f003 f9a3 	bl	8004200 <operator delete(void*)>
 8000eba:	4620      	mov	r0, r4
 8000ebc:	bd10      	pop	{r4, pc}
	...

08000ec0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8000ec0:	b510      	push	{r4, lr}
 8000ec2:	b086      	sub	sp, #24
 8000ec4:	e88d 000c 	stmia.w	sp, {r2, r3}
 8000ec8:	9b01      	ldr	r3, [sp, #4]
 8000eca:	9202      	str	r2, [sp, #8]
 8000ecc:	9303      	str	r3, [sp, #12]
 8000ece:	9104      	str	r1, [sp, #16]
 8000ed0:	4b05      	ldr	r3, [pc, #20]	; (8000ee8 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8000ed2:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8000ed6:	9305      	str	r3, [sp, #20]
 8000ed8:	a902      	add	r1, sp, #8
 8000eda:	f002 ffe9 	bl	8003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000ede:	a802      	add	r0, sp, #8
 8000ee0:	f7ff ff4f 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8000ee4:	b006      	add	sp, #24
 8000ee6:	bd10      	pop	{r4, pc}
 8000ee8:	0800539c 	.word	0x0800539c

08000eec <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8000eec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000eee:	4604      	mov	r4, r0
 8000ef0:	461d      	mov	r5, r3
 8000ef2:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000ef6:	9e08      	ldr	r6, [sp, #32]
 8000ef8:	f002 feb6 	bl	8003c68 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8000efc:	4620      	mov	r0, r4
 8000efe:	4b0f      	ldr	r3, [pc, #60]	; (8000f3c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8000f00:	f840 3bbc 	str.w	r3, [r0], #188
 8000f04:	4629      	mov	r1, r5
 8000f06:	f000 f8f2 	bl	80010ee <Buffer<char>::Buffer(unsigned long)>
 8000f0a:	fb06 f105 	mul.w	r1, r6, r5
 8000f0e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8000f12:	f000 f8ec 	bl	80010ee <Buffer<char>::Buffer(unsigned long)>
 8000f16:	4b0a      	ldr	r3, [pc, #40]	; (8000f40 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8000f18:	9302      	str	r3, [sp, #8]
 8000f1a:	2300      	movs	r3, #0
 8000f1c:	9303      	str	r3, [sp, #12]
 8000f1e:	9300      	str	r3, [sp, #0]
 8000f20:	ab04      	add	r3, sp, #16
 8000f22:	4620      	mov	r0, r4
 8000f24:	e913 000c 	ldmdb	r3, {r2, r3}
 8000f28:	4621      	mov	r1, r4
 8000f2a:	f7ff ffc9 	bl	8000ec0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8000f2e:	4620      	mov	r0, r4
 8000f30:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 8000f34:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8000f38:	b004      	add	sp, #16
 8000f3a:	bd70      	pop	{r4, r5, r6, pc}
 8000f3c:	0800542c 	.word	0x0800542c
 8000f40:	08000fab 	.word	0x08000fab

08000f44 <BufferedSerial::prime()>:
 8000f44:	b570      	push	{r4, r5, r6, lr}
 8000f46:	4604      	mov	r4, r0
 8000f48:	b086      	sub	sp, #24
 8000f4a:	304c      	adds	r0, #76	; 0x4c
 8000f4c:	f002 f87a 	bl	8003044 <serial_writable>
 8000f50:	b1c0      	cbz	r0, 8000f84 <BufferedSerial::prime()+0x40>
 8000f52:	ad02      	add	r5, sp, #8
 8000f54:	2201      	movs	r2, #1
 8000f56:	4629      	mov	r1, r5
 8000f58:	2600      	movs	r6, #0
 8000f5a:	4620      	mov	r0, r4
 8000f5c:	9605      	str	r6, [sp, #20]
 8000f5e:	f002 ffa7 	bl	8003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8000f62:	4628      	mov	r0, r5
 8000f64:	f7ff ff0d 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8000f68:	4620      	mov	r0, r4
 8000f6a:	f7ff ff12 	bl	8000d92 <BufferedSerial::txIrq()>
 8000f6e:	4b06      	ldr	r3, [pc, #24]	; (8000f88 <BufferedSerial::prime()+0x44>)
 8000f70:	9302      	str	r3, [sp, #8]
 8000f72:	2301      	movs	r3, #1
 8000f74:	9603      	str	r6, [sp, #12]
 8000f76:	9300      	str	r3, [sp, #0]
 8000f78:	e895 000c 	ldmia.w	r5, {r2, r3}
 8000f7c:	4621      	mov	r1, r4
 8000f7e:	4620      	mov	r0, r4
 8000f80:	f7ff ff9e 	bl	8000ec0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8000f84:	b006      	add	sp, #24
 8000f86:	bd70      	pop	{r4, r5, r6, pc}
 8000f88:	08000d93 	.word	0x08000d93

08000f8c <Buffer<char>::put(char)>:
 8000f8c:	6843      	ldr	r3, [r0, #4]
 8000f8e:	6802      	ldr	r2, [r0, #0]
 8000f90:	b510      	push	{r4, lr}
 8000f92:	1c5c      	adds	r4, r3, #1
 8000f94:	6044      	str	r4, [r0, #4]
 8000f96:	54d1      	strb	r1, [r2, r3]
 8000f98:	68c3      	ldr	r3, [r0, #12]
 8000f9a:	6841      	ldr	r1, [r0, #4]
 8000f9c:	3b01      	subs	r3, #1
 8000f9e:	fbb1 f2f3 	udiv	r2, r1, r3
 8000fa2:	fb03 1312 	mls	r3, r3, r2, r1
 8000fa6:	6043      	str	r3, [r0, #4]
 8000fa8:	bd10      	pop	{r4, pc}

08000faa <BufferedSerial::rxIrq()>:
 8000faa:	b538      	push	{r3, r4, r5, lr}
 8000fac:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8000fb0:	4604      	mov	r4, r0
 8000fb2:	4628      	mov	r0, r5
 8000fb4:	f002 f82a 	bl	800300c <serial_readable>
 8000fb8:	b138      	cbz	r0, 8000fca <BufferedSerial::rxIrq()+0x20>
 8000fba:	4628      	mov	r0, r5
 8000fbc:	f002 f830 	bl	8003020 <serial_getc>
 8000fc0:	b2c1      	uxtb	r1, r0
 8000fc2:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8000fc6:	f7ff ffe1 	bl	8000f8c <Buffer<char>::put(char)>
 8000fca:	bd38      	pop	{r3, r4, r5, pc}

08000fcc <BufferedSerial::putc(int)>:
 8000fcc:	b538      	push	{r3, r4, r5, lr}
 8000fce:	4605      	mov	r5, r0
 8000fd0:	460c      	mov	r4, r1
 8000fd2:	30cc      	adds	r0, #204	; 0xcc
 8000fd4:	b2c9      	uxtb	r1, r1
 8000fd6:	f7ff ffd9 	bl	8000f8c <Buffer<char>::put(char)>
 8000fda:	4628      	mov	r0, r5
 8000fdc:	f7ff ffb2 	bl	8000f44 <BufferedSerial::prime()>
 8000fe0:	4620      	mov	r0, r4
 8000fe2:	bd38      	pop	{r3, r4, r5, pc}

08000fe4 <BufferedSerial::puts(char const*)>:
 8000fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fe8:	4607      	mov	r7, r0
 8000fea:	460c      	mov	r4, r1
 8000fec:	b1b1      	cbz	r1, 800101c <BufferedSerial::puts(char const*)+0x38>
 8000fee:	460d      	mov	r5, r1
 8000ff0:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8000ff4:	462e      	mov	r6, r5
 8000ff6:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000ffa:	b121      	cbz	r1, 8001006 <BufferedSerial::puts(char const*)+0x22>
 8000ffc:	4640      	mov	r0, r8
 8000ffe:	f7ff ffc5 	bl	8000f8c <Buffer<char>::put(char)>
 8001002:	4635      	mov	r5, r6
 8001004:	e7f6      	b.n	8000ff4 <BufferedSerial::puts(char const*)+0x10>
 8001006:	210a      	movs	r1, #10
 8001008:	4640      	mov	r0, r8
 800100a:	f7ff ffbf 	bl	8000f8c <Buffer<char>::put(char)>
 800100e:	1b2c      	subs	r4, r5, r4
 8001010:	4638      	mov	r0, r7
 8001012:	f7ff ff97 	bl	8000f44 <BufferedSerial::prime()>
 8001016:	1c60      	adds	r0, r4, #1
 8001018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800101c:	4608      	mov	r0, r1
 800101e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001022 <BufferedSerial::write(void const*, unsigned int)>:
 8001022:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001026:	4607      	mov	r7, r0
 8001028:	460d      	mov	r5, r1
 800102a:	b191      	cbz	r1, 8001052 <BufferedSerial::write(void const*, unsigned int)+0x30>
 800102c:	b1a2      	cbz	r2, 8001058 <BufferedSerial::write(void const*, unsigned int)+0x36>
 800102e:	188c      	adds	r4, r1, r2
 8001030:	460e      	mov	r6, r1
 8001032:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001036:	42b4      	cmp	r4, r6
 8001038:	d005      	beq.n	8001046 <BufferedSerial::write(void const*, unsigned int)+0x24>
 800103a:	f816 1b01 	ldrb.w	r1, [r6], #1
 800103e:	4640      	mov	r0, r8
 8001040:	f7ff ffa4 	bl	8000f8c <Buffer<char>::put(char)>
 8001044:	e7f7      	b.n	8001036 <BufferedSerial::write(void const*, unsigned int)+0x14>
 8001046:	4638      	mov	r0, r7
 8001048:	f7ff ff7c 	bl	8000f44 <BufferedSerial::prime()>
 800104c:	1b60      	subs	r0, r4, r5
 800104e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001052:	4608      	mov	r0, r1
 8001054:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001058:	4610      	mov	r0, r2
 800105a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001060 <BufferedSerial::printf(char const*, ...)>:
 8001060:	b40e      	push	{r1, r2, r3}
 8001062:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001066:	b085      	sub	sp, #20
 8001068:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 800106c:	af02      	add	r7, sp, #8
 800106e:	1dd3      	adds	r3, r2, #7
 8001070:	f023 0307 	bic.w	r3, r3, #7
 8001074:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001078:	ebad 0d03 	sub.w	sp, sp, r3
 800107c:	f854 8b04 	ldr.w	r8, [r4], #4
 8001080:	ae02      	add	r6, sp, #8
 8001082:	4605      	mov	r5, r0
 8001084:	2100      	movs	r1, #0
 8001086:	4630      	mov	r0, r6
 8001088:	f003 fbef 	bl	800486a <memset>
 800108c:	4622      	mov	r2, r4
 800108e:	4641      	mov	r1, r8
 8001090:	4630      	mov	r0, r6
 8001092:	607c      	str	r4, [r7, #4]
 8001094:	f003 fed6 	bl	8004e44 <vsiprintf>
 8001098:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 800109c:	4283      	cmp	r3, r0
 800109e:	4602      	mov	r2, r0
 80010a0:	d20c      	bcs.n	80010bc <BufferedSerial::printf(char const*, ...)+0x5c>
 80010a2:	9000      	str	r0, [sp, #0]
 80010a4:	225d      	movs	r2, #93	; 0x5d
 80010a6:	4808      	ldr	r0, [pc, #32]	; (80010c8 <BufferedSerial::printf(char const*, ...)+0x68>)
 80010a8:	4908      	ldr	r1, [pc, #32]	; (80010cc <BufferedSerial::printf(char const*, ...)+0x6c>)
 80010aa:	f000 f901 	bl	80012b0 <error>
 80010ae:	2000      	movs	r0, #0
 80010b0:	370c      	adds	r7, #12
 80010b2:	46bd      	mov	sp, r7
 80010b4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010b8:	b003      	add	sp, #12
 80010ba:	4770      	bx	lr
 80010bc:	4631      	mov	r1, r6
 80010be:	4628      	mov	r0, r5
 80010c0:	f7ff ffaf 	bl	8001022 <BufferedSerial::write(void const*, unsigned int)>
 80010c4:	e7f4      	b.n	80010b0 <BufferedSerial::printf(char const*, ...)+0x50>
 80010c6:	bf00      	nop
 80010c8:	080053e7 	.word	0x080053e7
 80010cc:	080053a8 	.word	0x080053a8

080010d0 <Buffer<char>::~Buffer()>:
 80010d0:	b510      	push	{r4, lr}
 80010d2:	4604      	mov	r4, r0
 80010d4:	6800      	ldr	r0, [r0, #0]
 80010d6:	b108      	cbz	r0, 80010dc <Buffer<char>::~Buffer()+0xc>
 80010d8:	f003 f88e 	bl	80041f8 <operator delete[](void*)>
 80010dc:	4620      	mov	r0, r4
 80010de:	bd10      	pop	{r4, pc}

080010e0 <Buffer<char>::clear()>:
 80010e0:	2100      	movs	r1, #0
 80010e2:	6041      	str	r1, [r0, #4]
 80010e4:	68c2      	ldr	r2, [r0, #12]
 80010e6:	6081      	str	r1, [r0, #8]
 80010e8:	6800      	ldr	r0, [r0, #0]
 80010ea:	f003 bbbe 	b.w	800486a <memset>

080010ee <Buffer<char>::Buffer(unsigned long)>:
 80010ee:	b538      	push	{r3, r4, r5, lr}
 80010f0:	4604      	mov	r4, r0
 80010f2:	4608      	mov	r0, r1
 80010f4:	460d      	mov	r5, r1
 80010f6:	f003 f873 	bl	80041e0 <operator new[](unsigned int)>
 80010fa:	60e5      	str	r5, [r4, #12]
 80010fc:	6020      	str	r0, [r4, #0]
 80010fe:	4620      	mov	r0, r4
 8001100:	f7ff ffee 	bl	80010e0 <Buffer<char>::clear()>
 8001104:	4620      	mov	r0, r4
 8001106:	bd38      	pop	{r3, r4, r5, pc}

08001108 <_gpio_init_out.part.2>:
 8001108:	b538      	push	{r3, r4, r5, lr}
 800110a:	4604      	mov	r4, r0
 800110c:	460d      	mov	r5, r1
 800110e:	6803      	ldr	r3, [r0, #0]
 8001110:	b15a      	cbz	r2, 800112a <_gpio_init_out.part.2+0x22>
 8001112:	6882      	ldr	r2, [r0, #8]
 8001114:	6013      	str	r3, [r2, #0]
 8001116:	4620      	mov	r0, r4
 8001118:	2101      	movs	r1, #1
 800111a:	f001 fca1 	bl	8002a60 <gpio_dir>
 800111e:	4629      	mov	r1, r5
 8001120:	4620      	mov	r0, r4
 8001122:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001126:	f001 bc97 	b.w	8002a58 <gpio_mode>
 800112a:	68c2      	ldr	r2, [r0, #12]
 800112c:	041b      	lsls	r3, r3, #16
 800112e:	e7f1      	b.n	8001114 <_gpio_init_out.part.2+0xc>

08001130 <gpio_init_out_ex>:
 8001130:	b570      	push	{r4, r5, r6, lr}
 8001132:	460e      	mov	r6, r1
 8001134:	4604      	mov	r4, r0
 8001136:	4615      	mov	r5, r2
 8001138:	f001 fc6e 	bl	8002a18 <gpio_init>
 800113c:	3601      	adds	r6, #1
 800113e:	d006      	beq.n	800114e <gpio_init_out_ex+0x1e>
 8001140:	462a      	mov	r2, r5
 8001142:	4620      	mov	r0, r4
 8001144:	2100      	movs	r1, #0
 8001146:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800114a:	f7ff bfdd 	b.w	8001108 <_gpio_init_out.part.2>
 800114e:	bd70      	pop	{r4, r5, r6, pc}

08001150 <gpio_init_out>:
 8001150:	2200      	movs	r2, #0
 8001152:	f7ff bfed 	b.w	8001130 <gpio_init_out_ex>
	...

08001158 <get_us_ticker_data>:
 8001158:	4800      	ldr	r0, [pc, #0]	; (800115c <get_us_ticker_data+0x4>)
 800115a:	4770      	bx	lr
 800115c:	08005458 	.word	0x08005458

08001160 <us_ticker_irq_handler>:
 8001160:	4801      	ldr	r0, [pc, #4]	; (8001168 <us_ticker_irq_handler+0x8>)
 8001162:	f000 b803 	b.w	800116c <ticker_irq_handler>
 8001166:	bf00      	nop
 8001168:	08005458 	.word	0x08005458

0800116c <ticker_irq_handler>:
 800116c:	6803      	ldr	r3, [r0, #0]
 800116e:	b570      	push	{r4, r5, r6, lr}
 8001170:	68db      	ldr	r3, [r3, #12]
 8001172:	4604      	mov	r4, r0
 8001174:	4798      	blx	r3
 8001176:	6863      	ldr	r3, [r4, #4]
 8001178:	685a      	ldr	r2, [r3, #4]
 800117a:	6823      	ldr	r3, [r4, #0]
 800117c:	b91a      	cbnz	r2, 8001186 <ticker_irq_handler+0x1a>
 800117e:	689b      	ldr	r3, [r3, #8]
 8001180:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001184:	4718      	bx	r3
 8001186:	685b      	ldr	r3, [r3, #4]
 8001188:	6815      	ldr	r5, [r2, #0]
 800118a:	4798      	blx	r3
 800118c:	6863      	ldr	r3, [r4, #4]
 800118e:	1a28      	subs	r0, r5, r0
 8001190:	2800      	cmp	r0, #0
 8001192:	685a      	ldr	r2, [r3, #4]
 8001194:	dc07      	bgt.n	80011a6 <ticker_irq_handler+0x3a>
 8001196:	6891      	ldr	r1, [r2, #8]
 8001198:	6059      	str	r1, [r3, #4]
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	2b00      	cmp	r3, #0
 800119e:	d0ea      	beq.n	8001176 <ticker_irq_handler+0xa>
 80011a0:	6850      	ldr	r0, [r2, #4]
 80011a2:	4798      	blx	r3
 80011a4:	e7e7      	b.n	8001176 <ticker_irq_handler+0xa>
 80011a6:	6823      	ldr	r3, [r4, #0]
 80011a8:	6810      	ldr	r0, [r2, #0]
 80011aa:	691b      	ldr	r3, [r3, #16]
 80011ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80011b0:	4718      	bx	r3

080011b2 <ticker_read>:
 80011b2:	6803      	ldr	r3, [r0, #0]
 80011b4:	685b      	ldr	r3, [r3, #4]
 80011b6:	4718      	bx	r3

080011b8 <pinmap_pinout>:
 80011b8:	b510      	push	{r4, lr}
 80011ba:	4604      	mov	r4, r0
 80011bc:	3001      	adds	r0, #1
 80011be:	d10d      	bne.n	80011dc <pinmap_pinout+0x24>
 80011c0:	bd10      	pop	{r4, pc}
 80011c2:	429c      	cmp	r4, r3
 80011c4:	d109      	bne.n	80011da <pinmap_pinout+0x22>
 80011c6:	4620      	mov	r0, r4
 80011c8:	6889      	ldr	r1, [r1, #8]
 80011ca:	f001 fce1 	bl	8002b90 <pin_function>
 80011ce:	4620      	mov	r0, r4
 80011d0:	2100      	movs	r1, #0
 80011d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011d6:	f001 bd5f 	b.w	8002c98 <pin_mode>
 80011da:	310c      	adds	r1, #12
 80011dc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80011e0:	1c5a      	adds	r2, r3, #1
 80011e2:	d1ee      	bne.n	80011c2 <pinmap_pinout+0xa>
 80011e4:	4802      	ldr	r0, [pc, #8]	; (80011f0 <pinmap_pinout+0x38>)
 80011e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011ea:	f000 b861 	b.w	80012b0 <error>
 80011ee:	bf00      	nop
 80011f0:	080054a5 	.word	0x080054a5

080011f4 <pinmap_merge>:
 80011f4:	4288      	cmp	r0, r1
 80011f6:	b508      	push	{r3, lr}
 80011f8:	d008      	beq.n	800120c <pinmap_merge+0x18>
 80011fa:	1c43      	adds	r3, r0, #1
 80011fc:	d006      	beq.n	800120c <pinmap_merge+0x18>
 80011fe:	3101      	adds	r1, #1
 8001200:	d006      	beq.n	8001210 <pinmap_merge+0x1c>
 8001202:	4804      	ldr	r0, [pc, #16]	; (8001214 <pinmap_merge+0x20>)
 8001204:	f000 f854 	bl	80012b0 <error>
 8001208:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800120c:	4608      	mov	r0, r1
 800120e:	bd08      	pop	{r3, pc}
 8001210:	4601      	mov	r1, r0
 8001212:	e7fb      	b.n	800120c <pinmap_merge+0x18>
 8001214:	08005474 	.word	0x08005474

08001218 <pinmap_find_peripheral>:
 8001218:	f9b1 3000 	ldrsh.w	r3, [r1]
 800121c:	1c5a      	adds	r2, r3, #1
 800121e:	d101      	bne.n	8001224 <pinmap_find_peripheral+0xc>
 8001220:	4618      	mov	r0, r3
 8001222:	4770      	bx	lr
 8001224:	4283      	cmp	r3, r0
 8001226:	d101      	bne.n	800122c <pinmap_find_peripheral+0x14>
 8001228:	6848      	ldr	r0, [r1, #4]
 800122a:	4770      	bx	lr
 800122c:	310c      	adds	r1, #12
 800122e:	e7f3      	b.n	8001218 <pinmap_find_peripheral>

08001230 <pinmap_peripheral>:
 8001230:	1c42      	adds	r2, r0, #1
 8001232:	b510      	push	{r4, lr}
 8001234:	4604      	mov	r4, r0
 8001236:	d007      	beq.n	8001248 <pinmap_peripheral+0x18>
 8001238:	f7ff ffee 	bl	8001218 <pinmap_find_peripheral>
 800123c:	1c43      	adds	r3, r0, #1
 800123e:	4604      	mov	r4, r0
 8001240:	d102      	bne.n	8001248 <pinmap_peripheral+0x18>
 8001242:	4802      	ldr	r0, [pc, #8]	; (800124c <pinmap_peripheral+0x1c>)
 8001244:	f000 f834 	bl	80012b0 <error>
 8001248:	4620      	mov	r0, r4
 800124a:	bd10      	pop	{r4, pc}
 800124c:	08005485 	.word	0x08005485

08001250 <core_util_are_interrupts_enabled>:
 8001250:	f3ef 8010 	mrs	r0, PRIMASK
 8001254:	43c0      	mvns	r0, r0
 8001256:	f000 0001 	and.w	r0, r0, #1
 800125a:	4770      	bx	lr

0800125c <core_util_critical_section_enter>:
 800125c:	b508      	push	{r3, lr}
 800125e:	f7ff fff7 	bl	8001250 <core_util_are_interrupts_enabled>
 8001262:	b672      	cpsid	i
 8001264:	4b06      	ldr	r3, [pc, #24]	; (8001280 <core_util_critical_section_enter+0x24>)
 8001266:	681a      	ldr	r2, [r3, #0]
 8001268:	b922      	cbnz	r2, 8001274 <core_util_critical_section_enter+0x18>
 800126a:	f080 0001 	eor.w	r0, r0, #1
 800126e:	4a05      	ldr	r2, [pc, #20]	; (8001284 <core_util_critical_section_enter+0x28>)
 8001270:	b2c0      	uxtb	r0, r0
 8001272:	7010      	strb	r0, [r2, #0]
 8001274:	681a      	ldr	r2, [r3, #0]
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	3201      	adds	r2, #1
 800127a:	601a      	str	r2, [r3, #0]
 800127c:	bd08      	pop	{r3, pc}
 800127e:	bf00      	nop
 8001280:	200008b4 	.word	0x200008b4
 8001284:	200008b0 	.word	0x200008b0

08001288 <core_util_critical_section_exit>:
 8001288:	b508      	push	{r3, lr}
 800128a:	4b07      	ldr	r3, [pc, #28]	; (80012a8 <core_util_critical_section_exit+0x20>)
 800128c:	681a      	ldr	r2, [r3, #0]
 800128e:	b152      	cbz	r2, 80012a6 <core_util_critical_section_exit+0x1e>
 8001290:	f7ff ffde 	bl	8001250 <core_util_are_interrupts_enabled>
 8001294:	681a      	ldr	r2, [r3, #0]
 8001296:	3a01      	subs	r2, #1
 8001298:	601a      	str	r2, [r3, #0]
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	b91b      	cbnz	r3, 80012a6 <core_util_critical_section_exit+0x1e>
 800129e:	4b03      	ldr	r3, [pc, #12]	; (80012ac <core_util_critical_section_exit+0x24>)
 80012a0:	781b      	ldrb	r3, [r3, #0]
 80012a2:	b903      	cbnz	r3, 80012a6 <core_util_critical_section_exit+0x1e>
 80012a4:	b662      	cpsie	i
 80012a6:	bd08      	pop	{r3, pc}
 80012a8:	200008b4 	.word	0x200008b4
 80012ac:	200008b0 	.word	0x200008b0

080012b0 <error>:
 80012b0:	b40f      	push	{r0, r1, r2, r3}
 80012b2:	2001      	movs	r0, #1
 80012b4:	b508      	push	{r3, lr}
 80012b6:	f002 ff87 	bl	80041c8 <__wrap_exit>

080012ba <mbed_die>:
 80012ba:	b500      	push	{lr}
 80012bc:	b089      	sub	sp, #36	; 0x24
 80012be:	f7ff ffcd 	bl	800125c <core_util_critical_section_enter>
 80012c2:	2105      	movs	r1, #5
 80012c4:	a801      	add	r0, sp, #4
 80012c6:	f7ff ff43 	bl	8001150 <gpio_init_out>
 80012ca:	9b03      	ldr	r3, [sp, #12]
 80012cc:	9a01      	ldr	r2, [sp, #4]
 80012ce:	601a      	str	r2, [r3, #0]
 80012d0:	2096      	movs	r0, #150	; 0x96
 80012d2:	f002 fe75 	bl	8003fc0 <wait_ms>
 80012d6:	9b01      	ldr	r3, [sp, #4]
 80012d8:	9a04      	ldr	r2, [sp, #16]
 80012da:	041b      	lsls	r3, r3, #16
 80012dc:	6013      	str	r3, [r2, #0]
 80012de:	2096      	movs	r0, #150	; 0x96
 80012e0:	f002 fe6e 	bl	8003fc0 <wait_ms>
 80012e4:	e7f1      	b.n	80012ca <mbed_die+0x10>

080012e6 <default_idle_hook>:
 80012e6:	f001 bbe4 	b.w	8002ab2 <hal_sleep>
	...

080012ec <rtos_idle_loop>:
 80012ec:	b508      	push	{r3, lr}
 80012ee:	4c02      	ldr	r4, [pc, #8]	; (80012f8 <rtos_idle_loop+0xc>)
 80012f0:	6823      	ldr	r3, [r4, #0]
 80012f2:	4798      	blx	r3
 80012f4:	e7fc      	b.n	80012f0 <rtos_idle_loop+0x4>
 80012f6:	bf00      	nop
 80012f8:	20000198 	.word	0x20000198

080012fc <rt_put_prio>:
 80012fc:	b530      	push	{r4, r5, lr}
 80012fe:	7802      	ldrb	r2, [r0, #0]
 8001300:	788c      	ldrb	r4, [r1, #2]
 8001302:	6843      	ldr	r3, [r0, #4]
 8001304:	3a01      	subs	r2, #1
 8001306:	b2d2      	uxtb	r2, r2
 8001308:	b113      	cbz	r3, 8001310 <rt_put_prio+0x14>
 800130a:	789d      	ldrb	r5, [r3, #2]
 800130c:	42a5      	cmp	r5, r4
 800130e:	d207      	bcs.n	8001320 <rt_put_prio+0x24>
 8001310:	2a02      	cmp	r2, #2
 8001312:	604b      	str	r3, [r1, #4]
 8001314:	6041      	str	r1, [r0, #4]
 8001316:	d806      	bhi.n	8001326 <rt_put_prio+0x2a>
 8001318:	b103      	cbz	r3, 800131c <rt_put_prio+0x20>
 800131a:	6099      	str	r1, [r3, #8]
 800131c:	6088      	str	r0, [r1, #8]
 800131e:	bd30      	pop	{r4, r5, pc}
 8001320:	4618      	mov	r0, r3
 8001322:	685b      	ldr	r3, [r3, #4]
 8001324:	e7f0      	b.n	8001308 <rt_put_prio+0xc>
 8001326:	2300      	movs	r3, #0
 8001328:	608b      	str	r3, [r1, #8]
 800132a:	bd30      	pop	{r4, r5, pc}

0800132c <rt_get_first>:
 800132c:	7802      	ldrb	r2, [r0, #0]
 800132e:	6843      	ldr	r3, [r0, #4]
 8001330:	3a01      	subs	r2, #1
 8001332:	6859      	ldr	r1, [r3, #4]
 8001334:	6041      	str	r1, [r0, #4]
 8001336:	2a02      	cmp	r2, #2
 8001338:	f04f 0200 	mov.w	r2, #0
 800133c:	d805      	bhi.n	800134a <rt_get_first+0x1e>
 800133e:	b109      	cbz	r1, 8001344 <rt_get_first+0x18>
 8001340:	6088      	str	r0, [r1, #8]
 8001342:	605a      	str	r2, [r3, #4]
 8001344:	609a      	str	r2, [r3, #8]
 8001346:	4618      	mov	r0, r3
 8001348:	4770      	bx	lr
 800134a:	605a      	str	r2, [r3, #4]
 800134c:	e7fb      	b.n	8001346 <rt_get_first+0x1a>
	...

08001350 <rt_put_rdy_first>:
 8001350:	4b03      	ldr	r3, [pc, #12]	; (8001360 <rt_put_rdy_first+0x10>)
 8001352:	685a      	ldr	r2, [r3, #4]
 8001354:	6042      	str	r2, [r0, #4]
 8001356:	2200      	movs	r2, #0
 8001358:	6082      	str	r2, [r0, #8]
 800135a:	6058      	str	r0, [r3, #4]
 800135c:	4770      	bx	lr
 800135e:	bf00      	nop
 8001360:	20001cd8 	.word	0x20001cd8

08001364 <rt_put_dly>:
 8001364:	4b10      	ldr	r3, [pc, #64]	; (80013a8 <rt_put_dly+0x44>)
 8001366:	68da      	ldr	r2, [r3, #12]
 8001368:	b510      	push	{r4, lr}
 800136a:	b18a      	cbz	r2, 8001390 <rt_put_dly+0x2c>
 800136c:	8a9a      	ldrh	r2, [r3, #20]
 800136e:	68dc      	ldr	r4, [r3, #12]
 8001370:	428a      	cmp	r2, r1
 8001372:	d30c      	bcc.n	800138e <rt_put_dly+0x2a>
 8001374:	60c4      	str	r4, [r0, #12]
 8001376:	60d8      	str	r0, [r3, #12]
 8001378:	68c4      	ldr	r4, [r0, #12]
 800137a:	6103      	str	r3, [r0, #16]
 800137c:	b104      	cbz	r4, 8001380 <rt_put_dly+0x1c>
 800137e:	6120      	str	r0, [r4, #16]
 8001380:	1a52      	subs	r2, r2, r1
 8001382:	b292      	uxth	r2, r2
 8001384:	8282      	strh	r2, [r0, #20]
 8001386:	8a99      	ldrh	r1, [r3, #20]
 8001388:	1a8a      	subs	r2, r1, r2
 800138a:	829a      	strh	r2, [r3, #20]
 800138c:	bd10      	pop	{r4, pc}
 800138e:	b93c      	cbnz	r4, 80013a0 <rt_put_dly+0x3c>
 8001390:	2400      	movs	r4, #0
 8001392:	1a8a      	subs	r2, r1, r2
 8001394:	60c4      	str	r4, [r0, #12]
 8001396:	60d8      	str	r0, [r3, #12]
 8001398:	6103      	str	r3, [r0, #16]
 800139a:	829a      	strh	r2, [r3, #20]
 800139c:	8284      	strh	r4, [r0, #20]
 800139e:	bd10      	pop	{r4, pc}
 80013a0:	8aa3      	ldrh	r3, [r4, #20]
 80013a2:	441a      	add	r2, r3
 80013a4:	4623      	mov	r3, r4
 80013a6:	e7e2      	b.n	800136e <rt_put_dly+0xa>
 80013a8:	20001cf0 	.word	0x20001cf0

080013ac <rt_dec_dly>:
 80013ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013b0:	4d17      	ldr	r5, [pc, #92]	; (8001410 <rt_dec_dly+0x64>)
 80013b2:	68eb      	ldr	r3, [r5, #12]
 80013b4:	b153      	cbz	r3, 80013cc <rt_dec_dly+0x20>
 80013b6:	8aab      	ldrh	r3, [r5, #20]
 80013b8:	4f16      	ldr	r7, [pc, #88]	; (8001414 <rt_dec_dly+0x68>)
 80013ba:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001418 <rt_dec_dly+0x6c>
 80013be:	3b01      	subs	r3, #1
 80013c0:	82ab      	strh	r3, [r5, #20]
 80013c2:	2600      	movs	r6, #0
 80013c4:	8aaa      	ldrh	r2, [r5, #20]
 80013c6:	b90a      	cbnz	r2, 80013cc <rt_dec_dly+0x20>
 80013c8:	68ec      	ldr	r4, [r5, #12]
 80013ca:	b90c      	cbnz	r4, 80013d0 <rt_dec_dly+0x24>
 80013cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013d0:	68a3      	ldr	r3, [r4, #8]
 80013d2:	b133      	cbz	r3, 80013e2 <rt_dec_dly+0x36>
 80013d4:	6861      	ldr	r1, [r4, #4]
 80013d6:	6059      	str	r1, [r3, #4]
 80013d8:	6861      	ldr	r1, [r4, #4]
 80013da:	b109      	cbz	r1, 80013e0 <rt_dec_dly+0x34>
 80013dc:	608b      	str	r3, [r1, #8]
 80013de:	6062      	str	r2, [r4, #4]
 80013e0:	60a6      	str	r6, [r4, #8]
 80013e2:	4621      	mov	r1, r4
 80013e4:	4638      	mov	r0, r7
 80013e6:	f7ff ff89 	bl	80012fc <rt_put_prio>
 80013ea:	8aa3      	ldrh	r3, [r4, #20]
 80013ec:	82ab      	strh	r3, [r5, #20]
 80013ee:	7863      	ldrb	r3, [r4, #1]
 80013f0:	2b04      	cmp	r3, #4
 80013f2:	bf01      	itttt	eq
 80013f4:	f8d8 3000 	ldreq.w	r3, [r8]
 80013f8:	8ae2      	ldrheq	r2, [r4, #22]
 80013fa:	189b      	addeq	r3, r3, r2
 80013fc:	82a3      	strheq	r3, [r4, #20]
 80013fe:	2301      	movs	r3, #1
 8001400:	7063      	strb	r3, [r4, #1]
 8001402:	68e3      	ldr	r3, [r4, #12]
 8001404:	60eb      	str	r3, [r5, #12]
 8001406:	b10b      	cbz	r3, 800140c <rt_dec_dly+0x60>
 8001408:	611d      	str	r5, [r3, #16]
 800140a:	60e6      	str	r6, [r4, #12]
 800140c:	6126      	str	r6, [r4, #16]
 800140e:	e7d9      	b.n	80013c4 <rt_dec_dly+0x18>
 8001410:	20001cf0 	.word	0x20001cf0
 8001414:	20001cd8 	.word	0x20001cd8
 8001418:	20002734 	.word	0x20002734

0800141c <rt_rmv_list>:
 800141c:	6883      	ldr	r3, [r0, #8]
 800141e:	b12b      	cbz	r3, 800142c <rt_rmv_list+0x10>
 8001420:	6842      	ldr	r2, [r0, #4]
 8001422:	605a      	str	r2, [r3, #4]
 8001424:	6842      	ldr	r2, [r0, #4]
 8001426:	b15a      	cbz	r2, 8001440 <rt_rmv_list+0x24>
 8001428:	6093      	str	r3, [r2, #8]
 800142a:	4770      	bx	lr
 800142c:	4b05      	ldr	r3, [pc, #20]	; (8001444 <rt_rmv_list+0x28>)
 800142e:	685a      	ldr	r2, [r3, #4]
 8001430:	4290      	cmp	r0, r2
 8001432:	d102      	bne.n	800143a <rt_rmv_list+0x1e>
 8001434:	6842      	ldr	r2, [r0, #4]
 8001436:	605a      	str	r2, [r3, #4]
 8001438:	4770      	bx	lr
 800143a:	4613      	mov	r3, r2
 800143c:	2a00      	cmp	r2, #0
 800143e:	d1f6      	bne.n	800142e <rt_rmv_list+0x12>
 8001440:	4770      	bx	lr
 8001442:	bf00      	nop
 8001444:	20001cd8 	.word	0x20001cd8

08001448 <rt_resort_prio>:
 8001448:	b510      	push	{r4, lr}
 800144a:	6884      	ldr	r4, [r0, #8]
 800144c:	4601      	mov	r1, r0
 800144e:	b92c      	cbnz	r4, 800145c <rt_resort_prio+0x14>
 8001450:	7843      	ldrb	r3, [r0, #1]
 8001452:	2b01      	cmp	r3, #1
 8001454:	d10d      	bne.n	8001472 <rt_resort_prio+0x2a>
 8001456:	4c07      	ldr	r4, [pc, #28]	; (8001474 <rt_resort_prio+0x2c>)
 8001458:	e003      	b.n	8001462 <rt_resort_prio+0x1a>
 800145a:	68a4      	ldr	r4, [r4, #8]
 800145c:	7823      	ldrb	r3, [r4, #0]
 800145e:	2b00      	cmp	r3, #0
 8001460:	d0fb      	beq.n	800145a <rt_resort_prio+0x12>
 8001462:	4608      	mov	r0, r1
 8001464:	f7ff ffda 	bl	800141c <rt_rmv_list>
 8001468:	4620      	mov	r0, r4
 800146a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800146e:	f7ff bf45 	b.w	80012fc <rt_put_prio>
 8001472:	bd10      	pop	{r4, pc}
 8001474:	20001cd8 	.word	0x20001cd8

08001478 <rt_rmv_dly>:
 8001478:	6903      	ldr	r3, [r0, #16]
 800147a:	b510      	push	{r4, lr}
 800147c:	b163      	cbz	r3, 8001498 <rt_rmv_dly+0x20>
 800147e:	68c2      	ldr	r2, [r0, #12]
 8001480:	60da      	str	r2, [r3, #12]
 8001482:	68c2      	ldr	r2, [r0, #12]
 8001484:	b14a      	cbz	r2, 800149a <rt_rmv_dly+0x22>
 8001486:	8a99      	ldrh	r1, [r3, #20]
 8001488:	8a84      	ldrh	r4, [r0, #20]
 800148a:	4421      	add	r1, r4
 800148c:	8299      	strh	r1, [r3, #20]
 800148e:	6113      	str	r3, [r2, #16]
 8001490:	2300      	movs	r3, #0
 8001492:	60c3      	str	r3, [r0, #12]
 8001494:	2300      	movs	r3, #0
 8001496:	6103      	str	r3, [r0, #16]
 8001498:	bd10      	pop	{r4, pc}
 800149a:	829a      	strh	r2, [r3, #20]
 800149c:	e7fa      	b.n	8001494 <rt_rmv_dly+0x1c>
	...

080014a0 <rt_psq_enq>:
 80014a0:	b470      	push	{r4, r5, r6}
 80014a2:	4b11      	ldr	r3, [pc, #68]	; (80014e8 <rt_psq_enq+0x48>)
 80014a4:	78dd      	ldrb	r5, [r3, #3]
 80014a6:	f3ef 8610 	mrs	r6, PRIMASK
 80014aa:	f3ef 8210 	mrs	r2, PRIMASK
 80014ae:	b672      	cpsid	i
 80014b0:	789a      	ldrb	r2, [r3, #2]
 80014b2:	4295      	cmp	r5, r2
 80014b4:	d911      	bls.n	80014da <rt_psq_enq+0x3a>
 80014b6:	3201      	adds	r2, #1
 80014b8:	709a      	strb	r2, [r3, #2]
 80014ba:	781a      	ldrb	r2, [r3, #0]
 80014bc:	1c54      	adds	r4, r2, #1
 80014be:	42a5      	cmp	r5, r4
 80014c0:	bf08      	it	eq
 80014c2:	2400      	moveq	r4, #0
 80014c4:	701c      	strb	r4, [r3, #0]
 80014c6:	b906      	cbnz	r6, 80014ca <rt_psq_enq+0x2a>
 80014c8:	b662      	cpsie	i
 80014ca:	4295      	cmp	r5, r2
 80014cc:	d907      	bls.n	80014de <rt_psq_enq+0x3e>
 80014ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80014d2:	bc70      	pop	{r4, r5, r6}
 80014d4:	6058      	str	r0, [r3, #4]
 80014d6:	6099      	str	r1, [r3, #8]
 80014d8:	4770      	bx	lr
 80014da:	2e00      	cmp	r6, #0
 80014dc:	d0f4      	beq.n	80014c8 <rt_psq_enq+0x28>
 80014de:	2002      	movs	r0, #2
 80014e0:	bc70      	pop	{r4, r5, r6}
 80014e2:	f000 b829 	b.w	8001538 <os_error>
 80014e6:	bf00      	nop
 80014e8:	20001f54 	.word	0x20001f54

080014ec <pre_main>:
 80014ec:	b508      	push	{r3, lr}
 80014ee:	480b      	ldr	r0, [pc, #44]	; (800151c <pre_main+0x30>)
 80014f0:	f000 fca4 	bl	8001e3c <osMutexCreate>
 80014f4:	4b0a      	ldr	r3, [pc, #40]	; (8001520 <pre_main+0x34>)
 80014f6:	6018      	str	r0, [r3, #0]
 80014f8:	480a      	ldr	r0, [pc, #40]	; (8001524 <pre_main+0x38>)
 80014fa:	f000 fc9f 	bl	8001e3c <osMutexCreate>
 80014fe:	4b0a      	ldr	r3, [pc, #40]	; (8001528 <pre_main+0x3c>)
 8001500:	6018      	str	r0, [r3, #0]
 8001502:	480a      	ldr	r0, [pc, #40]	; (800152c <pre_main+0x40>)
 8001504:	f000 fc9a 	bl	8001e3c <osMutexCreate>
 8001508:	4b09      	ldr	r3, [pc, #36]	; (8001530 <pre_main+0x44>)
 800150a:	6018      	str	r0, [r3, #0]
 800150c:	f003 f900 	bl	8004710 <__libc_init_array>
 8001510:	2100      	movs	r1, #0
 8001512:	4608      	mov	r0, r1
 8001514:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001518:	f002 be19 	b.w	800414e <__wrap_main>
 800151c:	08005504 	.word	0x08005504
 8001520:	20001fdc 	.word	0x20001fdc
 8001524:	08005500 	.word	0x08005500
 8001528:	200008c0 	.word	0x200008c0
 800152c:	080054fc 	.word	0x080054fc
 8001530:	200008b8 	.word	0x200008b8

08001534 <os_idle_demon>:
 8001534:	f7ff beda 	b.w	80012ec <rtos_idle_loop>

08001538 <os_error>:
 8001538:	b510      	push	{r4, lr}
 800153a:	4604      	mov	r4, r0
 800153c:	f000 fbec 	bl	8001d18 <svcThreadGetId>
 8001540:	4621      	mov	r1, r4
 8001542:	4602      	mov	r2, r0
 8001544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001548:	4801      	ldr	r0, [pc, #4]	; (8001550 <os_error+0x18>)
 800154a:	f7ff beb1 	b.w	80012b0 <error>
 800154e:	bf00      	nop
 8001550:	080054c4 	.word	0x080054c4

08001554 <sysThreadTerminate>:
 8001554:	f002 be56 	b.w	8004204 <thread_terminate_hook>

08001558 <set_stack_heap>:
 8001558:	4a0b      	ldr	r2, [pc, #44]	; (8001588 <set_stack_heap+0x30>)
 800155a:	4b0c      	ldr	r3, [pc, #48]	; (800158c <set_stack_heap+0x34>)
 800155c:	480c      	ldr	r0, [pc, #48]	; (8001590 <set_stack_heap+0x38>)
 800155e:	b430      	push	{r4, r5}
 8001560:	601a      	str	r2, [r3, #0]
 8001562:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001566:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 800156a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800156e:	4619      	mov	r1, r3
 8001570:	bf28      	it	cs
 8001572:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 8001576:	4d07      	ldr	r5, [pc, #28]	; (8001594 <set_stack_heap+0x3c>)
 8001578:	4c07      	ldr	r4, [pc, #28]	; (8001598 <set_stack_heap+0x40>)
 800157a:	6001      	str	r1, [r0, #0]
 800157c:	1a5b      	subs	r3, r3, r1
 800157e:	441a      	add	r2, r3
 8001580:	602a      	str	r2, [r5, #0]
 8001582:	6023      	str	r3, [r4, #0]
 8001584:	bc30      	pop	{r4, r5}
 8001586:	4770      	bx	lr
 8001588:	200027c8 	.word	0x200027c8
 800158c:	20001cc8 	.word	0x20001cc8
 8001590:	200008c4 	.word	0x200008c4
 8001594:	200008c8 	.word	0x200008c8
 8001598:	20001cc4 	.word	0x20001cc4

0800159c <software_init_hook_rtos>:
 800159c:	f000 fd22 	bl	8001fe4 <osKernelInitialize>
 80015a0:	f7ff ffda 	bl	8001558 <set_stack_heap>
 80015a4:	4803      	ldr	r0, [pc, #12]	; (80015b4 <software_init_hook_rtos+0x18>)
 80015a6:	2100      	movs	r1, #0
 80015a8:	f000 fcd0 	bl	8001f4c <osThreadCreate>
 80015ac:	f000 fb36 	bl	8001c1c <osKernelStart>
 80015b0:	e7fe      	b.n	80015b0 <software_init_hook_rtos+0x14>
 80015b2:	0000      	.short	0x0000
 80015b4:	2000019c 	.word	0x2000019c

080015b8 <__rtos_malloc_lock>:
 80015b8:	4b02      	ldr	r3, [pc, #8]	; (80015c4 <__rtos_malloc_lock+0xc>)
 80015ba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80015be:	6818      	ldr	r0, [r3, #0]
 80015c0:	f000 bc5a 	b.w	8001e78 <osMutexWait>
 80015c4:	200008c0 	.word	0x200008c0

080015c8 <__rtos_malloc_unlock>:
 80015c8:	4b01      	ldr	r3, [pc, #4]	; (80015d0 <__rtos_malloc_unlock+0x8>)
 80015ca:	6818      	ldr	r0, [r3, #0]
 80015cc:	f000 bc7c 	b.w	8001ec8 <osMutexRelease>
 80015d0:	200008c0 	.word	0x200008c0

080015d4 <rt_init_stack>:
 80015d4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80015d6:	089b      	lsrs	r3, r3, #2
 80015d8:	bf04      	itt	eq
 80015da:	4b22      	ldreq	r3, [pc, #136]	; (8001664 <rt_init_stack+0x90>)
 80015dc:	881b      	ldrheq	r3, [r3, #0]
 80015de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015e0:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80015e2:	bf08      	it	eq
 80015e4:	089b      	lsreq	r3, r3, #2
 80015e6:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80015ea:	0754      	lsls	r4, r2, #29
 80015ec:	bf48      	it	mi
 80015ee:	3a04      	submi	r2, #4
 80015f0:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 80015f4:	e902 0042 	stmdb	r2, {r1, r6}
 80015f8:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 80015fc:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001600:	f1a2 070c 	sub.w	r7, r2, #12
 8001604:	f04f 0e00 	mov.w	lr, #0
 8001608:	f846 ef04 	str.w	lr, [r6, #4]!
 800160c:	42be      	cmp	r6, r7
 800160e:	d1fb      	bne.n	8001608 <rt_init_stack+0x34>
 8001610:	69c6      	ldr	r6, [r0, #28]
 8001612:	f842 6c20 	str.w	r6, [r2, #-32]
 8001616:	6341      	str	r1, [r0, #52]	; 0x34
 8001618:	4912      	ldr	r1, [pc, #72]	; (8001664 <rt_init_stack+0x90>)
 800161a:	62c4      	str	r4, [r0, #44]	; 0x2c
 800161c:	6809      	ldr	r1, [r1, #0]
 800161e:	00c9      	lsls	r1, r1, #3
 8001620:	d517      	bpl.n	8001652 <rt_init_stack+0x7e>
 8001622:	2b11      	cmp	r3, #17
 8001624:	d915      	bls.n	8001652 <rt_init_stack+0x7e>
 8001626:	3b10      	subs	r3, #16
 8001628:	f06f 0107 	mvn.w	r1, #7
 800162c:	085b      	lsrs	r3, r3, #1
 800162e:	434b      	muls	r3, r1
 8001630:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001634:	440a      	add	r2, r1
 8001636:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 800163a:	4621      	mov	r1, r4
 800163c:	4291      	cmp	r1, r2
 800163e:	d10b      	bne.n	8001658 <rt_init_stack+0x84>
 8001640:	3308      	adds	r3, #8
 8001642:	441c      	add	r4, r3
 8001644:	1f23      	subs	r3, r4, #4
 8001646:	429d      	cmp	r5, r3
 8001648:	bf3c      	itt	cc
 800164a:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 800164e:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001652:	4b05      	ldr	r3, [pc, #20]	; (8001668 <rt_init_stack+0x94>)
 8001654:	602b      	str	r3, [r5, #0]
 8001656:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001658:	f841 0c04 	str.w	r0, [r1, #-4]
 800165c:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001660:	e7ec      	b.n	800163c <rt_init_stack+0x68>
 8001662:	bf00      	nop
 8001664:	0800550c 	.word	0x0800550c
 8001668:	e25a2ea5 	.word	0xe25a2ea5

0800166c <rt_ret_val>:
 800166c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001670:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001672:	b112      	cbz	r2, 800167a <rt_ret_val+0xe>
 8001674:	3360      	adds	r3, #96	; 0x60
 8001676:	6019      	str	r1, [r3, #0]
 8001678:	4770      	bx	lr
 800167a:	3320      	adds	r3, #32
 800167c:	e7fb      	b.n	8001676 <rt_ret_val+0xa>

0800167e <rt_ret_val2>:
 800167e:	b510      	push	{r4, lr}
 8001680:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001684:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001686:	b11c      	cbz	r4, 8001690 <rt_ret_val2+0x12>
 8001688:	3360      	adds	r3, #96	; 0x60
 800168a:	e883 0006 	stmia.w	r3, {r1, r2}
 800168e:	bd10      	pop	{r4, pc}
 8001690:	3320      	adds	r3, #32
 8001692:	e7fa      	b.n	800168a <rt_ret_val2+0xc>

08001694 <rt_psh_req>:
 8001694:	4b05      	ldr	r3, [pc, #20]	; (80016ac <rt_psh_req+0x18>)
 8001696:	781b      	ldrb	r3, [r3, #0]
 8001698:	b923      	cbnz	r3, 80016a4 <rt_psh_req+0x10>
 800169a:	4b05      	ldr	r3, [pc, #20]	; (80016b0 <rt_psh_req+0x1c>)
 800169c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80016a0:	601a      	str	r2, [r3, #0]
 80016a2:	4770      	bx	lr
 80016a4:	4b03      	ldr	r3, [pc, #12]	; (80016b4 <rt_psh_req+0x20>)
 80016a6:	2201      	movs	r2, #1
 80016a8:	701a      	strb	r2, [r3, #0]
 80016aa:	4770      	bx	lr
 80016ac:	2000191c 	.word	0x2000191c
 80016b0:	e000ed04 	.word	0xe000ed04
 80016b4:	2000191d 	.word	0x2000191d

080016b8 <rt_pop_req>:
 80016b8:	b538      	push	{r3, r4, r5, lr}
 80016ba:	4b1a      	ldr	r3, [pc, #104]	; (8001724 <rt_pop_req+0x6c>)
 80016bc:	4c1a      	ldr	r4, [pc, #104]	; (8001728 <rt_pop_req+0x70>)
 80016be:	6818      	ldr	r0, [r3, #0]
 80016c0:	2301      	movs	r3, #1
 80016c2:	7043      	strb	r3, [r0, #1]
 80016c4:	f7ff fe44 	bl	8001350 <rt_put_rdy_first>
 80016c8:	7865      	ldrb	r5, [r4, #1]
 80016ca:	78a3      	ldrb	r3, [r4, #2]
 80016cc:	b93b      	cbnz	r3, 80016de <rt_pop_req+0x26>
 80016ce:	4817      	ldr	r0, [pc, #92]	; (800172c <rt_pop_req+0x74>)
 80016d0:	7065      	strb	r5, [r4, #1]
 80016d2:	f7ff fe2b 	bl	800132c <rt_get_first>
 80016d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80016da:	f000 bd5d 	b.w	8002198 <rt_switch_req>
 80016de:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80016e2:	6858      	ldr	r0, [r3, #4]
 80016e4:	7802      	ldrb	r2, [r0, #0]
 80016e6:	b99a      	cbnz	r2, 8001710 <rt_pop_req+0x58>
 80016e8:	8919      	ldrh	r1, [r3, #8]
 80016ea:	f000 f9bb 	bl	8001a64 <rt_evt_psh>
 80016ee:	78e3      	ldrb	r3, [r4, #3]
 80016f0:	3501      	adds	r5, #1
 80016f2:	429d      	cmp	r5, r3
 80016f4:	bf08      	it	eq
 80016f6:	2500      	moveq	r5, #0
 80016f8:	f3ef 8310 	mrs	r3, PRIMASK
 80016fc:	f3ef 8210 	mrs	r2, PRIMASK
 8001700:	b672      	cpsid	i
 8001702:	78a2      	ldrb	r2, [r4, #2]
 8001704:	3a01      	subs	r2, #1
 8001706:	70a2      	strb	r2, [r4, #2]
 8001708:	2b00      	cmp	r3, #0
 800170a:	d1de      	bne.n	80016ca <rt_pop_req+0x12>
 800170c:	b662      	cpsie	i
 800170e:	e7dc      	b.n	80016ca <rt_pop_req+0x12>
 8001710:	2a01      	cmp	r2, #1
 8001712:	d103      	bne.n	800171c <rt_pop_req+0x64>
 8001714:	6899      	ldr	r1, [r3, #8]
 8001716:	f000 f933 	bl	8001980 <rt_mbx_psh>
 800171a:	e7e8      	b.n	80016ee <rt_pop_req+0x36>
 800171c:	f001 f844 	bl	80027a8 <rt_sem_psh>
 8001720:	e7e5      	b.n	80016ee <rt_pop_req+0x36>
 8001722:	bf00      	nop
 8001724:	200026ec 	.word	0x200026ec
 8001728:	20001f54 	.word	0x20001f54
 800172c:	20001cd8 	.word	0x20001cd8

08001730 <os_tick_init>:
 8001730:	4b08      	ldr	r3, [pc, #32]	; (8001754 <os_tick_init+0x24>)
 8001732:	681a      	ldr	r2, [r3, #0]
 8001734:	4b08      	ldr	r3, [pc, #32]	; (8001758 <os_tick_init+0x28>)
 8001736:	601a      	str	r2, [r3, #0]
 8001738:	2200      	movs	r2, #0
 800173a:	605a      	str	r2, [r3, #4]
 800173c:	2207      	movs	r2, #7
 800173e:	f843 2c04 	str.w	r2, [r3, #-4]
 8001742:	4a06      	ldr	r2, [pc, #24]	; (800175c <os_tick_init+0x2c>)
 8001744:	6813      	ldr	r3, [r2, #0]
 8001746:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800174a:	6013      	str	r3, [r2, #0]
 800174c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001750:	4770      	bx	lr
 8001752:	bf00      	nop
 8001754:	08005524 	.word	0x08005524
 8001758:	e000e014 	.word	0xe000e014
 800175c:	e000ed20 	.word	0xe000ed20

08001760 <os_tick_irqack>:
 8001760:	4770      	bx	lr
	...

08001764 <rt_systick>:
 8001764:	b508      	push	{r3, lr}
 8001766:	4b0b      	ldr	r3, [pc, #44]	; (8001794 <rt_systick+0x30>)
 8001768:	6818      	ldr	r0, [r3, #0]
 800176a:	2301      	movs	r3, #1
 800176c:	7043      	strb	r3, [r0, #1]
 800176e:	f7ff fdef 	bl	8001350 <rt_put_rdy_first>
 8001772:	f000 f9ad 	bl	8001ad0 <rt_chk_robin>
 8001776:	4a08      	ldr	r2, [pc, #32]	; (8001798 <rt_systick+0x34>)
 8001778:	6813      	ldr	r3, [r2, #0]
 800177a:	3301      	adds	r3, #1
 800177c:	6013      	str	r3, [r2, #0]
 800177e:	f7ff fe15 	bl	80013ac <rt_dec_dly>
 8001782:	f000 fc91 	bl	80020a8 <sysTimerTick>
 8001786:	4805      	ldr	r0, [pc, #20]	; (800179c <rt_systick+0x38>)
 8001788:	f7ff fdd0 	bl	800132c <rt_get_first>
 800178c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001790:	f000 bd02 	b.w	8002198 <rt_switch_req>
 8001794:	200026ec 	.word	0x200026ec
 8001798:	20002734 	.word	0x20002734
 800179c:	20001cd8 	.word	0x20001cd8

080017a0 <rt_stk_check>:
 80017a0:	4b06      	ldr	r3, [pc, #24]	; (80017bc <rt_stk_check+0x1c>)
 80017a2:	681a      	ldr	r2, [r3, #0]
 80017a4:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80017a6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80017a8:	4293      	cmp	r3, r2
 80017aa:	d803      	bhi.n	80017b4 <rt_stk_check+0x14>
 80017ac:	681a      	ldr	r2, [r3, #0]
 80017ae:	4b04      	ldr	r3, [pc, #16]	; (80017c0 <rt_stk_check+0x20>)
 80017b0:	429a      	cmp	r2, r3
 80017b2:	d002      	beq.n	80017ba <rt_stk_check+0x1a>
 80017b4:	2001      	movs	r0, #1
 80017b6:	f7ff bebf 	b.w	8001538 <os_error>
 80017ba:	4770      	bx	lr
 80017bc:	200026ec 	.word	0x200026ec
 80017c0:	e25a2ea5 	.word	0xe25a2ea5

080017c4 <_init_box>:
 80017c4:	2a00      	cmp	r2, #0
 80017c6:	bfbb      	ittet	lt
 80017c8:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 80017cc:	3207      	addlt	r2, #7
 80017ce:	3203      	addge	r2, #3
 80017d0:	f022 0207 	biclt.w	r2, r2, #7
 80017d4:	bfa8      	it	ge
 80017d6:	f022 0203 	bicge.w	r2, r2, #3
 80017da:	b510      	push	{r4, lr}
 80017dc:	bfb4      	ite	lt
 80017de:	2310      	movlt	r3, #16
 80017e0:	230c      	movge	r3, #12
 80017e2:	b192      	cbz	r2, 800180a <_init_box+0x46>
 80017e4:	18d4      	adds	r4, r2, r3
 80017e6:	428c      	cmp	r4, r1
 80017e8:	d80f      	bhi.n	800180a <_init_box+0x46>
 80017ea:	4401      	add	r1, r0
 80017ec:	4403      	add	r3, r0
 80017ee:	4254      	negs	r4, r2
 80017f0:	6041      	str	r1, [r0, #4]
 80017f2:	6003      	str	r3, [r0, #0]
 80017f4:	6082      	str	r2, [r0, #8]
 80017f6:	4421      	add	r1, r4
 80017f8:	1898      	adds	r0, r3, r2
 80017fa:	4281      	cmp	r1, r0
 80017fc:	d302      	bcc.n	8001804 <_init_box+0x40>
 80017fe:	5100      	str	r0, [r0, r4]
 8001800:	4603      	mov	r3, r0
 8001802:	e7f9      	b.n	80017f8 <_init_box+0x34>
 8001804:	2000      	movs	r0, #0
 8001806:	6018      	str	r0, [r3, #0]
 8001808:	bd10      	pop	{r4, pc}
 800180a:	2001      	movs	r0, #1
 800180c:	bd10      	pop	{r4, pc}

0800180e <rt_alloc_box>:
 800180e:	f3ef 8310 	mrs	r3, PRIMASK
 8001812:	b672      	cpsid	i
 8001814:	6802      	ldr	r2, [r0, #0]
 8001816:	f003 0301 	and.w	r3, r3, #1
 800181a:	b10a      	cbz	r2, 8001820 <rt_alloc_box+0x12>
 800181c:	6811      	ldr	r1, [r2, #0]
 800181e:	6001      	str	r1, [r0, #0]
 8001820:	b903      	cbnz	r3, 8001824 <rt_alloc_box+0x16>
 8001822:	b662      	cpsie	i
 8001824:	4610      	mov	r0, r2
 8001826:	4770      	bx	lr

08001828 <rt_free_box>:
 8001828:	4281      	cmp	r1, r0
 800182a:	d30d      	bcc.n	8001848 <rt_free_box+0x20>
 800182c:	6843      	ldr	r3, [r0, #4]
 800182e:	4299      	cmp	r1, r3
 8001830:	d20a      	bcs.n	8001848 <rt_free_box+0x20>
 8001832:	f3ef 8310 	mrs	r3, PRIMASK
 8001836:	b672      	cpsid	i
 8001838:	6802      	ldr	r2, [r0, #0]
 800183a:	600a      	str	r2, [r1, #0]
 800183c:	6001      	str	r1, [r0, #0]
 800183e:	f013 0001 	ands.w	r0, r3, #1
 8001842:	d103      	bne.n	800184c <rt_free_box+0x24>
 8001844:	b662      	cpsie	i
 8001846:	4770      	bx	lr
 8001848:	2001      	movs	r0, #1
 800184a:	4770      	bx	lr
 800184c:	2000      	movs	r0, #0
 800184e:	4770      	bx	lr

08001850 <rt_mbx_init>:
 8001850:	2301      	movs	r3, #1
 8001852:	3910      	subs	r1, #16
 8001854:	7003      	strb	r3, [r0, #0]
 8001856:	0889      	lsrs	r1, r1, #2
 8001858:	2300      	movs	r3, #0
 800185a:	7043      	strb	r3, [r0, #1]
 800185c:	7083      	strb	r3, [r0, #2]
 800185e:	6043      	str	r3, [r0, #4]
 8001860:	8103      	strh	r3, [r0, #8]
 8001862:	8143      	strh	r3, [r0, #10]
 8001864:	8183      	strh	r3, [r0, #12]
 8001866:	81c1      	strh	r1, [r0, #14]
 8001868:	4770      	bx	lr
	...

0800186c <rt_mbx_wait>:
 800186c:	b570      	push	{r4, r5, r6, lr}
 800186e:	8985      	ldrh	r5, [r0, #12]
 8001870:	4604      	mov	r4, r0
 8001872:	4616      	mov	r6, r2
 8001874:	2d00      	cmp	r5, #0
 8001876:	d038      	beq.n	80018ea <rt_mbx_wait+0x7e>
 8001878:	8943      	ldrh	r3, [r0, #10]
 800187a:	1d1a      	adds	r2, r3, #4
 800187c:	3301      	adds	r3, #1
 800187e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001882:	600a      	str	r2, [r1, #0]
 8001884:	89c2      	ldrh	r2, [r0, #14]
 8001886:	b29b      	uxth	r3, r3
 8001888:	429a      	cmp	r2, r3
 800188a:	8143      	strh	r3, [r0, #10]
 800188c:	bf04      	itt	eq
 800188e:	2300      	moveq	r3, #0
 8001890:	8143      	strheq	r3, [r0, #10]
 8001892:	6843      	ldr	r3, [r0, #4]
 8001894:	b1f3      	cbz	r3, 80018d4 <rt_mbx_wait+0x68>
 8001896:	7843      	ldrb	r3, [r0, #1]
 8001898:	2b02      	cmp	r3, #2
 800189a:	d11b      	bne.n	80018d4 <rt_mbx_wait+0x68>
 800189c:	f7ff fd46 	bl	800132c <rt_get_first>
 80018a0:	2100      	movs	r1, #0
 80018a2:	4605      	mov	r5, r0
 80018a4:	f7ff fee2 	bl	800166c <rt_ret_val>
 80018a8:	8923      	ldrh	r3, [r4, #8]
 80018aa:	69e9      	ldr	r1, [r5, #28]
 80018ac:	1d1a      	adds	r2, r3, #4
 80018ae:	3301      	adds	r3, #1
 80018b0:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80018b4:	89e2      	ldrh	r2, [r4, #14]
 80018b6:	b29b      	uxth	r3, r3
 80018b8:	429a      	cmp	r2, r3
 80018ba:	8123      	strh	r3, [r4, #8]
 80018bc:	bf08      	it	eq
 80018be:	2300      	moveq	r3, #0
 80018c0:	4628      	mov	r0, r5
 80018c2:	bf08      	it	eq
 80018c4:	8123      	strheq	r3, [r4, #8]
 80018c6:	f7ff fdd7 	bl	8001478 <rt_rmv_dly>
 80018ca:	4628      	mov	r0, r5
 80018cc:	f000 fc7e 	bl	80021cc <rt_dispatch>
 80018d0:	2000      	movs	r0, #0
 80018d2:	bd70      	pop	{r4, r5, r6, pc}
 80018d4:	f3ef 8010 	mrs	r0, PRIMASK
 80018d8:	f3ef 8310 	mrs	r3, PRIMASK
 80018dc:	b672      	cpsid	i
 80018de:	3d01      	subs	r5, #1
 80018e0:	81a5      	strh	r5, [r4, #12]
 80018e2:	2800      	cmp	r0, #0
 80018e4:	d1f4      	bne.n	80018d0 <rt_mbx_wait+0x64>
 80018e6:	b662      	cpsie	i
 80018e8:	bd70      	pop	{r4, r5, r6, pc}
 80018ea:	b14a      	cbz	r2, 8001900 <rt_mbx_wait+0x94>
 80018ec:	6842      	ldr	r2, [r0, #4]
 80018ee:	4b09      	ldr	r3, [pc, #36]	; (8001914 <rt_mbx_wait+0xa8>)
 80018f0:	b142      	cbz	r2, 8001904 <rt_mbx_wait+0x98>
 80018f2:	6819      	ldr	r1, [r3, #0]
 80018f4:	f7ff fd02 	bl	80012fc <rt_put_prio>
 80018f8:	2108      	movs	r1, #8
 80018fa:	4630      	mov	r0, r6
 80018fc:	f000 fc8a 	bl	8002214 <rt_block>
 8001900:	2001      	movs	r0, #1
 8001902:	bd70      	pop	{r4, r5, r6, pc}
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	6043      	str	r3, [r0, #4]
 8001908:	605a      	str	r2, [r3, #4]
 800190a:	6098      	str	r0, [r3, #8]
 800190c:	2301      	movs	r3, #1
 800190e:	7043      	strb	r3, [r0, #1]
 8001910:	e7f2      	b.n	80018f8 <rt_mbx_wait+0x8c>
 8001912:	bf00      	nop
 8001914:	200026ec 	.word	0x200026ec

08001918 <rt_mbx_check>:
 8001918:	89c2      	ldrh	r2, [r0, #14]
 800191a:	8980      	ldrh	r0, [r0, #12]
 800191c:	1a10      	subs	r0, r2, r0
 800191e:	4770      	bx	lr

08001920 <isr_mbx_send>:
 8001920:	b508      	push	{r3, lr}
 8001922:	f7ff fdbd 	bl	80014a0 <rt_psq_enq>
 8001926:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800192a:	f7ff beb3 	b.w	8001694 <rt_psh_req>

0800192e <isr_mbx_receive>:
 800192e:	8983      	ldrh	r3, [r0, #12]
 8001930:	b510      	push	{r4, lr}
 8001932:	4604      	mov	r4, r0
 8001934:	b30b      	cbz	r3, 800197a <isr_mbx_receive+0x4c>
 8001936:	8943      	ldrh	r3, [r0, #10]
 8001938:	3304      	adds	r3, #4
 800193a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800193e:	600b      	str	r3, [r1, #0]
 8001940:	7843      	ldrb	r3, [r0, #1]
 8001942:	2b02      	cmp	r3, #2
 8001944:	d104      	bne.n	8001950 <isr_mbx_receive+0x22>
 8001946:	2100      	movs	r1, #0
 8001948:	f7ff fdaa 	bl	80014a0 <rt_psq_enq>
 800194c:	f7ff fea2 	bl	8001694 <rt_psh_req>
 8001950:	f3ef 8310 	mrs	r3, PRIMASK
 8001954:	f3ef 8210 	mrs	r2, PRIMASK
 8001958:	b672      	cpsid	i
 800195a:	89a2      	ldrh	r2, [r4, #12]
 800195c:	3a01      	subs	r2, #1
 800195e:	81a2      	strh	r2, [r4, #12]
 8001960:	b903      	cbnz	r3, 8001964 <isr_mbx_receive+0x36>
 8001962:	b662      	cpsie	i
 8001964:	8963      	ldrh	r3, [r4, #10]
 8001966:	89e2      	ldrh	r2, [r4, #14]
 8001968:	3301      	adds	r3, #1
 800196a:	b29b      	uxth	r3, r3
 800196c:	429a      	cmp	r2, r3
 800196e:	8163      	strh	r3, [r4, #10]
 8001970:	d101      	bne.n	8001976 <isr_mbx_receive+0x48>
 8001972:	2300      	movs	r3, #0
 8001974:	8163      	strh	r3, [r4, #10]
 8001976:	2004      	movs	r0, #4
 8001978:	bd10      	pop	{r4, pc}
 800197a:	4618      	mov	r0, r3
 800197c:	bd10      	pop	{r4, pc}
	...

08001980 <rt_mbx_psh>:
 8001980:	6843      	ldr	r3, [r0, #4]
 8001982:	b570      	push	{r4, r5, r6, lr}
 8001984:	4604      	mov	r4, r0
 8001986:	460e      	mov	r6, r1
 8001988:	2b00      	cmp	r3, #0
 800198a:	d04b      	beq.n	8001a24 <rt_mbx_psh+0xa4>
 800198c:	7845      	ldrb	r5, [r0, #1]
 800198e:	2d02      	cmp	r5, #2
 8001990:	d020      	beq.n	80019d4 <rt_mbx_psh+0x54>
 8001992:	2d03      	cmp	r5, #3
 8001994:	d00a      	beq.n	80019ac <rt_mbx_psh+0x2c>
 8001996:	2d01      	cmp	r5, #1
 8001998:	d161      	bne.n	8001a5e <rt_mbx_psh+0xde>
 800199a:	f7ff fcc7 	bl	800132c <rt_get_first>
 800199e:	4604      	mov	r4, r0
 80019a0:	4632      	mov	r2, r6
 80019a2:	2110      	movs	r1, #16
 80019a4:	f7ff fe6b 	bl	800167e <rt_ret_val2>
 80019a8:	7065      	strb	r5, [r4, #1]
 80019aa:	e00e      	b.n	80019ca <rt_mbx_psh+0x4a>
 80019ac:	4608      	mov	r0, r1
 80019ae:	f7ff ff2e 	bl	800180e <rt_alloc_box>
 80019b2:	4605      	mov	r5, r0
 80019b4:	2800      	cmp	r0, #0
 80019b6:	d052      	beq.n	8001a5e <rt_mbx_psh+0xde>
 80019b8:	4620      	mov	r0, r4
 80019ba:	f7ff fcb7 	bl	800132c <rt_get_first>
 80019be:	4629      	mov	r1, r5
 80019c0:	4604      	mov	r4, r0
 80019c2:	f7ff fe53 	bl	800166c <rt_ret_val>
 80019c6:	2301      	movs	r3, #1
 80019c8:	7063      	strb	r3, [r4, #1]
 80019ca:	4620      	mov	r0, r4
 80019cc:	f7ff fd54 	bl	8001478 <rt_rmv_dly>
 80019d0:	4621      	mov	r1, r4
 80019d2:	e022      	b.n	8001a1a <rt_mbx_psh+0x9a>
 80019d4:	f7ff fcaa 	bl	800132c <rt_get_first>
 80019d8:	2100      	movs	r1, #0
 80019da:	4605      	mov	r5, r0
 80019dc:	f7ff fe46 	bl	800166c <rt_ret_val>
 80019e0:	8923      	ldrh	r3, [r4, #8]
 80019e2:	69e9      	ldr	r1, [r5, #28]
 80019e4:	1d1a      	adds	r2, r3, #4
 80019e6:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 80019ea:	f3ef 8210 	mrs	r2, PRIMASK
 80019ee:	f3ef 8110 	mrs	r1, PRIMASK
 80019f2:	b672      	cpsid	i
 80019f4:	89a1      	ldrh	r1, [r4, #12]
 80019f6:	3101      	adds	r1, #1
 80019f8:	81a1      	strh	r1, [r4, #12]
 80019fa:	b902      	cbnz	r2, 80019fe <rt_mbx_psh+0x7e>
 80019fc:	b662      	cpsie	i
 80019fe:	89e2      	ldrh	r2, [r4, #14]
 8001a00:	3301      	adds	r3, #1
 8001a02:	b29b      	uxth	r3, r3
 8001a04:	429a      	cmp	r2, r3
 8001a06:	8123      	strh	r3, [r4, #8]
 8001a08:	bf04      	itt	eq
 8001a0a:	2300      	moveq	r3, #0
 8001a0c:	8123      	strheq	r3, [r4, #8]
 8001a0e:	2301      	movs	r3, #1
 8001a10:	706b      	strb	r3, [r5, #1]
 8001a12:	4628      	mov	r0, r5
 8001a14:	f7ff fd30 	bl	8001478 <rt_rmv_dly>
 8001a18:	4629      	mov	r1, r5
 8001a1a:	4811      	ldr	r0, [pc, #68]	; (8001a60 <rt_mbx_psh+0xe0>)
 8001a1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a20:	f7ff bc6c 	b.w	80012fc <rt_put_prio>
 8001a24:	8980      	ldrh	r0, [r0, #12]
 8001a26:	89e1      	ldrh	r1, [r4, #14]
 8001a28:	4288      	cmp	r0, r1
 8001a2a:	d213      	bcs.n	8001a54 <rt_mbx_psh+0xd4>
 8001a2c:	8923      	ldrh	r3, [r4, #8]
 8001a2e:	1d1a      	adds	r2, r3, #4
 8001a30:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001a34:	f3ef 8210 	mrs	r2, PRIMASK
 8001a38:	f3ef 8510 	mrs	r5, PRIMASK
 8001a3c:	b672      	cpsid	i
 8001a3e:	3001      	adds	r0, #1
 8001a40:	81a0      	strh	r0, [r4, #12]
 8001a42:	b902      	cbnz	r2, 8001a46 <rt_mbx_psh+0xc6>
 8001a44:	b662      	cpsie	i
 8001a46:	3301      	adds	r3, #1
 8001a48:	b29b      	uxth	r3, r3
 8001a4a:	4299      	cmp	r1, r3
 8001a4c:	bf08      	it	eq
 8001a4e:	2300      	moveq	r3, #0
 8001a50:	8123      	strh	r3, [r4, #8]
 8001a52:	bd70      	pop	{r4, r5, r6, pc}
 8001a54:	2003      	movs	r0, #3
 8001a56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001a5a:	f7ff bd6d 	b.w	8001538 <os_error>
 8001a5e:	bd70      	pop	{r4, r5, r6, pc}
 8001a60:	20001cd8 	.word	0x20001cd8

08001a64 <rt_evt_psh>:
 8001a64:	b510      	push	{r4, lr}
 8001a66:	8b03      	ldrh	r3, [r0, #24]
 8001a68:	7842      	ldrb	r2, [r0, #1]
 8001a6a:	4319      	orrs	r1, r3
 8001a6c:	2a06      	cmp	r2, #6
 8001a6e:	4604      	mov	r4, r0
 8001a70:	8301      	strh	r1, [r0, #24]
 8001a72:	8b43      	ldrh	r3, [r0, #26]
 8001a74:	d115      	bne.n	8001aa2 <rt_evt_psh+0x3e>
 8001a76:	ea33 0201 	bics.w	r2, r3, r1
 8001a7a:	d119      	bne.n	8001ab0 <rt_evt_psh+0x4c>
 8001a7c:	ea21 0103 	bic.w	r1, r1, r3
 8001a80:	8321      	strh	r1, [r4, #24]
 8001a82:	4620      	mov	r0, r4
 8001a84:	f7ff fcf8 	bl	8001478 <rt_rmv_dly>
 8001a88:	2301      	movs	r3, #1
 8001a8a:	4620      	mov	r0, r4
 8001a8c:	7063      	strb	r3, [r4, #1]
 8001a8e:	8b62      	ldrh	r2, [r4, #26]
 8001a90:	2108      	movs	r1, #8
 8001a92:	f7ff fdf4 	bl	800167e <rt_ret_val2>
 8001a96:	4621      	mov	r1, r4
 8001a98:	4806      	ldr	r0, [pc, #24]	; (8001ab4 <rt_evt_psh+0x50>)
 8001a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001a9e:	f7ff bc2d 	b.w	80012fc <rt_put_prio>
 8001aa2:	2a05      	cmp	r2, #5
 8001aa4:	d104      	bne.n	8001ab0 <rt_evt_psh+0x4c>
 8001aa6:	ea11 0203 	ands.w	r2, r1, r3
 8001aaa:	d001      	beq.n	8001ab0 <rt_evt_psh+0x4c>
 8001aac:	8342      	strh	r2, [r0, #26]
 8001aae:	e7e5      	b.n	8001a7c <rt_evt_psh+0x18>
 8001ab0:	bd10      	pop	{r4, pc}
 8001ab2:	bf00      	nop
 8001ab4:	20001cd8 	.word	0x20001cd8

08001ab8 <rt_init_robin>:
 8001ab8:	4b03      	ldr	r3, [pc, #12]	; (8001ac8 <rt_init_robin+0x10>)
 8001aba:	2200      	movs	r2, #0
 8001abc:	601a      	str	r2, [r3, #0]
 8001abe:	4a03      	ldr	r2, [pc, #12]	; (8001acc <rt_init_robin+0x14>)
 8001ac0:	6812      	ldr	r2, [r2, #0]
 8001ac2:	80da      	strh	r2, [r3, #6]
 8001ac4:	4770      	bx	lr
 8001ac6:	bf00      	nop
 8001ac8:	200026d8 	.word	0x200026d8
 8001acc:	08005508 	.word	0x08005508

08001ad0 <rt_chk_robin>:
 8001ad0:	b508      	push	{r3, lr}
 8001ad2:	4b0e      	ldr	r3, [pc, #56]	; (8001b0c <rt_chk_robin+0x3c>)
 8001ad4:	685a      	ldr	r2, [r3, #4]
 8001ad6:	4b0e      	ldr	r3, [pc, #56]	; (8001b10 <rt_chk_robin+0x40>)
 8001ad8:	6819      	ldr	r1, [r3, #0]
 8001ada:	4291      	cmp	r1, r2
 8001adc:	490d      	ldr	r1, [pc, #52]	; (8001b14 <rt_chk_robin+0x44>)
 8001ade:	d005      	beq.n	8001aec <rt_chk_robin+0x1c>
 8001ae0:	601a      	str	r2, [r3, #0]
 8001ae2:	88da      	ldrh	r2, [r3, #6]
 8001ae4:	6808      	ldr	r0, [r1, #0]
 8001ae6:	3a01      	subs	r2, #1
 8001ae8:	4402      	add	r2, r0
 8001aea:	809a      	strh	r2, [r3, #4]
 8001aec:	8898      	ldrh	r0, [r3, #4]
 8001aee:	880a      	ldrh	r2, [r1, #0]
 8001af0:	4290      	cmp	r0, r2
 8001af2:	d10a      	bne.n	8001b0a <rt_chk_robin+0x3a>
 8001af4:	2200      	movs	r2, #0
 8001af6:	4805      	ldr	r0, [pc, #20]	; (8001b0c <rt_chk_robin+0x3c>)
 8001af8:	601a      	str	r2, [r3, #0]
 8001afa:	f7ff fc17 	bl	800132c <rt_get_first>
 8001afe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001b02:	4601      	mov	r1, r0
 8001b04:	4801      	ldr	r0, [pc, #4]	; (8001b0c <rt_chk_robin+0x3c>)
 8001b06:	f7ff bbf9 	b.w	80012fc <rt_put_prio>
 8001b0a:	bd08      	pop	{r3, pc}
 8001b0c:	20001cd8 	.word	0x20001cd8
 8001b10:	200026d8 	.word	0x200026d8
 8001b14:	20002734 	.word	0x20002734

08001b18 <rt_timer_insert>:
 8001b18:	4a0b      	ldr	r2, [pc, #44]	; (8001b48 <rt_timer_insert+0x30>)
 8001b1a:	6813      	ldr	r3, [r2, #0]
 8001b1c:	b530      	push	{r4, r5, lr}
 8001b1e:	2400      	movs	r4, #0
 8001b20:	b943      	cbnz	r3, 8001b34 <rt_timer_insert+0x1c>
 8001b22:	6003      	str	r3, [r0, #0]
 8001b24:	6081      	str	r1, [r0, #8]
 8001b26:	b113      	cbz	r3, 8001b2e <rt_timer_insert+0x16>
 8001b28:	689d      	ldr	r5, [r3, #8]
 8001b2a:	1a69      	subs	r1, r5, r1
 8001b2c:	6099      	str	r1, [r3, #8]
 8001b2e:	b144      	cbz	r4, 8001b42 <rt_timer_insert+0x2a>
 8001b30:	6020      	str	r0, [r4, #0]
 8001b32:	bd30      	pop	{r4, r5, pc}
 8001b34:	689d      	ldr	r5, [r3, #8]
 8001b36:	42a9      	cmp	r1, r5
 8001b38:	d3f3      	bcc.n	8001b22 <rt_timer_insert+0xa>
 8001b3a:	461c      	mov	r4, r3
 8001b3c:	1b49      	subs	r1, r1, r5
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	e7ee      	b.n	8001b20 <rt_timer_insert+0x8>
 8001b42:	6010      	str	r0, [r2, #0]
 8001b44:	bd30      	pop	{r4, r5, pc}
 8001b46:	bf00      	nop
 8001b48:	200026e8 	.word	0x200026e8

08001b4c <rt_ms2tick>:
 8001b4c:	b1c0      	cbz	r0, 8001b80 <rt_ms2tick+0x34>
 8001b4e:	1c43      	adds	r3, r0, #1
 8001b50:	d011      	beq.n	8001b76 <rt_ms2tick+0x2a>
 8001b52:	4b0c      	ldr	r3, [pc, #48]	; (8001b84 <rt_ms2tick+0x38>)
 8001b54:	4298      	cmp	r0, r3
 8001b56:	d811      	bhi.n	8001b7c <rt_ms2tick+0x30>
 8001b58:	4b0b      	ldr	r3, [pc, #44]	; (8001b88 <rt_ms2tick+0x3c>)
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001b60:	1e5a      	subs	r2, r3, #1
 8001b62:	fb01 2000 	mla	r0, r1, r0, r2
 8001b66:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b6a:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001b6e:	4283      	cmp	r3, r0
 8001b70:	d806      	bhi.n	8001b80 <rt_ms2tick+0x34>
 8001b72:	b298      	uxth	r0, r3
 8001b74:	4770      	bx	lr
 8001b76:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001b7a:	4770      	bx	lr
 8001b7c:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001b80:	4770      	bx	lr
 8001b82:	bf00      	nop
 8001b84:	003d0900 	.word	0x003d0900
 8001b88:	080054c0 	.word	0x080054c0

08001b8c <rt_tid2ptcb>:
 8001b8c:	b138      	cbz	r0, 8001b9e <rt_tid2ptcb+0x12>
 8001b8e:	0783      	lsls	r3, r0, #30
 8001b90:	d104      	bne.n	8001b9c <rt_tid2ptcb+0x10>
 8001b92:	7803      	ldrb	r3, [r0, #0]
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	bf18      	it	ne
 8001b98:	2000      	movne	r0, #0
 8001b9a:	4770      	bx	lr
 8001b9c:	2000      	movs	r0, #0
 8001b9e:	4770      	bx	lr

08001ba0 <svcKernelStart>:
 8001ba0:	b5b0      	push	{r4, r5, r7, lr}
 8001ba2:	4d0e      	ldr	r5, [pc, #56]	; (8001bdc <svcKernelStart+0x3c>)
 8001ba4:	7828      	ldrb	r0, [r5, #0]
 8001ba6:	af00      	add	r7, sp, #0
 8001ba8:	b9a8      	cbnz	r0, 8001bd6 <svcKernelStart+0x36>
 8001baa:	4c0d      	ldr	r4, [pc, #52]	; (8001be0 <svcKernelStart+0x40>)
 8001bac:	6823      	ldr	r3, [r4, #0]
 8001bae:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001bb2:	f000 fb51 	bl	8002258 <rt_tsk_prio>
 8001bb6:	6823      	ldr	r3, [r4, #0]
 8001bb8:	78da      	ldrb	r2, [r3, #3]
 8001bba:	2aff      	cmp	r2, #255	; 0xff
 8001bbc:	d103      	bne.n	8001bc6 <svcKernelStart+0x26>
 8001bbe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001bc0:	3220      	adds	r2, #32
 8001bc2:	f382 8809 	msr	PSP, r2
 8001bc6:	6862      	ldr	r2, [r4, #4]
 8001bc8:	b90a      	cbnz	r2, 8001bce <svcKernelStart+0x2e>
 8001bca:	e884 000c 	stmia.w	r4, {r2, r3}
 8001bce:	f000 fcfb 	bl	80025c8 <rt_sys_start>
 8001bd2:	2301      	movs	r3, #1
 8001bd4:	702b      	strb	r3, [r5, #0]
 8001bd6:	2000      	movs	r0, #0
 8001bd8:	bdb0      	pop	{r4, r5, r7, pc}
 8001bda:	bf00      	nop
 8001bdc:	200026e5 	.word	0x200026e5
 8001be0:	200026ec 	.word	0x200026ec

08001be4 <svcKernelRunning>:
 8001be4:	4b01      	ldr	r3, [pc, #4]	; (8001bec <svcKernelRunning+0x8>)
 8001be6:	7818      	ldrb	r0, [r3, #0]
 8001be8:	4770      	bx	lr
 8001bea:	bf00      	nop
 8001bec:	200026e5 	.word	0x200026e5

08001bf0 <osKernelRunning>:
 8001bf0:	b510      	push	{r4, lr}
 8001bf2:	f3ef 8410 	mrs	r4, PRIMASK
 8001bf6:	b934      	cbnz	r4, 8001c06 <osKernelRunning+0x16>
 8001bf8:	f3ef 8405 	mrs	r4, IPSR
 8001bfc:	b91c      	cbnz	r4, 8001c06 <osKernelRunning+0x16>
 8001bfe:	f3ef 8414 	mrs	r4, CONTROL
 8001c02:	07e4      	lsls	r4, r4, #31
 8001c04:	d402      	bmi.n	8001c0c <osKernelRunning+0x1c>
 8001c06:	4b03      	ldr	r3, [pc, #12]	; (8001c14 <osKernelRunning+0x24>)
 8001c08:	7818      	ldrb	r0, [r3, #0]
 8001c0a:	bd10      	pop	{r4, pc}
 8001c0c:	f8df c008 	ldr.w	r12, [pc, #8]	; 8001c18 <osKernelRunning+0x28>
 8001c10:	df00      	svc	0
 8001c12:	bd10      	pop	{r4, pc}
 8001c14:	200026e5 	.word	0x200026e5
 8001c18:	08001be5 	.word	0x08001be5

08001c1c <osKernelStart>:
 8001c1c:	b590      	push	{r4, r7, lr}
 8001c1e:	b089      	sub	sp, #36	; 0x24
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	f3ef 8310 	mrs	r3, PRIMASK
 8001c26:	2b00      	cmp	r3, #0
 8001c28:	d137      	bne.n	8001c9a <osKernelStart+0x7e>
 8001c2a:	f3ef 8305 	mrs	r3, IPSR
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d133      	bne.n	8001c9a <osKernelStart+0x7e>
 8001c32:	f7ff ffdd 	bl	8001bf0 <osKernelRunning>
 8001c36:	b928      	cbnz	r0, 8001c44 <osKernelStart+0x28>
 8001c38:	4c19      	ldr	r4, [pc, #100]	; (8001ca0 <osKernelStart+0x84>)
 8001c3a:	6824      	ldr	r4, [r4, #0]
 8001c3c:	b114      	cbz	r4, 8001c44 <osKernelStart+0x28>
 8001c3e:	6864      	ldr	r4, [r4, #4]
 8001c40:	b104      	cbz	r4, 8001c44 <osKernelStart+0x28>
 8001c42:	47a0      	blx	r4
 8001c44:	f3ef 8414 	mrs	r4, CONTROL
 8001c48:	f004 0403 	and.w	r4, r4, #3
 8001c4c:	2c02      	cmp	r4, #2
 8001c4e:	d018      	beq.n	8001c82 <osKernelStart+0x66>
 8001c50:	2c03      	cmp	r4, #3
 8001c52:	d01c      	beq.n	8001c8e <osKernelStart+0x72>
 8001c54:	2c01      	cmp	r4, #1
 8001c56:	d01e      	beq.n	8001c96 <osKernelStart+0x7a>
 8001c58:	f107 0420 	add.w	r4, r7, #32
 8001c5c:	f384 8809 	msr	PSP, r4
 8001c60:	4c10      	ldr	r4, [pc, #64]	; (8001ca4 <osKernelStart+0x88>)
 8001c62:	7824      	ldrb	r4, [r4, #0]
 8001c64:	07e4      	lsls	r4, r4, #31
 8001c66:	d510      	bpl.n	8001c8a <osKernelStart+0x6e>
 8001c68:	2402      	movs	r4, #2
 8001c6a:	f384 8814 	msr	CONTROL, r4
 8001c6e:	f3bf 8f4f 	dsb	sy
 8001c72:	f3bf 8f6f 	isb	sy
 8001c76:	f8df c030 	ldr.w	r12, [pc, #48]	; 8001ca8 <osKernelStart+0x8c>
 8001c7a:	df00      	svc	0
 8001c7c:	3724      	adds	r7, #36	; 0x24
 8001c7e:	46bd      	mov	sp, r7
 8001c80:	bd90      	pop	{r4, r7, pc}
 8001c82:	4c08      	ldr	r4, [pc, #32]	; (8001ca4 <osKernelStart+0x88>)
 8001c84:	7824      	ldrb	r4, [r4, #0]
 8001c86:	07e4      	lsls	r4, r4, #31
 8001c88:	d4f5      	bmi.n	8001c76 <osKernelStart+0x5a>
 8001c8a:	2403      	movs	r4, #3
 8001c8c:	e7ed      	b.n	8001c6a <osKernelStart+0x4e>
 8001c8e:	4c05      	ldr	r4, [pc, #20]	; (8001ca4 <osKernelStart+0x88>)
 8001c90:	7824      	ldrb	r4, [r4, #0]
 8001c92:	07e4      	lsls	r4, r4, #31
 8001c94:	d5ef      	bpl.n	8001c76 <osKernelStart+0x5a>
 8001c96:	20ff      	movs	r0, #255	; 0xff
 8001c98:	e7f0      	b.n	8001c7c <osKernelStart+0x60>
 8001c9a:	2082      	movs	r0, #130	; 0x82
 8001c9c:	e7ee      	b.n	8001c7c <osKernelStart+0x60>
 8001c9e:	bf00      	nop
 8001ca0:	200026d4 	.word	0x200026d4
 8001ca4:	080054ee 	.word	0x080054ee
 8001ca8:	08001ba1 	.word	0x08001ba1

08001cac <svcThreadCreate>:
 8001cac:	b570      	push	{r4, r5, r6, lr}
 8001cae:	460b      	mov	r3, r1
 8001cb0:	4616      	mov	r6, r2
 8001cb2:	4602      	mov	r2, r0
 8001cb4:	b910      	cbnz	r0, 8001cbc <svcThreadCreate+0x10>
 8001cb6:	2400      	movs	r4, #0
 8001cb8:	4620      	mov	r0, r4
 8001cba:	bd70      	pop	{r4, r5, r6, pc}
 8001cbc:	6800      	ldr	r0, [r0, #0]
 8001cbe:	2800      	cmp	r0, #0
 8001cc0:	d0f9      	beq.n	8001cb6 <svcThreadCreate+0xa>
 8001cc2:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 8001cc6:	1ce5      	adds	r5, r4, #3
 8001cc8:	b2ad      	uxth	r5, r5
 8001cca:	2d06      	cmp	r5, #6
 8001ccc:	d8f3      	bhi.n	8001cb6 <svcThreadCreate+0xa>
 8001cce:	68d1      	ldr	r1, [r2, #12]
 8001cd0:	b1c1      	cbz	r1, 8001d04 <svcThreadCreate+0x58>
 8001cd2:	6912      	ldr	r2, [r2, #16]
 8001cd4:	3404      	adds	r4, #4
 8001cd6:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 8001cda:	f000 fafb 	bl	80022d4 <rt_tsk_create>
 8001cde:	2800      	cmp	r0, #0
 8001ce0:	d0e9      	beq.n	8001cb6 <svcThreadCreate+0xa>
 8001ce2:	4b0a      	ldr	r3, [pc, #40]	; (8001d0c <svcThreadCreate+0x60>)
 8001ce4:	4a0a      	ldr	r2, [pc, #40]	; (8001d10 <svcThreadCreate+0x64>)
 8001ce6:	3801      	subs	r0, #1
 8001ce8:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8001cec:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001cee:	635a      	str	r2, [r3, #52]	; 0x34
 8001cf0:	4b08      	ldr	r3, [pc, #32]	; (8001d14 <svcThreadCreate+0x68>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	b143      	cbz	r3, 8001d08 <svcThreadCreate+0x5c>
 8001cf6:	689b      	ldr	r3, [r3, #8]
 8001cf8:	b133      	cbz	r3, 8001d08 <svcThreadCreate+0x5c>
 8001cfa:	4631      	mov	r1, r6
 8001cfc:	78e0      	ldrb	r0, [r4, #3]
 8001cfe:	4798      	blx	r3
 8001d00:	63e0      	str	r0, [r4, #60]	; 0x3c
 8001d02:	e7d9      	b.n	8001cb8 <svcThreadCreate+0xc>
 8001d04:	460a      	mov	r2, r1
 8001d06:	e7e5      	b.n	8001cd4 <svcThreadCreate+0x28>
 8001d08:	63e6      	str	r6, [r4, #60]	; 0x3c
 8001d0a:	e7d5      	b.n	8001cb8 <svcThreadCreate+0xc>
 8001d0c:	20001f18 	.word	0x20001f18
 8001d10:	08001e99 	.word	0x08001e99
 8001d14:	200026d4 	.word	0x200026d4

08001d18 <svcThreadGetId>:
 8001d18:	b508      	push	{r3, lr}
 8001d1a:	f000 fa95 	bl	8002248 <rt_tsk_self>
 8001d1e:	b118      	cbz	r0, 8001d28 <svcThreadGetId+0x10>
 8001d20:	3801      	subs	r0, #1
 8001d22:	4b02      	ldr	r3, [pc, #8]	; (8001d2c <svcThreadGetId+0x14>)
 8001d24:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8001d28:	bd08      	pop	{r3, pc}
 8001d2a:	bf00      	nop
 8001d2c:	20001f18 	.word	0x20001f18

08001d30 <svcThreadTerminate>:
 8001d30:	b510      	push	{r4, lr}
 8001d32:	f7ff ff2b 	bl	8001b8c <rt_tid2ptcb>
 8001d36:	4604      	mov	r4, r0
 8001d38:	b170      	cbz	r0, 8001d58 <svcThreadTerminate+0x28>
 8001d3a:	4b08      	ldr	r3, [pc, #32]	; (8001d5c <svcThreadTerminate+0x2c>)
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	b11b      	cbz	r3, 8001d48 <svcThreadTerminate+0x18>
 8001d40:	68db      	ldr	r3, [r3, #12]
 8001d42:	b10b      	cbz	r3, 8001d48 <svcThreadTerminate+0x18>
 8001d44:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8001d46:	4798      	blx	r3
 8001d48:	78e0      	ldrb	r0, [r4, #3]
 8001d4a:	f000 fb19 	bl	8002380 <rt_tsk_delete>
 8001d4e:	28ff      	cmp	r0, #255	; 0xff
 8001d50:	bf0c      	ite	eq
 8001d52:	2081      	moveq	r0, #129	; 0x81
 8001d54:	2000      	movne	r0, #0
 8001d56:	bd10      	pop	{r4, pc}
 8001d58:	2080      	movs	r0, #128	; 0x80
 8001d5a:	bd10      	pop	{r4, pc}
 8001d5c:	200026d4 	.word	0x200026d4

08001d60 <svcDelay>:
 8001d60:	b508      	push	{r3, lr}
 8001d62:	b128      	cbz	r0, 8001d70 <svcDelay+0x10>
 8001d64:	f7ff fef2 	bl	8001b4c <rt_ms2tick>
 8001d68:	f000 fd1a 	bl	80027a0 <rt_dly_wait>
 8001d6c:	2040      	movs	r0, #64	; 0x40
 8001d6e:	bd08      	pop	{r3, pc}
 8001d70:	bd08      	pop	{r3, pc}
	...

08001d74 <osDelay>:
 8001d74:	b510      	push	{r4, lr}
 8001d76:	f3ef 8410 	mrs	r4, PRIMASK
 8001d7a:	b934      	cbnz	r4, 8001d8a <osDelay+0x16>
 8001d7c:	f3ef 8405 	mrs	r4, IPSR
 8001d80:	b91c      	cbnz	r4, 8001d8a <osDelay+0x16>
 8001d82:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001d90 <osDelay+0x1c>
 8001d86:	df00      	svc	0
 8001d88:	bd10      	pop	{r4, pc}
 8001d8a:	2082      	movs	r0, #130	; 0x82
 8001d8c:	bd10      	pop	{r4, pc}
 8001d8e:	0000      	.short	0x0000
 8001d90:	08001d61 	.word	0x08001d61

08001d94 <svcTimerCall>:
 8001d94:	0783      	lsls	r3, r0, #30
 8001d96:	d105      	bne.n	8001da4 <svcTimerCall+0x10>
 8001d98:	b138      	cbz	r0, 8001daa <svcTimerCall+0x16>
 8001d9a:	6943      	ldr	r3, [r0, #20]
 8001d9c:	6901      	ldr	r1, [r0, #16]
 8001d9e:	681b      	ldr	r3, [r3, #0]
 8001da0:	4618      	mov	r0, r3
 8001da2:	4770      	bx	lr
 8001da4:	2300      	movs	r3, #0
 8001da6:	4619      	mov	r1, r3
 8001da8:	e7fa      	b.n	8001da0 <svcTimerCall+0xc>
 8001daa:	4603      	mov	r3, r0
 8001dac:	e7fb      	b.n	8001da6 <svcTimerCall+0x12>
	...

08001db0 <osTimerCall>:
 8001db0:	b510      	push	{r4, lr}
 8001db2:	4604      	mov	r4, r0
 8001db4:	4608      	mov	r0, r1
 8001db6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001dc4 <osTimerCall+0x14>
 8001dba:	df00      	svc	0
 8001dbc:	e884 0003 	stmia.w	r4, {r0, r1}
 8001dc0:	4620      	mov	r0, r4
 8001dc2:	bd10      	pop	{r4, pc}
 8001dc4:	08001d95 	.word	0x08001d95

08001dc8 <svcMutexCreate>:
 8001dc8:	b510      	push	{r4, lr}
 8001dca:	b148      	cbz	r0, 8001de0 <svcMutexCreate+0x18>
 8001dcc:	6804      	ldr	r4, [r0, #0]
 8001dce:	b124      	cbz	r4, 8001dda <svcMutexCreate+0x12>
 8001dd0:	7823      	ldrb	r3, [r4, #0]
 8001dd2:	b923      	cbnz	r3, 8001dde <svcMutexCreate+0x16>
 8001dd4:	4620      	mov	r0, r4
 8001dd6:	f000 fc3d 	bl	8002654 <rt_mut_init>
 8001dda:	4620      	mov	r0, r4
 8001ddc:	bd10      	pop	{r4, pc}
 8001dde:	2000      	movs	r0, #0
 8001de0:	bd10      	pop	{r4, pc}

08001de2 <svcMutexWait>:
 8001de2:	b570      	push	{r4, r5, r6, lr}
 8001de4:	f010 0403 	ands.w	r4, r0, #3
 8001de8:	4605      	mov	r5, r0
 8001dea:	460e      	mov	r6, r1
 8001dec:	d111      	bne.n	8001e12 <svcMutexWait+0x30>
 8001dee:	b180      	cbz	r0, 8001e12 <svcMutexWait+0x30>
 8001df0:	7803      	ldrb	r3, [r0, #0]
 8001df2:	2b03      	cmp	r3, #3
 8001df4:	d10d      	bne.n	8001e12 <svcMutexWait+0x30>
 8001df6:	4608      	mov	r0, r1
 8001df8:	f7ff fea8 	bl	8001b4c <rt_ms2tick>
 8001dfc:	4601      	mov	r1, r0
 8001dfe:	4628      	mov	r0, r5
 8001e00:	f000 fca0 	bl	8002744 <rt_mut_wait>
 8001e04:	2801      	cmp	r0, #1
 8001e06:	d106      	bne.n	8001e16 <svcMutexWait+0x34>
 8001e08:	2e00      	cmp	r6, #0
 8001e0a:	bf14      	ite	ne
 8001e0c:	20c1      	movne	r0, #193	; 0xc1
 8001e0e:	2081      	moveq	r0, #129	; 0x81
 8001e10:	bd70      	pop	{r4, r5, r6, pc}
 8001e12:	2080      	movs	r0, #128	; 0x80
 8001e14:	bd70      	pop	{r4, r5, r6, pc}
 8001e16:	4620      	mov	r0, r4
 8001e18:	bd70      	pop	{r4, r5, r6, pc}

08001e1a <svcMutexRelease>:
 8001e1a:	0782      	lsls	r2, r0, #30
 8001e1c:	b508      	push	{r3, lr}
 8001e1e:	d10a      	bne.n	8001e36 <svcMutexRelease+0x1c>
 8001e20:	b148      	cbz	r0, 8001e36 <svcMutexRelease+0x1c>
 8001e22:	7803      	ldrb	r3, [r0, #0]
 8001e24:	2b03      	cmp	r3, #3
 8001e26:	d106      	bne.n	8001e36 <svcMutexRelease+0x1c>
 8001e28:	f000 fc1c 	bl	8002664 <rt_mut_release>
 8001e2c:	28ff      	cmp	r0, #255	; 0xff
 8001e2e:	bf0c      	ite	eq
 8001e30:	2081      	moveq	r0, #129	; 0x81
 8001e32:	2000      	movne	r0, #0
 8001e34:	bd08      	pop	{r3, pc}
 8001e36:	2080      	movs	r0, #128	; 0x80
 8001e38:	bd08      	pop	{r3, pc}
	...

08001e3c <osMutexCreate>:
 8001e3c:	b570      	push	{r4, r5, r6, lr}
 8001e3e:	4605      	mov	r5, r0
 8001e40:	f3ef 8410 	mrs	r4, PRIMASK
 8001e44:	b994      	cbnz	r4, 8001e6c <osMutexCreate+0x30>
 8001e46:	f3ef 8605 	mrs	r6, IPSR
 8001e4a:	b97e      	cbnz	r6, 8001e6c <osMutexCreate+0x30>
 8001e4c:	f3ef 8414 	mrs	r4, CONTROL
 8001e50:	07e4      	lsls	r4, r4, #31
 8001e52:	d406      	bmi.n	8001e62 <osMutexCreate+0x26>
 8001e54:	4c06      	ldr	r4, [pc, #24]	; (8001e70 <osMutexCreate+0x34>)
 8001e56:	7824      	ldrb	r4, [r4, #0]
 8001e58:	b91c      	cbnz	r4, 8001e62 <osMutexCreate+0x26>
 8001e5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e5e:	f7ff bfb3 	b.w	8001dc8 <svcMutexCreate>
 8001e62:	4628      	mov	r0, r5
 8001e64:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001e74 <osMutexCreate+0x38>
 8001e68:	df00      	svc	0
 8001e6a:	bd70      	pop	{r4, r5, r6, pc}
 8001e6c:	2000      	movs	r0, #0
 8001e6e:	bd70      	pop	{r4, r5, r6, pc}
 8001e70:	200026e5 	.word	0x200026e5
 8001e74:	08001dc9 	.word	0x08001dc9

08001e78 <osMutexWait>:
 8001e78:	b510      	push	{r4, lr}
 8001e7a:	f3ef 8410 	mrs	r4, PRIMASK
 8001e7e:	b934      	cbnz	r4, 8001e8e <osMutexWait+0x16>
 8001e80:	f3ef 8405 	mrs	r4, IPSR
 8001e84:	b91c      	cbnz	r4, 8001e8e <osMutexWait+0x16>
 8001e86:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001e94 <osMutexWait+0x1c>
 8001e8a:	df00      	svc	0
 8001e8c:	bd10      	pop	{r4, pc}
 8001e8e:	2082      	movs	r0, #130	; 0x82
 8001e90:	bd10      	pop	{r4, pc}
 8001e92:	0000      	.short	0x0000
 8001e94:	08001de3 	.word	0x08001de3

08001e98 <osThreadExit>:
 8001e98:	4808      	ldr	r0, [pc, #32]	; (8001ebc <osThreadExit+0x24>)
 8001e9a:	b508      	push	{r3, lr}
 8001e9c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001ea0:	6800      	ldr	r0, [r0, #0]
 8001ea2:	f7ff ffe9 	bl	8001e78 <osMutexWait>
 8001ea6:	f8df c018 	ldr.w	r12, [pc, #24]	; 8001ec0 <osThreadExit+0x28>
 8001eaa:	df00      	svc	0
 8001eac:	4604      	mov	r4, r0
 8001eae:	f7ff fb51 	bl	8001554 <sysThreadTerminate>
 8001eb2:	4620      	mov	r0, r4
 8001eb4:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001ec4 <osThreadExit+0x2c>
 8001eb8:	df00      	svc	0
 8001eba:	e7fe      	b.n	8001eba <osThreadExit+0x22>
 8001ebc:	200026e0 	.word	0x200026e0
 8001ec0:	08001d19 	.word	0x08001d19
 8001ec4:	08001d31 	.word	0x08001d31

08001ec8 <osMutexRelease>:
 8001ec8:	b510      	push	{r4, lr}
 8001eca:	f3ef 8410 	mrs	r4, PRIMASK
 8001ece:	b934      	cbnz	r4, 8001ede <osMutexRelease+0x16>
 8001ed0:	f3ef 8405 	mrs	r4, IPSR
 8001ed4:	b91c      	cbnz	r4, 8001ede <osMutexRelease+0x16>
 8001ed6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8001ee4 <osMutexRelease+0x1c>
 8001eda:	df00      	svc	0
 8001edc:	bd10      	pop	{r4, pc}
 8001ede:	2082      	movs	r0, #130	; 0x82
 8001ee0:	bd10      	pop	{r4, pc}
 8001ee2:	0000      	.short	0x0000
 8001ee4:	08001e1b 	.word	0x08001e1b

08001ee8 <osThreadContextCreate>:
 8001ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001eec:	4680      	mov	r8, r0
 8001eee:	460f      	mov	r7, r1
 8001ef0:	4616      	mov	r6, r2
 8001ef2:	f3ef 8410 	mrs	r4, PRIMASK
 8001ef6:	bb04      	cbnz	r4, 8001f3a <osThreadContextCreate+0x52>
 8001ef8:	f3ef 8305 	mrs	r3, IPSR
 8001efc:	b9d3      	cbnz	r3, 8001f34 <osThreadContextCreate+0x4c>
 8001efe:	f3ef 8314 	mrs	r3, CONTROL
 8001f02:	07db      	lsls	r3, r3, #31
 8001f04:	d406      	bmi.n	8001f14 <osThreadContextCreate+0x2c>
 8001f06:	4b0e      	ldr	r3, [pc, #56]	; (8001f40 <osThreadContextCreate+0x58>)
 8001f08:	781b      	ldrb	r3, [r3, #0]
 8001f0a:	b91b      	cbnz	r3, 8001f14 <osThreadContextCreate+0x2c>
 8001f0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001f10:	f7ff becc 	b.w	8001cac <svcThreadCreate>
 8001f14:	4d0b      	ldr	r5, [pc, #44]	; (8001f44 <osThreadContextCreate+0x5c>)
 8001f16:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001f1a:	6828      	ldr	r0, [r5, #0]
 8001f1c:	f7ff ffac 	bl	8001e78 <osMutexWait>
 8001f20:	4640      	mov	r0, r8
 8001f22:	4639      	mov	r1, r7
 8001f24:	4632      	mov	r2, r6
 8001f26:	f8df c020 	ldr.w	r12, [pc, #32]	; 8001f48 <osThreadContextCreate+0x60>
 8001f2a:	df00      	svc	0
 8001f2c:	4604      	mov	r4, r0
 8001f2e:	6828      	ldr	r0, [r5, #0]
 8001f30:	f7ff ffca 	bl	8001ec8 <osMutexRelease>
 8001f34:	4620      	mov	r0, r4
 8001f36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001f3a:	2400      	movs	r4, #0
 8001f3c:	e7fa      	b.n	8001f34 <osThreadContextCreate+0x4c>
 8001f3e:	bf00      	nop
 8001f40:	200026e5 	.word	0x200026e5
 8001f44:	200026e0 	.word	0x200026e0
 8001f48:	08001cad 	.word	0x08001cad

08001f4c <osThreadCreate>:
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	f7ff bfcb 	b.w	8001ee8 <osThreadContextCreate>

08001f52 <svcMessageCreate>:
 8001f52:	b510      	push	{r4, lr}
 8001f54:	4604      	mov	r4, r0
 8001f56:	b160      	cbz	r0, 8001f72 <svcMessageCreate+0x20>
 8001f58:	6801      	ldr	r1, [r0, #0]
 8001f5a:	b151      	cbz	r1, 8001f72 <svcMessageCreate+0x20>
 8001f5c:	6840      	ldr	r0, [r0, #4]
 8001f5e:	b148      	cbz	r0, 8001f74 <svcMessageCreate+0x22>
 8001f60:	7803      	ldrb	r3, [r0, #0]
 8001f62:	b933      	cbnz	r3, 8001f72 <svcMessageCreate+0x20>
 8001f64:	3104      	adds	r1, #4
 8001f66:	0089      	lsls	r1, r1, #2
 8001f68:	b289      	uxth	r1, r1
 8001f6a:	f7ff fc71 	bl	8001850 <rt_mbx_init>
 8001f6e:	6860      	ldr	r0, [r4, #4]
 8001f70:	bd10      	pop	{r4, pc}
 8001f72:	2000      	movs	r0, #0
 8001f74:	bd10      	pop	{r4, pc}
	...

08001f78 <svcKernelInitialize>:
 8001f78:	b538      	push	{r3, r4, r5, lr}
 8001f7a:	4c11      	ldr	r4, [pc, #68]	; (8001fc0 <svcKernelInitialize+0x48>)
 8001f7c:	7823      	ldrb	r3, [r4, #0]
 8001f7e:	b90b      	cbnz	r3, 8001f84 <svcKernelInitialize+0xc>
 8001f80:	f000 faa8 	bl	80024d4 <rt_sys_init>
 8001f84:	4b0f      	ldr	r3, [pc, #60]	; (8001fc4 <svcKernelInitialize+0x4c>)
 8001f86:	7825      	ldrb	r5, [r4, #0]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	22ff      	movs	r2, #255	; 0xff
 8001f8c:	709a      	strb	r2, [r3, #2]
 8001f8e:	b98d      	cbnz	r5, 8001fb4 <svcKernelInitialize+0x3c>
 8001f90:	4629      	mov	r1, r5
 8001f92:	480d      	ldr	r0, [pc, #52]	; (8001fc8 <svcKernelInitialize+0x50>)
 8001f94:	f7ff ffdd 	bl	8001f52 <svcMessageCreate>
 8001f98:	4b0c      	ldr	r3, [pc, #48]	; (8001fcc <svcKernelInitialize+0x54>)
 8001f9a:	462a      	mov	r2, r5
 8001f9c:	6018      	str	r0, [r3, #0]
 8001f9e:	4629      	mov	r1, r5
 8001fa0:	480b      	ldr	r0, [pc, #44]	; (8001fd0 <svcKernelInitialize+0x58>)
 8001fa2:	f7ff fe83 	bl	8001cac <svcThreadCreate>
 8001fa6:	4b0b      	ldr	r3, [pc, #44]	; (8001fd4 <svcKernelInitialize+0x5c>)
 8001fa8:	6018      	str	r0, [r3, #0]
 8001faa:	480b      	ldr	r0, [pc, #44]	; (8001fd8 <svcKernelInitialize+0x60>)
 8001fac:	f7ff ff46 	bl	8001e3c <osMutexCreate>
 8001fb0:	4b0a      	ldr	r3, [pc, #40]	; (8001fdc <svcKernelInitialize+0x64>)
 8001fb2:	6018      	str	r0, [r3, #0]
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	7023      	strb	r3, [r4, #0]
 8001fb8:	4b09      	ldr	r3, [pc, #36]	; (8001fe0 <svcKernelInitialize+0x68>)
 8001fba:	2000      	movs	r0, #0
 8001fbc:	7018      	strb	r0, [r3, #0]
 8001fbe:	bd38      	pop	{r3, r4, r5, pc}
 8001fc0:	200026e4 	.word	0x200026e4
 8001fc4:	200026ec 	.word	0x200026ec
 8001fc8:	080054f4 	.word	0x080054f4
 8001fcc:	20001fd8 	.word	0x20001fd8
 8001fd0:	08005510 	.word	0x08005510
 8001fd4:	200026cc 	.word	0x200026cc
 8001fd8:	08005528 	.word	0x08005528
 8001fdc:	200026e0 	.word	0x200026e0
 8001fe0:	200026e5 	.word	0x200026e5

08001fe4 <osKernelInitialize>:
 8001fe4:	b510      	push	{r4, lr}
 8001fe6:	f3ef 8410 	mrs	r4, PRIMASK
 8001fea:	b974      	cbnz	r4, 800200a <osKernelInitialize+0x26>
 8001fec:	f3ef 8405 	mrs	r4, IPSR
 8001ff0:	b95c      	cbnz	r4, 800200a <osKernelInitialize+0x26>
 8001ff2:	f3ef 8414 	mrs	r4, CONTROL
 8001ff6:	07e4      	lsls	r4, r4, #31
 8001ff8:	d403      	bmi.n	8002002 <osKernelInitialize+0x1e>
 8001ffa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ffe:	f7ff bfbb 	b.w	8001f78 <svcKernelInitialize>
 8002002:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002010 <osKernelInitialize+0x2c>
 8002006:	df00      	svc	0
 8002008:	bd10      	pop	{r4, pc}
 800200a:	2082      	movs	r0, #130	; 0x82
 800200c:	bd10      	pop	{r4, pc}
 800200e:	0000      	.short	0x0000
 8002010:	08001f79 	.word	0x08001f79

08002014 <svcMessageGet>:
 8002014:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002018:	460c      	mov	r4, r1
 800201a:	4680      	mov	r8, r0
 800201c:	b318      	cbz	r0, 8002066 <svcMessageGet+0x52>
 800201e:	7803      	ldrb	r3, [r0, #0]
 8002020:	2b01      	cmp	r3, #1
 8002022:	d125      	bne.n	8002070 <svcMessageGet+0x5c>
 8002024:	4608      	mov	r0, r1
 8002026:	f7ff fd91 	bl	8001b4c <rt_ms2tick>
 800202a:	a902      	add	r1, sp, #8
 800202c:	4602      	mov	r2, r0
 800202e:	4640      	mov	r0, r8
 8002030:	f7ff fc1c 	bl	800186c <rt_mbx_wait>
 8002034:	2801      	cmp	r0, #1
 8002036:	d111      	bne.n	800205c <svcMessageGet+0x48>
 8002038:	2000      	movs	r0, #0
 800203a:	2c00      	cmp	r4, #0
 800203c:	4602      	mov	r2, r0
 800203e:	4603      	mov	r3, r0
 8002040:	bf18      	it	ne
 8002042:	2040      	movne	r0, #64	; 0x40
 8002044:	9902      	ldr	r1, [sp, #8]
 8002046:	4604      	mov	r4, r0
 8002048:	460d      	mov	r5, r1
 800204a:	4616      	mov	r6, r2
 800204c:	461f      	mov	r7, r3
 800204e:	4620      	mov	r0, r4
 8002050:	4629      	mov	r1, r5
 8002052:	4632      	mov	r2, r6
 8002054:	463b      	mov	r3, r7
 8002056:	b004      	add	sp, #16
 8002058:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800205c:	2000      	movs	r0, #0
 800205e:	4602      	mov	r2, r0
 8002060:	4603      	mov	r3, r0
 8002062:	2010      	movs	r0, #16
 8002064:	e7ee      	b.n	8002044 <svcMessageGet+0x30>
 8002066:	2480      	movs	r4, #128	; 0x80
 8002068:	4605      	mov	r5, r0
 800206a:	4606      	mov	r6, r0
 800206c:	4607      	mov	r7, r0
 800206e:	e7ee      	b.n	800204e <svcMessageGet+0x3a>
 8002070:	2500      	movs	r5, #0
 8002072:	2480      	movs	r4, #128	; 0x80
 8002074:	462e      	mov	r6, r5
 8002076:	462f      	mov	r7, r5
 8002078:	e7e9      	b.n	800204e <svcMessageGet+0x3a>

0800207a <isrMessagePut>:
 800207a:	b570      	push	{r4, r5, r6, lr}
 800207c:	460e      	mov	r6, r1
 800207e:	4614      	mov	r4, r2
 8002080:	4605      	mov	r5, r0
 8002082:	b160      	cbz	r0, 800209e <isrMessagePut+0x24>
 8002084:	b95a      	cbnz	r2, 800209e <isrMessagePut+0x24>
 8002086:	7803      	ldrb	r3, [r0, #0]
 8002088:	2b01      	cmp	r3, #1
 800208a:	d108      	bne.n	800209e <isrMessagePut+0x24>
 800208c:	f7ff fc44 	bl	8001918 <rt_mbx_check>
 8002090:	b138      	cbz	r0, 80020a2 <isrMessagePut+0x28>
 8002092:	4628      	mov	r0, r5
 8002094:	4631      	mov	r1, r6
 8002096:	f7ff fc43 	bl	8001920 <isr_mbx_send>
 800209a:	4620      	mov	r0, r4
 800209c:	bd70      	pop	{r4, r5, r6, pc}
 800209e:	2080      	movs	r0, #128	; 0x80
 80020a0:	bd70      	pop	{r4, r5, r6, pc}
 80020a2:	2081      	movs	r0, #129	; 0x81
 80020a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080020a8 <sysTimerTick>:
 80020a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020aa:	4e11      	ldr	r6, [pc, #68]	; (80020f0 <sysTimerTick+0x48>)
 80020ac:	6834      	ldr	r4, [r6, #0]
 80020ae:	b12c      	cbz	r4, 80020bc <sysTimerTick+0x14>
 80020b0:	68a3      	ldr	r3, [r4, #8]
 80020b2:	4f10      	ldr	r7, [pc, #64]	; (80020f4 <sysTimerTick+0x4c>)
 80020b4:	3b01      	subs	r3, #1
 80020b6:	60a3      	str	r3, [r4, #8]
 80020b8:	68a2      	ldr	r2, [r4, #8]
 80020ba:	b102      	cbz	r2, 80020be <sysTimerTick+0x16>
 80020bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80020be:	6825      	ldr	r5, [r4, #0]
 80020c0:	6838      	ldr	r0, [r7, #0]
 80020c2:	6035      	str	r5, [r6, #0]
 80020c4:	4621      	mov	r1, r4
 80020c6:	f7ff ffd8 	bl	800207a <isrMessagePut>
 80020ca:	b110      	cbz	r0, 80020d2 <sysTimerTick+0x2a>
 80020cc:	2004      	movs	r0, #4
 80020ce:	f7ff fa33 	bl	8001538 <os_error>
 80020d2:	7963      	ldrb	r3, [r4, #5]
 80020d4:	2b01      	cmp	r3, #1
 80020d6:	d107      	bne.n	80020e8 <sysTimerTick+0x40>
 80020d8:	68e1      	ldr	r1, [r4, #12]
 80020da:	4620      	mov	r0, r4
 80020dc:	f7ff fd1c 	bl	8001b18 <rt_timer_insert>
 80020e0:	2d00      	cmp	r5, #0
 80020e2:	d0eb      	beq.n	80020bc <sysTimerTick+0x14>
 80020e4:	462c      	mov	r4, r5
 80020e6:	e7e7      	b.n	80020b8 <sysTimerTick+0x10>
 80020e8:	2301      	movs	r3, #1
 80020ea:	7123      	strb	r3, [r4, #4]
 80020ec:	e7f8      	b.n	80020e0 <sysTimerTick+0x38>
 80020ee:	bf00      	nop
 80020f0:	200026e8 	.word	0x200026e8
 80020f4:	20001fd8 	.word	0x20001fd8

080020f8 <isrMessageGet>:
 80020f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80020fa:	4604      	mov	r4, r0
 80020fc:	4616      	mov	r6, r2
 80020fe:	4608      	mov	r0, r1
 8002100:	b101      	cbz	r1, 8002104 <isrMessageGet+0xc>
 8002102:	b122      	cbz	r2, 800210e <isrMessageGet+0x16>
 8002104:	2380      	movs	r3, #128	; 0x80
 8002106:	6023      	str	r3, [r4, #0]
 8002108:	4620      	mov	r0, r4
 800210a:	b004      	add	sp, #16
 800210c:	bd70      	pop	{r4, r5, r6, pc}
 800210e:	780b      	ldrb	r3, [r1, #0]
 8002110:	2b01      	cmp	r3, #1
 8002112:	d1f7      	bne.n	8002104 <isrMessageGet+0xc>
 8002114:	a902      	add	r1, sp, #8
 8002116:	f7ff fc0a 	bl	800192e <isr_mbx_receive>
 800211a:	2804      	cmp	r0, #4
 800211c:	bf08      	it	eq
 800211e:	2310      	moveq	r3, #16
 8002120:	ad01      	add	r5, sp, #4
 8002122:	bf14      	ite	ne
 8002124:	9601      	strne	r6, [sp, #4]
 8002126:	9301      	streq	r3, [sp, #4]
 8002128:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800212c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002130:	e7ea      	b.n	8002108 <isrMessageGet+0x10>
	...

08002134 <osMessageGet>:
 8002134:	b538      	push	{r3, r4, r5, lr}
 8002136:	4604      	mov	r4, r0
 8002138:	4615      	mov	r5, r2
 800213a:	f3ef 8010 	mrs	r0, PRIMASK
 800213e:	b910      	cbnz	r0, 8002146 <osMessageGet+0x12>
 8002140:	f3ef 8005 	mrs	r0, IPSR
 8002144:	b128      	cbz	r0, 8002152 <osMessageGet+0x1e>
 8002146:	462a      	mov	r2, r5
 8002148:	4620      	mov	r0, r4
 800214a:	f7ff ffd5 	bl	80020f8 <isrMessageGet>
 800214e:	4620      	mov	r0, r4
 8002150:	bd38      	pop	{r3, r4, r5, pc}
 8002152:	4608      	mov	r0, r1
 8002154:	4611      	mov	r1, r2
 8002156:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002164 <osMessageGet+0x30>
 800215a:	df00      	svc	0
 800215c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002160:	e7f5      	b.n	800214e <osMessageGet+0x1a>
 8002162:	0000      	.short	0x0000
 8002164:	08002015 	.word	0x08002015

08002168 <osTimerThread>:
 8002168:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800216a:	4c0a      	ldr	r4, [pc, #40]	; (8002194 <osTimerThread+0x2c>)
 800216c:	6821      	ldr	r1, [r4, #0]
 800216e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002172:	a803      	add	r0, sp, #12
 8002174:	f7ff ffde 	bl	8002134 <osMessageGet>
 8002178:	9b03      	ldr	r3, [sp, #12]
 800217a:	2b10      	cmp	r3, #16
 800217c:	d1f6      	bne.n	800216c <osTimerThread+0x4>
 800217e:	9904      	ldr	r1, [sp, #16]
 8002180:	a801      	add	r0, sp, #4
 8002182:	f7ff fe15 	bl	8001db0 <osTimerCall>
 8002186:	9b01      	ldr	r3, [sp, #4]
 8002188:	2b00      	cmp	r3, #0
 800218a:	d0ef      	beq.n	800216c <osTimerThread+0x4>
 800218c:	9802      	ldr	r0, [sp, #8]
 800218e:	4798      	blx	r3
 8002190:	e7ec      	b.n	800216c <osTimerThread+0x4>
 8002192:	bf00      	nop
 8002194:	20001fd8 	.word	0x20001fd8

08002198 <rt_switch_req>:
 8002198:	4b05      	ldr	r3, [pc, #20]	; (80021b0 <rt_switch_req+0x18>)
 800219a:	6058      	str	r0, [r3, #4]
 800219c:	2302      	movs	r3, #2
 800219e:	7043      	strb	r3, [r0, #1]
 80021a0:	4b04      	ldr	r3, [pc, #16]	; (80021b4 <rt_switch_req+0x1c>)
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	b11b      	cbz	r3, 80021ae <rt_switch_req+0x16>
 80021a6:	691b      	ldr	r3, [r3, #16]
 80021a8:	b10b      	cbz	r3, 80021ae <rt_switch_req+0x16>
 80021aa:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80021ac:	4718      	bx	r3
 80021ae:	4770      	bx	lr
 80021b0:	200026ec 	.word	0x200026ec
 80021b4:	200026d4 	.word	0x200026d4

080021b8 <rt_dispatch.part.0>:
 80021b8:	b508      	push	{r3, lr}
 80021ba:	4803      	ldr	r0, [pc, #12]	; (80021c8 <rt_dispatch.part.0+0x10>)
 80021bc:	f7ff f8b6 	bl	800132c <rt_get_first>
 80021c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80021c4:	f7ff bfe8 	b.w	8002198 <rt_switch_req>
 80021c8:	20001cd8 	.word	0x20001cd8

080021cc <rt_dispatch>:
 80021cc:	b570      	push	{r4, r5, r6, lr}
 80021ce:	4604      	mov	r4, r0
 80021d0:	b918      	cbnz	r0, 80021da <rt_dispatch+0xe>
 80021d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021d6:	f7ff bfef 	b.w	80021b8 <rt_dispatch.part.0>
 80021da:	4e0c      	ldr	r6, [pc, #48]	; (800220c <rt_dispatch+0x40>)
 80021dc:	78a2      	ldrb	r2, [r4, #2]
 80021de:	6830      	ldr	r0, [r6, #0]
 80021e0:	7883      	ldrb	r3, [r0, #2]
 80021e2:	429a      	cmp	r2, r3
 80021e4:	f04f 0501 	mov.w	r5, #1
 80021e8:	d908      	bls.n	80021fc <rt_dispatch+0x30>
 80021ea:	f7ff f8b1 	bl	8001350 <rt_put_rdy_first>
 80021ee:	6833      	ldr	r3, [r6, #0]
 80021f0:	705d      	strb	r5, [r3, #1]
 80021f2:	4620      	mov	r0, r4
 80021f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021f8:	f7ff bfce 	b.w	8002198 <rt_switch_req>
 80021fc:	7065      	strb	r5, [r4, #1]
 80021fe:	4621      	mov	r1, r4
 8002200:	4803      	ldr	r0, [pc, #12]	; (8002210 <rt_dispatch+0x44>)
 8002202:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002206:	f7ff b879 	b.w	80012fc <rt_put_prio>
 800220a:	bf00      	nop
 800220c:	200026ec 	.word	0x200026ec
 8002210:	20001cd8 	.word	0x20001cd8

08002214 <rt_block>:
 8002214:	b538      	push	{r3, r4, r5, lr}
 8002216:	460d      	mov	r5, r1
 8002218:	4601      	mov	r1, r0
 800221a:	b180      	cbz	r0, 800223e <rt_block+0x2a>
 800221c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002220:	4298      	cmp	r0, r3
 8002222:	4c07      	ldr	r4, [pc, #28]	; (8002240 <rt_block+0x2c>)
 8002224:	d002      	beq.n	800222c <rt_block+0x18>
 8002226:	6820      	ldr	r0, [r4, #0]
 8002228:	f7ff f89c 	bl	8001364 <rt_put_dly>
 800222c:	6823      	ldr	r3, [r4, #0]
 800222e:	4805      	ldr	r0, [pc, #20]	; (8002244 <rt_block+0x30>)
 8002230:	705d      	strb	r5, [r3, #1]
 8002232:	f7ff f87b 	bl	800132c <rt_get_first>
 8002236:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800223a:	f7ff bfad 	b.w	8002198 <rt_switch_req>
 800223e:	bd38      	pop	{r3, r4, r5, pc}
 8002240:	200026ec 	.word	0x200026ec
 8002244:	20001cd8 	.word	0x20001cd8

08002248 <rt_tsk_self>:
 8002248:	4b02      	ldr	r3, [pc, #8]	; (8002254 <rt_tsk_self+0xc>)
 800224a:	6818      	ldr	r0, [r3, #0]
 800224c:	b100      	cbz	r0, 8002250 <rt_tsk_self+0x8>
 800224e:	78c0      	ldrb	r0, [r0, #3]
 8002250:	4770      	bx	lr
 8002252:	bf00      	nop
 8002254:	200026ec 	.word	0x200026ec

08002258 <rt_tsk_prio>:
 8002258:	b510      	push	{r4, lr}
 800225a:	b9a8      	cbnz	r0, 8002288 <rt_tsk_prio+0x30>
 800225c:	4b19      	ldr	r3, [pc, #100]	; (80022c4 <rt_tsk_prio+0x6c>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	7099      	strb	r1, [r3, #2]
 8002262:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 8002266:	4818      	ldr	r0, [pc, #96]	; (80022c8 <rt_tsk_prio+0x70>)
 8002268:	6843      	ldr	r3, [r0, #4]
 800226a:	789b      	ldrb	r3, [r3, #2]
 800226c:	428b      	cmp	r3, r1
 800226e:	d801      	bhi.n	8002274 <rt_tsk_prio+0x1c>
 8002270:	2000      	movs	r0, #0
 8002272:	bd10      	pop	{r4, pc}
 8002274:	4c13      	ldr	r4, [pc, #76]	; (80022c4 <rt_tsk_prio+0x6c>)
 8002276:	6821      	ldr	r1, [r4, #0]
 8002278:	f7ff f840 	bl	80012fc <rt_put_prio>
 800227c:	6823      	ldr	r3, [r4, #0]
 800227e:	2201      	movs	r2, #1
 8002280:	705a      	strb	r2, [r3, #1]
 8002282:	f7ff ff99 	bl	80021b8 <rt_dispatch.part.0>
 8002286:	e7f3      	b.n	8002270 <rt_tsk_prio+0x18>
 8002288:	4b10      	ldr	r3, [pc, #64]	; (80022cc <rt_tsk_prio+0x74>)
 800228a:	881b      	ldrh	r3, [r3, #0]
 800228c:	4298      	cmp	r0, r3
 800228e:	d817      	bhi.n	80022c0 <rt_tsk_prio+0x68>
 8002290:	3801      	subs	r0, #1
 8002292:	4b0f      	ldr	r3, [pc, #60]	; (80022d0 <rt_tsk_prio+0x78>)
 8002294:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002298:	b194      	cbz	r4, 80022c0 <rt_tsk_prio+0x68>
 800229a:	4b0a      	ldr	r3, [pc, #40]	; (80022c4 <rt_tsk_prio+0x6c>)
 800229c:	70a1      	strb	r1, [r4, #2]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80022a4:	429c      	cmp	r4, r3
 80022a6:	d0de      	beq.n	8002266 <rt_tsk_prio+0xe>
 80022a8:	4620      	mov	r0, r4
 80022aa:	f7ff f8cd 	bl	8001448 <rt_resort_prio>
 80022ae:	7863      	ldrb	r3, [r4, #1]
 80022b0:	2b01      	cmp	r3, #1
 80022b2:	d1dd      	bne.n	8002270 <rt_tsk_prio+0x18>
 80022b4:	4804      	ldr	r0, [pc, #16]	; (80022c8 <rt_tsk_prio+0x70>)
 80022b6:	f7ff f839 	bl	800132c <rt_get_first>
 80022ba:	f7ff ff87 	bl	80021cc <rt_dispatch>
 80022be:	e7d7      	b.n	8002270 <rt_tsk_prio+0x18>
 80022c0:	20ff      	movs	r0, #255	; 0xff
 80022c2:	bd10      	pop	{r4, pc}
 80022c4:	200026ec 	.word	0x200026ec
 80022c8:	20001cd8 	.word	0x20001cd8
 80022cc:	080054f0 	.word	0x080054f0
 80022d0:	20001f18 	.word	0x20001f18

080022d4 <rt_tsk_create>:
 80022d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80022d8:	f011 0fff 	tst.w	r1, #255	; 0xff
 80022dc:	460d      	mov	r5, r1
 80022de:	4680      	mov	r8, r0
 80022e0:	4823      	ldr	r0, [pc, #140]	; (8002370 <rt_tsk_create+0x9c>)
 80022e2:	4616      	mov	r6, r2
 80022e4:	469a      	mov	r10, r3
 80022e6:	bf08      	it	eq
 80022e8:	3501      	addeq	r5, #1
 80022ea:	f7ff fa90 	bl	800180e <rt_alloc_box>
 80022ee:	4604      	mov	r4, r0
 80022f0:	b920      	cbnz	r0, 80022fc <rt_tsk_create+0x28>
 80022f2:	f04f 0900 	mov.w	r9, #0
 80022f6:	4648      	mov	r0, r9
 80022f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80022fc:	4b1d      	ldr	r3, [pc, #116]	; (8002374 <rt_tsk_create+0xa0>)
 80022fe:	6306      	str	r6, [r0, #48]	; 0x30
 8002300:	881b      	ldrh	r3, [r3, #0]
 8002302:	4e1d      	ldr	r6, [pc, #116]	; (8002378 <rt_tsk_create+0xa4>)
 8002304:	0a28      	lsrs	r0, r5, #8
 8002306:	62a0      	str	r0, [r4, #40]	; 0x28
 8002308:	2100      	movs	r1, #0
 800230a:	428b      	cmp	r3, r1
 800230c:	f101 0901 	add.w	r9, r1, #1
 8002310:	d0ef      	beq.n	80022f2 <rt_tsk_create+0x1e>
 8002312:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 8002316:	460f      	mov	r7, r1
 8002318:	f852 2c04 	ldr.w	r2, [r2, #-4]
 800231c:	4649      	mov	r1, r9
 800231e:	2a00      	cmp	r2, #0
 8002320:	d1f3      	bne.n	800230a <rt_tsk_create+0x36>
 8002322:	b2ed      	uxtb	r5, r5
 8002324:	2301      	movs	r3, #1
 8002326:	f884 9003 	strb.w	r9, [r4, #3]
 800232a:	f8c4 a01c 	str.w	r10, [r4, #28]
 800232e:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002332:	7022      	strb	r2, [r4, #0]
 8002334:	7063      	strb	r3, [r4, #1]
 8002336:	70a5      	strb	r5, [r4, #2]
 8002338:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800233c:	6062      	str	r2, [r4, #4]
 800233e:	60a2      	str	r2, [r4, #8]
 8002340:	60e2      	str	r2, [r4, #12]
 8002342:	6122      	str	r2, [r4, #16]
 8002344:	6222      	str	r2, [r4, #32]
 8002346:	82a2      	strh	r2, [r4, #20]
 8002348:	82e2      	strh	r2, [r4, #22]
 800234a:	8322      	strh	r2, [r4, #24]
 800234c:	8362      	strh	r2, [r4, #26]
 800234e:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002352:	b918      	cbnz	r0, 800235c <rt_tsk_create+0x88>
 8002354:	4809      	ldr	r0, [pc, #36]	; (800237c <rt_tsk_create+0xa8>)
 8002356:	f7ff fa5a 	bl	800180e <rt_alloc_box>
 800235a:	6320      	str	r0, [r4, #48]	; 0x30
 800235c:	4620      	mov	r0, r4
 800235e:	4641      	mov	r1, r8
 8002360:	f7ff f938 	bl	80015d4 <rt_init_stack>
 8002364:	4620      	mov	r0, r4
 8002366:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 800236a:	f7ff ff2f 	bl	80021cc <rt_dispatch>
 800236e:	e7c2      	b.n	80022f6 <rt_tsk_create+0x22>
 8002370:	20002300 	.word	0x20002300
 8002374:	080054f0 	.word	0x080054f0
 8002378:	20001f18 	.word	0x20001f18
 800237c:	20001d08 	.word	0x20001d08

08002380 <rt_tsk_delete>:
 8002380:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002384:	4d4d      	ldr	r5, [pc, #308]	; (80024bc <rt_tsk_delete+0x13c>)
 8002386:	b118      	cbz	r0, 8002390 <rt_tsk_delete+0x10>
 8002388:	682b      	ldr	r3, [r5, #0]
 800238a:	78db      	ldrb	r3, [r3, #3]
 800238c:	4298      	cmp	r0, r3
 800238e:	d141      	bne.n	8002414 <rt_tsk_delete+0x94>
 8002390:	682c      	ldr	r4, [r5, #0]
 8002392:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80024d0 <rt_tsk_delete+0x150>
 8002396:	2300      	movs	r3, #0
 8002398:	7063      	strb	r3, [r4, #1]
 800239a:	f001 ff40 	bl	800421e <rt_get_PSP>
 800239e:	62e0      	str	r0, [r4, #44]	; 0x2c
 80023a0:	f7ff f9fe 	bl	80017a0 <rt_stk_check>
 80023a4:	682b      	ldr	r3, [r5, #0]
 80023a6:	6a1c      	ldr	r4, [r3, #32]
 80023a8:	2701      	movs	r7, #1
 80023aa:	b9a4      	cbnz	r4, 80023d6 <rt_tsk_delete+0x56>
 80023ac:	682a      	ldr	r2, [r5, #0]
 80023ae:	4944      	ldr	r1, [pc, #272]	; (80024c0 <rt_tsk_delete+0x140>)
 80023b0:	78d3      	ldrb	r3, [r2, #3]
 80023b2:	4844      	ldr	r0, [pc, #272]	; (80024c4 <rt_tsk_delete+0x144>)
 80023b4:	3b01      	subs	r3, #1
 80023b6:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80023ba:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80023bc:	f7ff fa34 	bl	8001828 <rt_free_box>
 80023c0:	6829      	ldr	r1, [r5, #0]
 80023c2:	4841      	ldr	r0, [pc, #260]	; (80024c8 <rt_tsk_delete+0x148>)
 80023c4:	630c      	str	r4, [r1, #48]	; 0x30
 80023c6:	f7ff fa2f 	bl	8001828 <rt_free_box>
 80023ca:	602c      	str	r4, [r5, #0]
 80023cc:	f7ff fef4 	bl	80021b8 <rt_dispatch.part.0>
 80023d0:	4620      	mov	r0, r4
 80023d2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80023d6:	6863      	ldr	r3, [r4, #4]
 80023d8:	b1b3      	cbz	r3, 8002408 <rt_tsk_delete+0x88>
 80023da:	4620      	mov	r0, r4
 80023dc:	f7fe ffa6 	bl	800132c <rt_get_first>
 80023e0:	2100      	movs	r1, #0
 80023e2:	4606      	mov	r6, r0
 80023e4:	f7ff f942 	bl	800166c <rt_ret_val>
 80023e8:	4630      	mov	r0, r6
 80023ea:	f7ff f845 	bl	8001478 <rt_rmv_dly>
 80023ee:	7077      	strb	r7, [r6, #1]
 80023f0:	4631      	mov	r1, r6
 80023f2:	4640      	mov	r0, r8
 80023f4:	f7fe ff82 	bl	80012fc <rt_put_prio>
 80023f8:	68e3      	ldr	r3, [r4, #12]
 80023fa:	6a32      	ldr	r2, [r6, #32]
 80023fc:	8067      	strh	r7, [r4, #2]
 80023fe:	60a6      	str	r6, [r4, #8]
 8002400:	60e2      	str	r2, [r4, #12]
 8002402:	6234      	str	r4, [r6, #32]
 8002404:	461c      	mov	r4, r3
 8002406:	e7d0      	b.n	80023aa <rt_tsk_delete+0x2a>
 8002408:	68e2      	ldr	r2, [r4, #12]
 800240a:	8063      	strh	r3, [r4, #2]
 800240c:	60a3      	str	r3, [r4, #8]
 800240e:	60e3      	str	r3, [r4, #12]
 8002410:	4614      	mov	r4, r2
 8002412:	e7ca      	b.n	80023aa <rt_tsk_delete+0x2a>
 8002414:	4b2d      	ldr	r3, [pc, #180]	; (80024cc <rt_tsk_delete+0x14c>)
 8002416:	881b      	ldrh	r3, [r3, #0]
 8002418:	4298      	cmp	r0, r3
 800241a:	d84d      	bhi.n	80024b8 <rt_tsk_delete+0x138>
 800241c:	4b28      	ldr	r3, [pc, #160]	; (80024c0 <rt_tsk_delete+0x140>)
 800241e:	1e47      	subs	r7, r0, #1
 8002420:	4699      	mov	r9, r3
 8002422:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 8002426:	2e00      	cmp	r6, #0
 8002428:	d046      	beq.n	80024b8 <rt_tsk_delete+0x138>
 800242a:	4630      	mov	r0, r6
 800242c:	f7fe fff6 	bl	800141c <rt_rmv_list>
 8002430:	4630      	mov	r0, r6
 8002432:	f7ff f821 	bl	8001478 <rt_rmv_dly>
 8002436:	f8df b098 	ldr.w	r11, [pc, #152]	; 80024d0 <rt_tsk_delete+0x150>
 800243a:	6a34      	ldr	r4, [r6, #32]
 800243c:	f04f 0a01 	mov.w	r10, #1
 8002440:	b9b4      	cbnz	r4, 8002470 <rt_tsk_delete+0xf0>
 8002442:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002444:	481f      	ldr	r0, [pc, #124]	; (80024c4 <rt_tsk_delete+0x144>)
 8002446:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 800244a:	f7ff f9ed 	bl	8001828 <rt_free_box>
 800244e:	4631      	mov	r1, r6
 8002450:	6334      	str	r4, [r6, #48]	; 0x30
 8002452:	481d      	ldr	r0, [pc, #116]	; (80024c8 <rt_tsk_delete+0x148>)
 8002454:	f7ff f9e8 	bl	8001828 <rt_free_box>
 8002458:	481d      	ldr	r0, [pc, #116]	; (80024d0 <rt_tsk_delete+0x150>)
 800245a:	6829      	ldr	r1, [r5, #0]
 800245c:	6843      	ldr	r3, [r0, #4]
 800245e:	789a      	ldrb	r2, [r3, #2]
 8002460:	788b      	ldrb	r3, [r1, #2]
 8002462:	429a      	cmp	r2, r3
 8002464:	d9b4      	bls.n	80023d0 <rt_tsk_delete+0x50>
 8002466:	2301      	movs	r3, #1
 8002468:	704b      	strb	r3, [r1, #1]
 800246a:	f7fe ff47 	bl	80012fc <rt_put_prio>
 800246e:	e7ad      	b.n	80023cc <rt_tsk_delete+0x4c>
 8002470:	6863      	ldr	r3, [r4, #4]
 8002472:	b1db      	cbz	r3, 80024ac <rt_tsk_delete+0x12c>
 8002474:	4620      	mov	r0, r4
 8002476:	f7fe ff59 	bl	800132c <rt_get_first>
 800247a:	2100      	movs	r1, #0
 800247c:	4680      	mov	r8, r0
 800247e:	f7ff f8f5 	bl	800166c <rt_ret_val>
 8002482:	4640      	mov	r0, r8
 8002484:	f7fe fff8 	bl	8001478 <rt_rmv_dly>
 8002488:	f888 a001 	strb.w	r10, [r8, #1]
 800248c:	4641      	mov	r1, r8
 800248e:	4658      	mov	r0, r11
 8002490:	f7fe ff34 	bl	80012fc <rt_put_prio>
 8002494:	68e3      	ldr	r3, [r4, #12]
 8002496:	f8d8 2020 	ldr.w	r2, [r8, #32]
 800249a:	f8a4 a002 	strh.w	r10, [r4, #2]
 800249e:	f8c4 8008 	str.w	r8, [r4, #8]
 80024a2:	60e2      	str	r2, [r4, #12]
 80024a4:	f8c8 4020 	str.w	r4, [r8, #32]
 80024a8:	461c      	mov	r4, r3
 80024aa:	e7c9      	b.n	8002440 <rt_tsk_delete+0xc0>
 80024ac:	68e2      	ldr	r2, [r4, #12]
 80024ae:	8063      	strh	r3, [r4, #2]
 80024b0:	60a3      	str	r3, [r4, #8]
 80024b2:	60e3      	str	r3, [r4, #12]
 80024b4:	4614      	mov	r4, r2
 80024b6:	e7c3      	b.n	8002440 <rt_tsk_delete+0xc0>
 80024b8:	24ff      	movs	r4, #255	; 0xff
 80024ba:	e789      	b.n	80023d0 <rt_tsk_delete+0x50>
 80024bc:	200026ec 	.word	0x200026ec
 80024c0:	20001f18 	.word	0x20001f18
 80024c4:	20001d08 	.word	0x20001d08
 80024c8:	20002300 	.word	0x20002300
 80024cc:	080054f0 	.word	0x080054f0
 80024d0:	20001cd8 	.word	0x20001cd8

080024d4 <rt_sys_init>:
 80024d4:	b538      	push	{r3, r4, r5, lr}
 80024d6:	4b2c      	ldr	r3, [pc, #176]	; (8002588 <rt_sys_init+0xb4>)
 80024d8:	492c      	ldr	r1, [pc, #176]	; (800258c <rt_sys_init+0xb8>)
 80024da:	881a      	ldrh	r2, [r3, #0]
 80024dc:	2300      	movs	r3, #0
 80024de:	4618      	mov	r0, r3
 80024e0:	4293      	cmp	r3, r2
 80024e2:	d34d      	bcc.n	8002580 <rt_sys_init+0xac>
 80024e4:	4b2a      	ldr	r3, [pc, #168]	; (8002590 <rt_sys_init+0xbc>)
 80024e6:	482b      	ldr	r0, [pc, #172]	; (8002594 <rt_sys_init+0xc0>)
 80024e8:	8819      	ldrh	r1, [r3, #0]
 80024ea:	4c2b      	ldr	r4, [pc, #172]	; (8002598 <rt_sys_init+0xc4>)
 80024ec:	2240      	movs	r2, #64	; 0x40
 80024ee:	f7ff f969 	bl	80017c4 <_init_box>
 80024f2:	4b2a      	ldr	r3, [pc, #168]	; (800259c <rt_sys_init+0xc8>)
 80024f4:	482a      	ldr	r0, [pc, #168]	; (80025a0 <rt_sys_init+0xcc>)
 80024f6:	881a      	ldrh	r2, [r3, #0]
 80024f8:	4b2a      	ldr	r3, [pc, #168]	; (80025a4 <rt_sys_init+0xd0>)
 80024fa:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80024fe:	6819      	ldr	r1, [r3, #0]
 8002500:	f7ff f960 	bl	80017c4 <_init_box>
 8002504:	4b28      	ldr	r3, [pc, #160]	; (80025a8 <rt_sys_init+0xd4>)
 8002506:	8819      	ldrh	r1, [r3, #0]
 8002508:	4b28      	ldr	r3, [pc, #160]	; (80025ac <rt_sys_init+0xd8>)
 800250a:	2208      	movs	r2, #8
 800250c:	6818      	ldr	r0, [r3, #0]
 800250e:	f7ff f959 	bl	80017c4 <_init_box>
 8002512:	23ff      	movs	r3, #255	; 0xff
 8002514:	2500      	movs	r5, #0
 8002516:	70e3      	strb	r3, [r4, #3]
 8002518:	4821      	ldr	r0, [pc, #132]	; (80025a0 <rt_sys_init+0xcc>)
 800251a:	62a5      	str	r5, [r4, #40]	; 0x28
 800251c:	2301      	movs	r3, #1
 800251e:	7063      	strb	r3, [r4, #1]
 8002520:	7025      	strb	r5, [r4, #0]
 8002522:	70a5      	strb	r5, [r4, #2]
 8002524:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002528:	6065      	str	r5, [r4, #4]
 800252a:	60a5      	str	r5, [r4, #8]
 800252c:	60e5      	str	r5, [r4, #12]
 800252e:	6125      	str	r5, [r4, #16]
 8002530:	6225      	str	r5, [r4, #32]
 8002532:	82a5      	strh	r5, [r4, #20]
 8002534:	82e5      	strh	r5, [r4, #22]
 8002536:	8325      	strh	r5, [r4, #24]
 8002538:	8365      	strh	r5, [r4, #26]
 800253a:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 800253e:	f7ff f966 	bl	800180e <rt_alloc_box>
 8002542:	491b      	ldr	r1, [pc, #108]	; (80025b0 <rt_sys_init+0xdc>)
 8002544:	6320      	str	r0, [r4, #48]	; 0x30
 8002546:	4620      	mov	r0, r4
 8002548:	f7ff f844 	bl	80015d4 <rt_init_stack>
 800254c:	4b19      	ldr	r3, [pc, #100]	; (80025b4 <rt_sys_init+0xe0>)
 800254e:	2204      	movs	r2, #4
 8002550:	701a      	strb	r2, [r3, #0]
 8002552:	605d      	str	r5, [r3, #4]
 8002554:	4b18      	ldr	r3, [pc, #96]	; (80025b8 <rt_sys_init+0xe4>)
 8002556:	701a      	strb	r2, [r3, #0]
 8002558:	60dd      	str	r5, [r3, #12]
 800255a:	611d      	str	r5, [r3, #16]
 800255c:	829d      	strh	r5, [r3, #20]
 800255e:	4b17      	ldr	r3, [pc, #92]	; (80025bc <rt_sys_init+0xe8>)
 8002560:	4620      	mov	r0, r4
 8002562:	601c      	str	r4, [r3, #0]
 8002564:	2302      	movs	r3, #2
 8002566:	7063      	strb	r3, [r4, #1]
 8002568:	f7ff fe16 	bl	8002198 <rt_switch_req>
 800256c:	4a14      	ldr	r2, [pc, #80]	; (80025c0 <rt_sys_init+0xec>)
 800256e:	4b15      	ldr	r3, [pc, #84]	; (80025c4 <rt_sys_init+0xf0>)
 8002570:	7812      	ldrb	r2, [r2, #0]
 8002572:	701d      	strb	r5, [r3, #0]
 8002574:	705d      	strb	r5, [r3, #1]
 8002576:	70da      	strb	r2, [r3, #3]
 8002578:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800257c:	f7ff ba9c 	b.w	8001ab8 <rt_init_robin>
 8002580:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002584:	3301      	adds	r3, #1
 8002586:	e7ab      	b.n	80024e0 <rt_sys_init+0xc>
 8002588:	080054f0 	.word	0x080054f0
 800258c:	20001f18 	.word	0x20001f18
 8002590:	080054bc 	.word	0x080054bc
 8002594:	20002300 	.word	0x20002300
 8002598:	200026f4 	.word	0x200026f4
 800259c:	0800550c 	.word	0x0800550c
 80025a0:	20001d08 	.word	0x20001d08
 80025a4:	080054b8 	.word	0x080054b8
 80025a8:	080054be 	.word	0x080054be
 80025ac:	200008bc 	.word	0x200008bc
 80025b0:	08001535 	.word	0x08001535
 80025b4:	20001cd8 	.word	0x20001cd8
 80025b8:	20001cf0 	.word	0x20001cf0
 80025bc:	200026ec 	.word	0x200026ec
 80025c0:	080054ed 	.word	0x080054ed
 80025c4:	20001f54 	.word	0x20001f54

080025c8 <rt_sys_start>:
 80025c8:	b508      	push	{r3, lr}
 80025ca:	4b1e      	ldr	r3, [pc, #120]	; (8002644 <rt_sys_start+0x7c>)
 80025cc:	681a      	ldr	r2, [r3, #0]
 80025ce:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80025d2:	601a      	str	r2, [r3, #0]
 80025d4:	681b      	ldr	r3, [r3, #0]
 80025d6:	021b      	lsls	r3, r3, #8
 80025d8:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80025dc:	43db      	mvns	r3, r3
 80025de:	fab3 f383 	clz	r3, r3
 80025e2:	4a19      	ldr	r2, [pc, #100]	; (8002648 <rt_sys_start+0x80>)
 80025e4:	4819      	ldr	r0, [pc, #100]	; (800264c <rt_sys_start+0x84>)
 80025e6:	6812      	ldr	r2, [r2, #0]
 80025e8:	6801      	ldr	r1, [r0, #0]
 80025ea:	b2db      	uxtb	r3, r3
 80025ec:	f1c3 0308 	rsb	r3, r3, #8
 80025f0:	f3c2 2202 	ubfx	r2, r2, #8, #3
 80025f4:	4293      	cmp	r3, r2
 80025f6:	bf98      	it	ls
 80025f8:	1c53      	addls	r3, r2, #1
 80025fa:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 80025fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002602:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002606:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 800260a:	4313      	orrs	r3, r2
 800260c:	6003      	str	r3, [r0, #0]
 800260e:	f7ff f88f 	bl	8001730 <os_tick_init>
 8002612:	4b0f      	ldr	r3, [pc, #60]	; (8002650 <rt_sys_start+0x88>)
 8002614:	2800      	cmp	r0, #0
 8002616:	6018      	str	r0, [r3, #0]
 8002618:	db12      	blt.n	8002640 <rt_sys_start+0x78>
 800261a:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800261e:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002622:	22ff      	movs	r2, #255	; 0xff
 8002624:	7002      	strb	r2, [r0, #0]
 8002626:	681a      	ldr	r2, [r3, #0]
 8002628:	0953      	lsrs	r3, r2, #5
 800262a:	009b      	lsls	r3, r3, #2
 800262c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002630:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002634:	f002 021f 	and.w	r2, r2, #31
 8002638:	2101      	movs	r1, #1
 800263a:	fa01 f202 	lsl.w	r2, r1, r2
 800263e:	601a      	str	r2, [r3, #0]
 8002640:	bd08      	pop	{r3, pc}
 8002642:	bf00      	nop
 8002644:	e000ed20 	.word	0xe000ed20
 8002648:	e000ed0c 	.word	0xe000ed0c
 800264c:	e000ed1c 	.word	0xe000ed1c
 8002650:	200026d0 	.word	0x200026d0

08002654 <rt_mut_init>:
 8002654:	2303      	movs	r3, #3
 8002656:	7003      	strb	r3, [r0, #0]
 8002658:	2300      	movs	r3, #0
 800265a:	8043      	strh	r3, [r0, #2]
 800265c:	6043      	str	r3, [r0, #4]
 800265e:	6083      	str	r3, [r0, #8]
 8002660:	60c3      	str	r3, [r0, #12]
 8002662:	4770      	bx	lr

08002664 <rt_mut_release>:
 8002664:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002668:	8843      	ldrh	r3, [r0, #2]
 800266a:	4605      	mov	r5, r0
 800266c:	2b00      	cmp	r3, #0
 800266e:	d063      	beq.n	8002738 <rt_mut_release+0xd4>
 8002670:	4f32      	ldr	r7, [pc, #200]	; (800273c <rt_mut_release+0xd8>)
 8002672:	6881      	ldr	r1, [r0, #8]
 8002674:	683a      	ldr	r2, [r7, #0]
 8002676:	4291      	cmp	r1, r2
 8002678:	d15e      	bne.n	8002738 <rt_mut_release+0xd4>
 800267a:	3b01      	subs	r3, #1
 800267c:	b29b      	uxth	r3, r3
 800267e:	8043      	strh	r3, [r0, #2]
 8002680:	b11b      	cbz	r3, 800268a <rt_mut_release+0x26>
 8002682:	2400      	movs	r4, #0
 8002684:	4620      	mov	r0, r4
 8002686:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800268a:	6a0b      	ldr	r3, [r1, #32]
 800268c:	4298      	cmp	r0, r3
 800268e:	d129      	bne.n	80026e4 <rt_mut_release+0x80>
 8002690:	68c3      	ldr	r3, [r0, #12]
 8002692:	620b      	str	r3, [r1, #32]
 8002694:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002698:	6a0c      	ldr	r4, [r1, #32]
 800269a:	bb5c      	cbnz	r4, 80026f4 <rt_mut_release+0x90>
 800269c:	708b      	strb	r3, [r1, #2]
 800269e:	686a      	ldr	r2, [r5, #4]
 80026a0:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002740 <rt_mut_release+0xdc>
 80026a4:	2a00      	cmp	r2, #0
 80026a6:	d03b      	beq.n	8002720 <rt_mut_release+0xbc>
 80026a8:	4628      	mov	r0, r5
 80026aa:	f7fe fe3f 	bl	800132c <rt_get_first>
 80026ae:	4621      	mov	r1, r4
 80026b0:	4606      	mov	r6, r0
 80026b2:	f7fe ffdb 	bl	800166c <rt_ret_val>
 80026b6:	4630      	mov	r0, r6
 80026b8:	f7fe fede 	bl	8001478 <rt_rmv_dly>
 80026bc:	6a33      	ldr	r3, [r6, #32]
 80026be:	60eb      	str	r3, [r5, #12]
 80026c0:	f04f 0901 	mov.w	r9, #1
 80026c4:	6839      	ldr	r1, [r7, #0]
 80026c6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80026ca:	f8a5 9002 	strh.w	r9, [r5, #2]
 80026ce:	60ae      	str	r6, [r5, #8]
 80026d0:	6235      	str	r5, [r6, #32]
 80026d2:	788a      	ldrb	r2, [r1, #2]
 80026d4:	789b      	ldrb	r3, [r3, #2]
 80026d6:	429a      	cmp	r2, r3
 80026d8:	d314      	bcc.n	8002704 <rt_mut_release+0xa0>
 80026da:	4630      	mov	r0, r6
 80026dc:	f7ff fd76 	bl	80021cc <rt_dispatch>
 80026e0:	e7d0      	b.n	8002684 <rt_mut_release+0x20>
 80026e2:	4613      	mov	r3, r2
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d0d5      	beq.n	8002694 <rt_mut_release+0x30>
 80026e8:	68da      	ldr	r2, [r3, #12]
 80026ea:	4295      	cmp	r5, r2
 80026ec:	d1f9      	bne.n	80026e2 <rt_mut_release+0x7e>
 80026ee:	68ea      	ldr	r2, [r5, #12]
 80026f0:	60da      	str	r2, [r3, #12]
 80026f2:	e7cf      	b.n	8002694 <rt_mut_release+0x30>
 80026f4:	6862      	ldr	r2, [r4, #4]
 80026f6:	b11a      	cbz	r2, 8002700 <rt_mut_release+0x9c>
 80026f8:	7892      	ldrb	r2, [r2, #2]
 80026fa:	4293      	cmp	r3, r2
 80026fc:	bf38      	it	cc
 80026fe:	4613      	movcc	r3, r2
 8002700:	68e4      	ldr	r4, [r4, #12]
 8002702:	e7ca      	b.n	800269a <rt_mut_release+0x36>
 8002704:	4640      	mov	r0, r8
 8002706:	f7fe fdf9 	bl	80012fc <rt_put_prio>
 800270a:	4631      	mov	r1, r6
 800270c:	4640      	mov	r0, r8
 800270e:	f7fe fdf5 	bl	80012fc <rt_put_prio>
 8002712:	683b      	ldr	r3, [r7, #0]
 8002714:	f883 9001 	strb.w	r9, [r3, #1]
 8002718:	f886 9001 	strb.w	r9, [r6, #1]
 800271c:	4620      	mov	r0, r4
 800271e:	e7dd      	b.n	80026dc <rt_mut_release+0x78>
 8002720:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002724:	7892      	ldrb	r2, [r2, #2]
 8002726:	429a      	cmp	r2, r3
 8002728:	d9ab      	bls.n	8002682 <rt_mut_release+0x1e>
 800272a:	4640      	mov	r0, r8
 800272c:	f7fe fde6 	bl	80012fc <rt_put_prio>
 8002730:	683b      	ldr	r3, [r7, #0]
 8002732:	2201      	movs	r2, #1
 8002734:	705a      	strb	r2, [r3, #1]
 8002736:	e7f1      	b.n	800271c <rt_mut_release+0xb8>
 8002738:	24ff      	movs	r4, #255	; 0xff
 800273a:	e7a3      	b.n	8002684 <rt_mut_release+0x20>
 800273c:	200026ec 	.word	0x200026ec
 8002740:	20001cd8 	.word	0x20001cd8

08002744 <rt_mut_wait>:
 8002744:	8843      	ldrh	r3, [r0, #2]
 8002746:	b570      	push	{r4, r5, r6, lr}
 8002748:	4604      	mov	r4, r0
 800274a:	460e      	mov	r6, r1
 800274c:	4d13      	ldr	r5, [pc, #76]	; (800279c <rt_mut_wait+0x58>)
 800274e:	b943      	cbnz	r3, 8002762 <rt_mut_wait+0x1e>
 8002750:	682a      	ldr	r2, [r5, #0]
 8002752:	6082      	str	r2, [r0, #8]
 8002754:	6a11      	ldr	r1, [r2, #32]
 8002756:	60c1      	str	r1, [r0, #12]
 8002758:	6210      	str	r0, [r2, #32]
 800275a:	3301      	adds	r3, #1
 800275c:	8063      	strh	r3, [r4, #2]
 800275e:	2000      	movs	r0, #0
 8002760:	bd70      	pop	{r4, r5, r6, pc}
 8002762:	6880      	ldr	r0, [r0, #8]
 8002764:	682a      	ldr	r2, [r5, #0]
 8002766:	4290      	cmp	r0, r2
 8002768:	d0f7      	beq.n	800275a <rt_mut_wait+0x16>
 800276a:	b181      	cbz	r1, 800278e <rt_mut_wait+0x4a>
 800276c:	7893      	ldrb	r3, [r2, #2]
 800276e:	7882      	ldrb	r2, [r0, #2]
 8002770:	429a      	cmp	r2, r3
 8002772:	d202      	bcs.n	800277a <rt_mut_wait+0x36>
 8002774:	7083      	strb	r3, [r0, #2]
 8002776:	f7fe fe67 	bl	8001448 <rt_resort_prio>
 800277a:	6862      	ldr	r2, [r4, #4]
 800277c:	b14a      	cbz	r2, 8002792 <rt_mut_wait+0x4e>
 800277e:	6829      	ldr	r1, [r5, #0]
 8002780:	4620      	mov	r0, r4
 8002782:	f7fe fdbb 	bl	80012fc <rt_put_prio>
 8002786:	2109      	movs	r1, #9
 8002788:	4630      	mov	r0, r6
 800278a:	f7ff fd43 	bl	8002214 <rt_block>
 800278e:	2001      	movs	r0, #1
 8002790:	bd70      	pop	{r4, r5, r6, pc}
 8002792:	682b      	ldr	r3, [r5, #0]
 8002794:	6063      	str	r3, [r4, #4]
 8002796:	605a      	str	r2, [r3, #4]
 8002798:	609c      	str	r4, [r3, #8]
 800279a:	e7f4      	b.n	8002786 <rt_mut_wait+0x42>
 800279c:	200026ec 	.word	0x200026ec

080027a0 <rt_dly_wait>:
 80027a0:	2103      	movs	r1, #3
 80027a2:	f7ff bd37 	b.w	8002214 <rt_block>
	...

080027a8 <rt_sem_psh>:
 80027a8:	6842      	ldr	r2, [r0, #4]
 80027aa:	b510      	push	{r4, lr}
 80027ac:	b17a      	cbz	r2, 80027ce <rt_sem_psh+0x26>
 80027ae:	f7fe fdbd 	bl	800132c <rt_get_first>
 80027b2:	4604      	mov	r4, r0
 80027b4:	f7fe fe60 	bl	8001478 <rt_rmv_dly>
 80027b8:	2101      	movs	r1, #1
 80027ba:	7061      	strb	r1, [r4, #1]
 80027bc:	4620      	mov	r0, r4
 80027be:	f7fe ff55 	bl	800166c <rt_ret_val>
 80027c2:	4621      	mov	r1, r4
 80027c4:	4804      	ldr	r0, [pc, #16]	; (80027d8 <rt_sem_psh+0x30>)
 80027c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80027ca:	f7fe bd97 	b.w	80012fc <rt_put_prio>
 80027ce:	8842      	ldrh	r2, [r0, #2]
 80027d0:	3201      	adds	r2, #1
 80027d2:	8042      	strh	r2, [r0, #2]
 80027d4:	bd10      	pop	{r4, pc}
 80027d6:	bf00      	nop
 80027d8:	20001cd8 	.word	0x20001cd8

080027dc <timer_irq_handler>:
 80027dc:	b570      	push	{r4, r5, r6, lr}
 80027de:	4c13      	ldr	r4, [pc, #76]	; (800282c <timer_irq_handler+0x50>)
 80027e0:	6823      	ldr	r3, [r4, #0]
 80027e2:	691a      	ldr	r2, [r3, #16]
 80027e4:	0795      	lsls	r5, r2, #30
 80027e6:	d507      	bpl.n	80027f8 <timer_irq_handler+0x1c>
 80027e8:	68da      	ldr	r2, [r3, #12]
 80027ea:	0790      	lsls	r0, r2, #30
 80027ec:	d504      	bpl.n	80027f8 <timer_irq_handler+0x1c>
 80027ee:	f06f 0202 	mvn.w	r2, #2
 80027f2:	611a      	str	r2, [r3, #16]
 80027f4:	f7fe fcb4 	bl	8001160 <us_ticker_irq_handler>
 80027f8:	6823      	ldr	r3, [r4, #0]
 80027fa:	691a      	ldr	r2, [r3, #16]
 80027fc:	0751      	lsls	r1, r2, #29
 80027fe:	d513      	bpl.n	8002828 <timer_irq_handler+0x4c>
 8002800:	68da      	ldr	r2, [r3, #12]
 8002802:	0752      	lsls	r2, r2, #29
 8002804:	d510      	bpl.n	8002828 <timer_irq_handler+0x4c>
 8002806:	f06f 0204 	mvn.w	r2, #4
 800280a:	4e09      	ldr	r6, [pc, #36]	; (8002830 <timer_irq_handler+0x54>)
 800280c:	611a      	str	r2, [r3, #16]
 800280e:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002810:	6833      	ldr	r3, [r6, #0]
 8002812:	1aeb      	subs	r3, r5, r3
 8002814:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002818:	d306      	bcc.n	8002828 <timer_irq_handler+0x4c>
 800281a:	f000 fe0d 	bl	8003438 <HAL_IncTick>
 800281e:	6823      	ldr	r3, [r4, #0]
 8002820:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002824:	639a      	str	r2, [r3, #56]	; 0x38
 8002826:	6035      	str	r5, [r6, #0]
 8002828:	bd70      	pop	{r4, r5, r6, pc}
 800282a:	bf00      	nop
 800282c:	20002738 	.word	0x20002738
 8002830:	20001930 	.word	0x20001930

08002834 <HAL_InitTick>:
 8002834:	b530      	push	{r4, r5, lr}
 8002836:	b089      	sub	sp, #36	; 0x24
 8002838:	a901      	add	r1, sp, #4
 800283a:	a803      	add	r0, sp, #12
 800283c:	f001 f9f4 	bl	8003c28 <HAL_RCC_GetClockConfig>
 8002840:	f001 f9c2 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 8002844:	2300      	movs	r3, #0
 8002846:	9302      	str	r3, [sp, #8]
 8002848:	4b24      	ldr	r3, [pc, #144]	; (80028dc <HAL_InitTick+0xa8>)
 800284a:	9001      	str	r0, [sp, #4]
 800284c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800284e:	4c24      	ldr	r4, [pc, #144]	; (80028e0 <HAL_InitTick+0xac>)
 8002850:	f042 0208 	orr.w	r2, r2, #8
 8002854:	641a      	str	r2, [r3, #64]	; 0x40
 8002856:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002858:	f002 0208 	and.w	r2, r2, #8
 800285c:	9202      	str	r2, [sp, #8]
 800285e:	9a02      	ldr	r2, [sp, #8]
 8002860:	6a1a      	ldr	r2, [r3, #32]
 8002862:	f042 0208 	orr.w	r2, r2, #8
 8002866:	621a      	str	r2, [r3, #32]
 8002868:	6a1a      	ldr	r2, [r3, #32]
 800286a:	f022 0208 	bic.w	r2, r2, #8
 800286e:	621a      	str	r2, [r3, #32]
 8002870:	9a06      	ldr	r2, [sp, #24]
 8002872:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8002876:	6023      	str	r3, [r4, #0]
 8002878:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800287c:	60e3      	str	r3, [r4, #12]
 800287e:	4b19      	ldr	r3, [pc, #100]	; (80028e4 <HAL_InitTick+0xb0>)
 8002880:	bb4a      	cbnz	r2, 80028d6 <HAL_InitTick+0xa2>
 8002882:	fbb0 f0f3 	udiv	r0, r0, r3
 8002886:	3801      	subs	r0, #1
 8002888:	2500      	movs	r5, #0
 800288a:	6060      	str	r0, [r4, #4]
 800288c:	4814      	ldr	r0, [pc, #80]	; (80028e0 <HAL_InitTick+0xac>)
 800288e:	6125      	str	r5, [r4, #16]
 8002890:	60a5      	str	r5, [r4, #8]
 8002892:	6165      	str	r5, [r4, #20]
 8002894:	f000 fd78 	bl	8003388 <HAL_TIM_OC_Init>
 8002898:	4913      	ldr	r1, [pc, #76]	; (80028e8 <HAL_InitTick+0xb4>)
 800289a:	2032      	movs	r0, #50	; 0x32
 800289c:	f000 fd06 	bl	80032ac <__NVIC_SetVector>
 80028a0:	4b12      	ldr	r3, [pc, #72]	; (80028ec <HAL_InitTick+0xb8>)
 80028a2:	480f      	ldr	r0, [pc, #60]	; (80028e0 <HAL_InitTick+0xac>)
 80028a4:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80028a8:	605a      	str	r2, [r3, #4]
 80028aa:	4629      	mov	r1, r5
 80028ac:	f000 fda8 	bl	8003400 <HAL_TIM_OC_Start>
 80028b0:	2104      	movs	r1, #4
 80028b2:	480b      	ldr	r0, [pc, #44]	; (80028e0 <HAL_InitTick+0xac>)
 80028b4:	f000 fda4 	bl	8003400 <HAL_TIM_OC_Start>
 80028b8:	6823      	ldr	r3, [r4, #0]
 80028ba:	4a0d      	ldr	r2, [pc, #52]	; (80028f0 <HAL_InitTick+0xbc>)
 80028bc:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80028be:	6011      	str	r1, [r2, #0]
 80028c0:	6812      	ldr	r2, [r2, #0]
 80028c2:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 80028c6:	639a      	str	r2, [r3, #56]	; 0x38
 80028c8:	68da      	ldr	r2, [r3, #12]
 80028ca:	4628      	mov	r0, r5
 80028cc:	f042 0204 	orr.w	r2, r2, #4
 80028d0:	60da      	str	r2, [r3, #12]
 80028d2:	b009      	add	sp, #36	; 0x24
 80028d4:	bd30      	pop	{r4, r5, pc}
 80028d6:	0040      	lsls	r0, r0, #1
 80028d8:	e7d3      	b.n	8002882 <HAL_InitTick+0x4e>
 80028da:	bf00      	nop
 80028dc:	40023800 	.word	0x40023800
 80028e0:	20002738 	.word	0x20002738
 80028e4:	000f4240 	.word	0x000f4240
 80028e8:	080027dd 	.word	0x080027dd
 80028ec:	e000e100 	.word	0xe000e100
 80028f0:	20001930 	.word	0x20001930

080028f4 <HAL_SuspendTick>:
 80028f4:	4b03      	ldr	r3, [pc, #12]	; (8002904 <HAL_SuspendTick+0x10>)
 80028f6:	4a04      	ldr	r2, [pc, #16]	; (8002908 <HAL_SuspendTick+0x14>)
 80028f8:	6013      	str	r3, [r2, #0]
 80028fa:	68da      	ldr	r2, [r3, #12]
 80028fc:	f022 0204 	bic.w	r2, r2, #4
 8002900:	60da      	str	r2, [r3, #12]
 8002902:	4770      	bx	lr
 8002904:	40000c00 	.word	0x40000c00
 8002908:	20002738 	.word	0x20002738

0800290c <HAL_ResumeTick>:
 800290c:	4b03      	ldr	r3, [pc, #12]	; (800291c <HAL_ResumeTick+0x10>)
 800290e:	4a04      	ldr	r2, [pc, #16]	; (8002920 <HAL_ResumeTick+0x14>)
 8002910:	6013      	str	r3, [r2, #0]
 8002912:	68da      	ldr	r2, [r3, #12]
 8002914:	f042 0204 	orr.w	r2, r2, #4
 8002918:	60da      	str	r2, [r3, #12]
 800291a:	4770      	bx	lr
 800291c:	40000c00 	.word	0x40000c00
 8002920:	20002738 	.word	0x20002738

08002924 <Set_GPIO_Clock>:
 8002924:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002926:	2300      	movs	r3, #0
 8002928:	2807      	cmp	r0, #7
 800292a:	d855      	bhi.n	80029d8 <Set_GPIO_Clock+0xb4>
 800292c:	e8df f000 	tbb	[pc, r0]
 8002930:	2d201304 	.word	0x2d201304
 8002934:	4754543a 	.word	0x4754543a
 8002938:	9300      	str	r3, [sp, #0]
 800293a:	4b2a      	ldr	r3, [pc, #168]	; (80029e4 <Set_GPIO_Clock+0xc0>)
 800293c:	482a      	ldr	r0, [pc, #168]	; (80029e8 <Set_GPIO_Clock+0xc4>)
 800293e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002940:	f042 0201 	orr.w	r2, r2, #1
 8002944:	631a      	str	r2, [r3, #48]	; 0x30
 8002946:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002948:	f003 0301 	and.w	r3, r3, #1
 800294c:	9300      	str	r3, [sp, #0]
 800294e:	9b00      	ldr	r3, [sp, #0]
 8002950:	b007      	add	sp, #28
 8002952:	f85d fb04 	ldr.w	pc, [sp], #4
 8002956:	9301      	str	r3, [sp, #4]
 8002958:	4b22      	ldr	r3, [pc, #136]	; (80029e4 <Set_GPIO_Clock+0xc0>)
 800295a:	4824      	ldr	r0, [pc, #144]	; (80029ec <Set_GPIO_Clock+0xc8>)
 800295c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800295e:	f042 0202 	orr.w	r2, r2, #2
 8002962:	631a      	str	r2, [r3, #48]	; 0x30
 8002964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002966:	f003 0302 	and.w	r3, r3, #2
 800296a:	9301      	str	r3, [sp, #4]
 800296c:	9b01      	ldr	r3, [sp, #4]
 800296e:	e7ef      	b.n	8002950 <Set_GPIO_Clock+0x2c>
 8002970:	9302      	str	r3, [sp, #8]
 8002972:	4b1c      	ldr	r3, [pc, #112]	; (80029e4 <Set_GPIO_Clock+0xc0>)
 8002974:	481e      	ldr	r0, [pc, #120]	; (80029f0 <Set_GPIO_Clock+0xcc>)
 8002976:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002978:	f042 0204 	orr.w	r2, r2, #4
 800297c:	631a      	str	r2, [r3, #48]	; 0x30
 800297e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002980:	f003 0304 	and.w	r3, r3, #4
 8002984:	9302      	str	r3, [sp, #8]
 8002986:	9b02      	ldr	r3, [sp, #8]
 8002988:	e7e2      	b.n	8002950 <Set_GPIO_Clock+0x2c>
 800298a:	9303      	str	r3, [sp, #12]
 800298c:	4b15      	ldr	r3, [pc, #84]	; (80029e4 <Set_GPIO_Clock+0xc0>)
 800298e:	4819      	ldr	r0, [pc, #100]	; (80029f4 <Set_GPIO_Clock+0xd0>)
 8002990:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002992:	f042 0208 	orr.w	r2, r2, #8
 8002996:	631a      	str	r2, [r3, #48]	; 0x30
 8002998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800299a:	f003 0308 	and.w	r3, r3, #8
 800299e:	9303      	str	r3, [sp, #12]
 80029a0:	9b03      	ldr	r3, [sp, #12]
 80029a2:	e7d5      	b.n	8002950 <Set_GPIO_Clock+0x2c>
 80029a4:	9304      	str	r3, [sp, #16]
 80029a6:	4b0f      	ldr	r3, [pc, #60]	; (80029e4 <Set_GPIO_Clock+0xc0>)
 80029a8:	4813      	ldr	r0, [pc, #76]	; (80029f8 <Set_GPIO_Clock+0xd4>)
 80029aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029ac:	f042 0210 	orr.w	r2, r2, #16
 80029b0:	631a      	str	r2, [r3, #48]	; 0x30
 80029b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029b4:	f003 0310 	and.w	r3, r3, #16
 80029b8:	9304      	str	r3, [sp, #16]
 80029ba:	9b04      	ldr	r3, [sp, #16]
 80029bc:	e7c8      	b.n	8002950 <Set_GPIO_Clock+0x2c>
 80029be:	9305      	str	r3, [sp, #20]
 80029c0:	4b08      	ldr	r3, [pc, #32]	; (80029e4 <Set_GPIO_Clock+0xc0>)
 80029c2:	480e      	ldr	r0, [pc, #56]	; (80029fc <Set_GPIO_Clock+0xd8>)
 80029c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029c6:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80029ca:	631a      	str	r2, [r3, #48]	; 0x30
 80029cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80029d2:	9305      	str	r3, [sp, #20]
 80029d4:	9b05      	ldr	r3, [sp, #20]
 80029d6:	e7bb      	b.n	8002950 <Set_GPIO_Clock+0x2c>
 80029d8:	4809      	ldr	r0, [pc, #36]	; (8002a00 <Set_GPIO_Clock+0xdc>)
 80029da:	f7fe fc69 	bl	80012b0 <error>
 80029de:	2000      	movs	r0, #0
 80029e0:	e7b6      	b.n	8002950 <Set_GPIO_Clock+0x2c>
 80029e2:	bf00      	nop
 80029e4:	40023800 	.word	0x40023800
 80029e8:	40020000 	.word	0x40020000
 80029ec:	40020400 	.word	0x40020400
 80029f0:	40020800 	.word	0x40020800
 80029f4:	40020c00 	.word	0x40020c00
 80029f8:	40021000 	.word	0x40021000
 80029fc:	40021c00 	.word	0x40021c00
 8002a00:	0800552c 	.word	0x0800552c

08002a04 <gpio_set>:
 8002a04:	b510      	push	{r4, lr}
 8002a06:	2100      	movs	r1, #0
 8002a08:	4604      	mov	r4, r0
 8002a0a:	f004 040f 	and.w	r4, r4, #15
 8002a0e:	f000 f8bf 	bl	8002b90 <pin_function>
 8002a12:	2001      	movs	r0, #1
 8002a14:	40a0      	lsls	r0, r4
 8002a16:	bd10      	pop	{r4, pc}

08002a18 <gpio_init>:
 8002a18:	b570      	push	{r4, r5, r6, lr}
 8002a1a:	4604      	mov	r4, r0
 8002a1c:	1c4b      	adds	r3, r1, #1
 8002a1e:	460e      	mov	r6, r1
 8002a20:	8221      	strh	r1, [r4, #16]
 8002a22:	d016      	beq.n	8002a52 <gpio_init+0x3a>
 8002a24:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002a28:	f7ff ff7c 	bl	8002924 <Set_GPIO_Clock>
 8002a2c:	4605      	mov	r5, r0
 8002a2e:	4630      	mov	r0, r6
 8002a30:	f7ff ffe8 	bl	8002a04 <gpio_set>
 8002a34:	8a23      	ldrh	r3, [r4, #16]
 8002a36:	4a07      	ldr	r2, [pc, #28]	; (8002a54 <gpio_init+0x3c>)
 8002a38:	6165      	str	r5, [r4, #20]
 8002a3a:	f003 030f 	and.w	r3, r3, #15
 8002a3e:	6020      	str	r0, [r4, #0]
 8002a40:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002a44:	61a3      	str	r3, [r4, #24]
 8002a46:	f105 0310 	add.w	r3, r5, #16
 8002a4a:	3518      	adds	r5, #24
 8002a4c:	6063      	str	r3, [r4, #4]
 8002a4e:	60a5      	str	r5, [r4, #8]
 8002a50:	60e5      	str	r5, [r4, #12]
 8002a52:	bd70      	pop	{r4, r5, r6, pc}
 8002a54:	08005550 	.word	0x08005550

08002a58 <gpio_mode>:
 8002a58:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002a5c:	f000 b91c 	b.w	8002c98 <pin_mode>

08002a60 <gpio_dir>:
 8002a60:	b510      	push	{r4, lr}
 8002a62:	6983      	ldr	r3, [r0, #24]
 8002a64:	6944      	ldr	r4, [r0, #20]
 8002a66:	b971      	cbnz	r1, 8002a86 <gpio_dir+0x26>
 8002a68:	6821      	ldr	r1, [r4, #0]
 8002a6a:	fa93 f2a3 	rbit	r2, r3
 8002a6e:	fab2 f282 	clz	r2, r2
 8002a72:	2003      	movs	r0, #3
 8002a74:	0052      	lsls	r2, r2, #1
 8002a76:	fa00 f202 	lsl.w	r2, r0, r2
 8002a7a:	ea21 0202 	bic.w	r2, r1, r2
 8002a7e:	fa93 f3a3 	rbit	r3, r3
 8002a82:	6022      	str	r2, [r4, #0]
 8002a84:	bd10      	pop	{r4, pc}
 8002a86:	6822      	ldr	r2, [r4, #0]
 8002a88:	fa93 f1a3 	rbit	r1, r3
 8002a8c:	fab1 f181 	clz	r1, r1
 8002a90:	fa93 f3a3 	rbit	r3, r3
 8002a94:	2003      	movs	r0, #3
 8002a96:	0049      	lsls	r1, r1, #1
 8002a98:	fa00 f101 	lsl.w	r1, r0, r1
 8002a9c:	fab3 f383 	clz	r3, r3
 8002aa0:	ea22 0201 	bic.w	r2, r2, r1
 8002aa4:	005b      	lsls	r3, r3, #1
 8002aa6:	2101      	movs	r1, #1
 8002aa8:	fa01 f303 	lsl.w	r3, r1, r3
 8002aac:	4313      	orrs	r3, r2
 8002aae:	6023      	str	r3, [r4, #0]
 8002ab0:	bd10      	pop	{r4, pc}

08002ab2 <hal_sleep>:
 8002ab2:	b508      	push	{r3, lr}
 8002ab4:	f7ff ff1e 	bl	80028f4 <HAL_SuspendTick>
 8002ab8:	2101      	movs	r1, #1
 8002aba:	2000      	movs	r0, #0
 8002abc:	f000 fe14 	bl	80036e8 <HAL_PWR_EnterSLEEPMode>
 8002ac0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002ac4:	f7ff bf22 	b.w	800290c <HAL_ResumeTick>

08002ac8 <us_ticker_init>:
 8002ac8:	4b05      	ldr	r3, [pc, #20]	; (8002ae0 <us_ticker_init+0x18>)
 8002aca:	6818      	ldr	r0, [r3, #0]
 8002acc:	b930      	cbnz	r0, 8002adc <us_ticker_init+0x14>
 8002ace:	2201      	movs	r2, #1
 8002ad0:	601a      	str	r2, [r3, #0]
 8002ad2:	4b04      	ldr	r3, [pc, #16]	; (8002ae4 <us_ticker_init+0x1c>)
 8002ad4:	4a04      	ldr	r2, [pc, #16]	; (8002ae8 <us_ticker_init+0x20>)
 8002ad6:	601a      	str	r2, [r3, #0]
 8002ad8:	f7ff beac 	b.w	8002834 <HAL_InitTick>
 8002adc:	4770      	bx	lr
 8002ade:	bf00      	nop
 8002ae0:	20001934 	.word	0x20001934
 8002ae4:	20002738 	.word	0x20002738
 8002ae8:	40000c00 	.word	0x40000c00

08002aec <us_ticker_read>:
 8002aec:	b508      	push	{r3, lr}
 8002aee:	4b04      	ldr	r3, [pc, #16]	; (8002b00 <us_ticker_read+0x14>)
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	b90b      	cbnz	r3, 8002af8 <us_ticker_read+0xc>
 8002af4:	f7ff ffe8 	bl	8002ac8 <us_ticker_init>
 8002af8:	4b02      	ldr	r3, [pc, #8]	; (8002b04 <us_ticker_read+0x18>)
 8002afa:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002afc:	bd08      	pop	{r3, pc}
 8002afe:	bf00      	nop
 8002b00:	20001934 	.word	0x20001934
 8002b04:	40000c00 	.word	0x40000c00

08002b08 <us_ticker_set_interrupt>:
 8002b08:	4b04      	ldr	r3, [pc, #16]	; (8002b1c <us_ticker_set_interrupt+0x14>)
 8002b0a:	4a05      	ldr	r2, [pc, #20]	; (8002b20 <us_ticker_set_interrupt+0x18>)
 8002b0c:	6013      	str	r3, [r2, #0]
 8002b0e:	6358      	str	r0, [r3, #52]	; 0x34
 8002b10:	68da      	ldr	r2, [r3, #12]
 8002b12:	f042 0202 	orr.w	r2, r2, #2
 8002b16:	60da      	str	r2, [r3, #12]
 8002b18:	4770      	bx	lr
 8002b1a:	bf00      	nop
 8002b1c:	40000c00 	.word	0x40000c00
 8002b20:	20002738 	.word	0x20002738

08002b24 <us_ticker_disable_interrupt>:
 8002b24:	4b03      	ldr	r3, [pc, #12]	; (8002b34 <us_ticker_disable_interrupt+0x10>)
 8002b26:	4a04      	ldr	r2, [pc, #16]	; (8002b38 <us_ticker_disable_interrupt+0x14>)
 8002b28:	6013      	str	r3, [r2, #0]
 8002b2a:	68da      	ldr	r2, [r3, #12]
 8002b2c:	f022 0202 	bic.w	r2, r2, #2
 8002b30:	60da      	str	r2, [r3, #12]
 8002b32:	4770      	bx	lr
 8002b34:	40000c00 	.word	0x40000c00
 8002b38:	20002738 	.word	0x20002738

08002b3c <us_ticker_clear_interrupt>:
 8002b3c:	4a03      	ldr	r2, [pc, #12]	; (8002b4c <us_ticker_clear_interrupt+0x10>)
 8002b3e:	4b04      	ldr	r3, [pc, #16]	; (8002b50 <us_ticker_clear_interrupt+0x14>)
 8002b40:	6013      	str	r3, [r2, #0]
 8002b42:	f06f 0202 	mvn.w	r2, #2
 8002b46:	611a      	str	r2, [r3, #16]
 8002b48:	4770      	bx	lr
 8002b4a:	bf00      	nop
 8002b4c:	20002738 	.word	0x20002738
 8002b50:	40000c00 	.word	0x40000c00

08002b54 <LL_GPIO_SetPinPull>:
 8002b54:	b530      	push	{r4, r5, lr}
 8002b56:	68c3      	ldr	r3, [r0, #12]
 8002b58:	fa91 f4a1 	rbit	r4, r1
 8002b5c:	fab4 f484 	clz	r4, r4
 8002b60:	fa91 f1a1 	rbit	r1, r1
 8002b64:	2503      	movs	r5, #3
 8002b66:	fab1 f181 	clz	r1, r1
 8002b6a:	0064      	lsls	r4, r4, #1
 8002b6c:	fa05 f404 	lsl.w	r4, r5, r4
 8002b70:	0049      	lsls	r1, r1, #1
 8002b72:	ea23 0304 	bic.w	r3, r3, r4
 8002b76:	fa02 f101 	lsl.w	r1, r2, r1
 8002b7a:	4319      	orrs	r1, r3
 8002b7c:	60c1      	str	r1, [r0, #12]
 8002b7e:	bd30      	pop	{r4, r5, pc}

08002b80 <stm_pin_PullConfig>:
 8002b80:	2a01      	cmp	r2, #1
 8002b82:	d002      	beq.n	8002b8a <stm_pin_PullConfig+0xa>
 8002b84:	2a02      	cmp	r2, #2
 8002b86:	bf18      	it	ne
 8002b88:	2200      	movne	r2, #0
 8002b8a:	f7ff bfe3 	b.w	8002b54 <LL_GPIO_SetPinPull>
	...

08002b90 <pin_function>:
 8002b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002b94:	4b3f      	ldr	r3, [pc, #252]	; (8002c94 <pin_function+0x104>)
 8002b96:	f000 080f 	and.w	r8, r0, #15
 8002b9a:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002b9e:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8002ba2:	460e      	mov	r6, r1
 8002ba4:	f001 0507 	and.w	r5, r1, #7
 8002ba8:	f7ff febc 	bl	8002924 <Set_GPIO_Clock>
 8002bac:	6883      	ldr	r3, [r0, #8]
 8002bae:	fa94 f1a4 	rbit	r1, r4
 8002bb2:	fab1 f181 	clz	r1, r1
 8002bb6:	fa94 f2a4 	rbit	r2, r4
 8002bba:	2703      	movs	r7, #3
 8002bbc:	0049      	lsls	r1, r1, #1
 8002bbe:	fa07 f101 	lsl.w	r1, r7, r1
 8002bc2:	fab2 f282 	clz	r2, r2
 8002bc6:	ea23 0301 	bic.w	r3, r3, r1
 8002bca:	0052      	lsls	r2, r2, #1
 8002bcc:	2102      	movs	r1, #2
 8002bce:	fa01 f202 	lsl.w	r2, r1, r2
 8002bd2:	4313      	orrs	r3, r2
 8002bd4:	428d      	cmp	r5, r1
 8002bd6:	6083      	str	r3, [r0, #8]
 8002bd8:	d028      	beq.n	8002c2c <pin_function+0x9c>
 8002bda:	42bd      	cmp	r5, r7
 8002bdc:	d041      	beq.n	8002c62 <pin_function+0xd2>
 8002bde:	2d01      	cmp	r5, #1
 8002be0:	d03f      	beq.n	8002c62 <pin_function+0xd2>
 8002be2:	2300      	movs	r3, #0
 8002be4:	6802      	ldr	r2, [r0, #0]
 8002be6:	fa94 f7a4 	rbit	r7, r4
 8002bea:	fab7 f787 	clz	r7, r7
 8002bee:	fa94 f1a4 	rbit	r1, r4
 8002bf2:	f04f 0e03 	mov.w	lr, #3
 8002bf6:	fab1 f181 	clz	r1, r1
 8002bfa:	007f      	lsls	r7, r7, #1
 8002bfc:	fa0e f707 	lsl.w	r7, lr, r7
 8002c00:	0049      	lsls	r1, r1, #1
 8002c02:	ea22 0207 	bic.w	r2, r2, r7
 8002c06:	408b      	lsls	r3, r1
 8002c08:	3d01      	subs	r5, #1
 8002c0a:	4313      	orrs	r3, r2
 8002c0c:	2d01      	cmp	r5, #1
 8002c0e:	6003      	str	r3, [r0, #0]
 8002c10:	d805      	bhi.n	8002c1e <pin_function+0x8e>
 8002c12:	6843      	ldr	r3, [r0, #4]
 8002c14:	0732      	lsls	r2, r6, #28
 8002c16:	bf4c      	ite	mi
 8002c18:	4323      	orrmi	r3, r4
 8002c1a:	43a3      	bicpl	r3, r4
 8002c1c:	6043      	str	r3, [r0, #4]
 8002c1e:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8002c22:	4621      	mov	r1, r4
 8002c24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002c28:	f7ff bfaa 	b.w	8002b80 <stm_pin_PullConfig>
 8002c2c:	f1b8 0f07 	cmp.w	r8, #7
 8002c30:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8002c34:	d917      	bls.n	8002c66 <pin_function+0xd6>
 8002c36:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8002c38:	0a23      	lsrs	r3, r4, #8
 8002c3a:	fa93 f1a3 	rbit	r1, r3
 8002c3e:	fab1 f181 	clz	r1, r1
 8002c42:	fa93 f3a3 	rbit	r3, r3
 8002c46:	f04f 0e0f 	mov.w	lr, #15
 8002c4a:	fab3 f383 	clz	r3, r3
 8002c4e:	0089      	lsls	r1, r1, #2
 8002c50:	fa0e f101 	lsl.w	r1, lr, r1
 8002c54:	009b      	lsls	r3, r3, #2
 8002c56:	ea22 0201 	bic.w	r2, r2, r1
 8002c5a:	fa07 f303 	lsl.w	r3, r7, r3
 8002c5e:	4313      	orrs	r3, r2
 8002c60:	6243      	str	r3, [r0, #36]	; 0x24
 8002c62:	462b      	mov	r3, r5
 8002c64:	e7be      	b.n	8002be4 <pin_function+0x54>
 8002c66:	6a02      	ldr	r2, [r0, #32]
 8002c68:	fa94 f3a4 	rbit	r3, r4
 8002c6c:	fab3 f383 	clz	r3, r3
 8002c70:	fa94 f1a4 	rbit	r1, r4
 8002c74:	f04f 0e0f 	mov.w	lr, #15
 8002c78:	fab1 f181 	clz	r1, r1
 8002c7c:	009b      	lsls	r3, r3, #2
 8002c7e:	fa0e f303 	lsl.w	r3, lr, r3
 8002c82:	0089      	lsls	r1, r1, #2
 8002c84:	ea22 0203 	bic.w	r2, r2, r3
 8002c88:	fa07 f301 	lsl.w	r3, r7, r1
 8002c8c:	4313      	orrs	r3, r2
 8002c8e:	6203      	str	r3, [r0, #32]
 8002c90:	e7e7      	b.n	8002c62 <pin_function+0xd2>
 8002c92:	bf00      	nop
 8002c94:	08005550 	.word	0x08005550

08002c98 <pin_mode>:
 8002c98:	b538      	push	{r3, r4, r5, lr}
 8002c9a:	f000 020f 	and.w	r2, r0, #15
 8002c9e:	4b19      	ldr	r3, [pc, #100]	; (8002d04 <pin_mode+0x6c>)
 8002ca0:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002ca4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8002ca8:	460d      	mov	r5, r1
 8002caa:	f7ff fe3b 	bl	8002924 <Set_GPIO_Clock>
 8002cae:	fb04 f204 	mul.w	r2, r4, r4
 8002cb2:	6801      	ldr	r1, [r0, #0]
 8002cb4:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8002cb8:	400b      	ands	r3, r1
 8002cba:	fbb3 f3f2 	udiv	r3, r3, r2
 8002cbe:	3b01      	subs	r3, #1
 8002cc0:	2b01      	cmp	r3, #1
 8002cc2:	d805      	bhi.n	8002cd0 <pin_mode+0x38>
 8002cc4:	1eeb      	subs	r3, r5, #3
 8002cc6:	2b02      	cmp	r3, #2
 8002cc8:	6843      	ldr	r3, [r0, #4]
 8002cca:	d809      	bhi.n	8002ce0 <pin_mode+0x48>
 8002ccc:	4323      	orrs	r3, r4
 8002cce:	6043      	str	r3, [r0, #4]
 8002cd0:	2d03      	cmp	r5, #3
 8002cd2:	d108      	bne.n	8002ce6 <pin_mode+0x4e>
 8002cd4:	2201      	movs	r2, #1
 8002cd6:	4621      	mov	r1, r4
 8002cd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002cdc:	f7ff bf50 	b.w	8002b80 <stm_pin_PullConfig>
 8002ce0:	ea23 0304 	bic.w	r3, r3, r4
 8002ce4:	6043      	str	r3, [r0, #4]
 8002ce6:	2d01      	cmp	r5, #1
 8002ce8:	d0f4      	beq.n	8002cd4 <pin_mode+0x3c>
 8002cea:	2d05      	cmp	r5, #5
 8002cec:	d001      	beq.n	8002cf2 <pin_mode+0x5a>
 8002cee:	2d02      	cmp	r5, #2
 8002cf0:	d101      	bne.n	8002cf6 <pin_mode+0x5e>
 8002cf2:	2202      	movs	r2, #2
 8002cf4:	e7ef      	b.n	8002cd6 <pin_mode+0x3e>
 8002cf6:	4621      	mov	r1, r4
 8002cf8:	2200      	movs	r2, #0
 8002cfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002cfe:	f7ff bf29 	b.w	8002b54 <LL_GPIO_SetPinPull>
 8002d02:	bf00      	nop
 8002d04:	08005550 	.word	0x08005550

08002d08 <__NVIC_DisableIRQ>:
 8002d08:	0943      	lsrs	r3, r0, #5
 8002d0a:	2201      	movs	r2, #1
 8002d0c:	f000 001f 	and.w	r0, r0, #31
 8002d10:	fa02 f000 	lsl.w	r0, r2, r0
 8002d14:	3320      	adds	r3, #32
 8002d16:	4a04      	ldr	r2, [pc, #16]	; (8002d28 <__NVIC_DisableIRQ+0x20>)
 8002d18:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8002d1c:	f3bf 8f4f 	dsb	sy
 8002d20:	f3bf 8f6f 	isb	sy
 8002d24:	4770      	bx	lr
 8002d26:	bf00      	nop
 8002d28:	e000e100 	.word	0xe000e100

08002d2c <init_uart>:
 8002d2c:	6842      	ldr	r2, [r0, #4]
 8002d2e:	4916      	ldr	r1, [pc, #88]	; (8002d88 <init_uart+0x5c>)
 8002d30:	0192      	lsls	r2, r2, #6
 8002d32:	b510      	push	{r4, lr}
 8002d34:	188b      	adds	r3, r1, r2
 8002d36:	6804      	ldr	r4, [r0, #0]
 8002d38:	508c      	str	r4, [r1, r2]
 8002d3a:	6882      	ldr	r2, [r0, #8]
 8002d3c:	605a      	str	r2, [r3, #4]
 8002d3e:	68c2      	ldr	r2, [r0, #12]
 8002d40:	609a      	str	r2, [r3, #8]
 8002d42:	6902      	ldr	r2, [r0, #16]
 8002d44:	60da      	str	r2, [r3, #12]
 8002d46:	6942      	ldr	r2, [r0, #20]
 8002d48:	611a      	str	r2, [r3, #16]
 8002d4a:	6a02      	ldr	r2, [r0, #32]
 8002d4c:	619a      	str	r2, [r3, #24]
 8002d4e:	2200      	movs	r2, #0
 8002d50:	61da      	str	r2, [r3, #28]
 8002d52:	84da      	strh	r2, [r3, #38]	; 0x26
 8002d54:	849a      	strh	r2, [r3, #36]	; 0x24
 8002d56:	85da      	strh	r2, [r3, #46]	; 0x2e
 8002d58:	859a      	strh	r2, [r3, #44]	; 0x2c
 8002d5a:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8002d5e:	3201      	adds	r2, #1
 8002d60:	d10a      	bne.n	8002d78 <init_uart+0x4c>
 8002d62:	2208      	movs	r2, #8
 8002d64:	615a      	str	r2, [r3, #20]
 8002d66:	4618      	mov	r0, r3
 8002d68:	f000 fc8f 	bl	800368a <HAL_UART_Init>
 8002d6c:	b158      	cbz	r0, 8002d86 <init_uart+0x5a>
 8002d6e:	4807      	ldr	r0, [pc, #28]	; (8002d8c <init_uart+0x60>)
 8002d70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002d74:	f7fe ba9c 	b.w	80012b0 <error>
 8002d78:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8002d7c:	3201      	adds	r2, #1
 8002d7e:	bf0c      	ite	eq
 8002d80:	2204      	moveq	r2, #4
 8002d82:	220c      	movne	r2, #12
 8002d84:	e7ee      	b.n	8002d64 <init_uart+0x38>
 8002d86:	bd10      	pop	{r4, pc}
 8002d88:	20001960 	.word	0x20001960
 8002d8c:	08005590 	.word	0x08005590

08002d90 <uart_irq>:
 8002d90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002d92:	4e19      	ldr	r6, [pc, #100]	; (8002df8 <uart_irq+0x68>)
 8002d94:	4607      	mov	r7, r0
 8002d96:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8002d9a:	2800      	cmp	r0, #0
 8002d9c:	d02a      	beq.n	8002df4 <uart_irq+0x64>
 8002d9e:	4c17      	ldr	r4, [pc, #92]	; (8002dfc <uart_irq+0x6c>)
 8002da0:	01bd      	lsls	r5, r7, #6
 8002da2:	5963      	ldr	r3, [r4, r5]
 8002da4:	681a      	ldr	r2, [r3, #0]
 8002da6:	0652      	lsls	r2, r2, #25
 8002da8:	d50a      	bpl.n	8002dc0 <uart_irq+0x30>
 8002daa:	68db      	ldr	r3, [r3, #12]
 8002dac:	0659      	lsls	r1, r3, #25
 8002dae:	d507      	bpl.n	8002dc0 <uart_irq+0x30>
 8002db0:	4b13      	ldr	r3, [pc, #76]	; (8002e00 <uart_irq+0x70>)
 8002db2:	2101      	movs	r1, #1
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	4798      	blx	r3
 8002db8:	5963      	ldr	r3, [r4, r5]
 8002dba:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002dbe:	601a      	str	r2, [r3, #0]
 8002dc0:	5963      	ldr	r3, [r4, r5]
 8002dc2:	681a      	ldr	r2, [r3, #0]
 8002dc4:	0692      	lsls	r2, r2, #26
 8002dc6:	d50c      	bpl.n	8002de2 <uart_irq+0x52>
 8002dc8:	68db      	ldr	r3, [r3, #12]
 8002dca:	0698      	lsls	r0, r3, #26
 8002dcc:	d509      	bpl.n	8002de2 <uart_irq+0x52>
 8002dce:	4b0c      	ldr	r3, [pc, #48]	; (8002e00 <uart_irq+0x70>)
 8002dd0:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	2100      	movs	r1, #0
 8002dd8:	4798      	blx	r3
 8002dda:	5963      	ldr	r3, [r4, r5]
 8002ddc:	f06f 0220 	mvn.w	r2, #32
 8002de0:	601a      	str	r2, [r3, #0]
 8002de2:	5963      	ldr	r3, [r4, r5]
 8002de4:	681a      	ldr	r2, [r3, #0]
 8002de6:	0711      	lsls	r1, r2, #28
 8002de8:	d504      	bpl.n	8002df4 <uart_irq+0x64>
 8002dea:	695a      	ldr	r2, [r3, #20]
 8002dec:	07d2      	lsls	r2, r2, #31
 8002dee:	bf44      	itt	mi
 8002df0:	685b      	ldrmi	r3, [r3, #4]
 8002df2:	9301      	strmi	r3, [sp, #4]
 8002df4:	b003      	add	sp, #12
 8002df6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002df8:	2000193c 	.word	0x2000193c
 8002dfc:	20001960 	.word	0x20001960
 8002e00:	20001938 	.word	0x20001938

08002e04 <uart1_irq>:
 8002e04:	2000      	movs	r0, #0
 8002e06:	f7ff bfc3 	b.w	8002d90 <uart_irq>

08002e0a <uart2_irq>:
 8002e0a:	2001      	movs	r0, #1
 8002e0c:	f7ff bfc0 	b.w	8002d90 <uart_irq>

08002e10 <uart6_irq>:
 8002e10:	2005      	movs	r0, #5
 8002e12:	f7ff bfbd 	b.w	8002d90 <uart_irq>
	...

08002e18 <serial_init>:
 8002e18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002e1a:	460e      	mov	r6, r1
 8002e1c:	b085      	sub	sp, #20
 8002e1e:	4604      	mov	r4, r0
 8002e20:	4945      	ldr	r1, [pc, #276]	; (8002f38 <serial_init+0x120>)
 8002e22:	4630      	mov	r0, r6
 8002e24:	4615      	mov	r5, r2
 8002e26:	f7fe fa03 	bl	8001230 <pinmap_peripheral>
 8002e2a:	4944      	ldr	r1, [pc, #272]	; (8002f3c <serial_init+0x124>)
 8002e2c:	4607      	mov	r7, r0
 8002e2e:	4628      	mov	r0, r5
 8002e30:	f7fe f9fe 	bl	8001230 <pinmap_peripheral>
 8002e34:	4601      	mov	r1, r0
 8002e36:	4638      	mov	r0, r7
 8002e38:	f7fe f9dc 	bl	80011f4 <pinmap_merge>
 8002e3c:	4b40      	ldr	r3, [pc, #256]	; (8002f40 <serial_init+0x128>)
 8002e3e:	6020      	str	r0, [r4, #0]
 8002e40:	4298      	cmp	r0, r3
 8002e42:	d01e      	beq.n	8002e82 <serial_init+0x6a>
 8002e44:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002e48:	4298      	cmp	r0, r3
 8002e4a:	d05e      	beq.n	8002f0a <serial_init+0xf2>
 8002e4c:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 8002e50:	4298      	cmp	r0, r3
 8002e52:	d12b      	bne.n	8002eac <serial_init+0x94>
 8002e54:	4b3b      	ldr	r3, [pc, #236]	; (8002f44 <serial_init+0x12c>)
 8002e56:	6a1a      	ldr	r2, [r3, #32]
 8002e58:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002e5c:	621a      	str	r2, [r3, #32]
 8002e5e:	6a1a      	ldr	r2, [r3, #32]
 8002e60:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8002e64:	621a      	str	r2, [r3, #32]
 8002e66:	2200      	movs	r2, #0
 8002e68:	9202      	str	r2, [sp, #8]
 8002e6a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002e6c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002e70:	641a      	str	r2, [r3, #64]	; 0x40
 8002e72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e74:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e78:	9302      	str	r3, [sp, #8]
 8002e7a:	9b02      	ldr	r3, [sp, #8]
 8002e7c:	2301      	movs	r3, #1
 8002e7e:	6063      	str	r3, [r4, #4]
 8002e80:	e014      	b.n	8002eac <serial_init+0x94>
 8002e82:	4b30      	ldr	r3, [pc, #192]	; (8002f44 <serial_init+0x12c>)
 8002e84:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002e86:	f042 0210 	orr.w	r2, r2, #16
 8002e8a:	625a      	str	r2, [r3, #36]	; 0x24
 8002e8c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002e8e:	2100      	movs	r1, #0
 8002e90:	f022 0210 	bic.w	r2, r2, #16
 8002e94:	625a      	str	r2, [r3, #36]	; 0x24
 8002e96:	9101      	str	r1, [sp, #4]
 8002e98:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e9a:	f042 0210 	orr.w	r2, r2, #16
 8002e9e:	645a      	str	r2, [r3, #68]	; 0x44
 8002ea0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002ea2:	6061      	str	r1, [r4, #4]
 8002ea4:	f003 0310 	and.w	r3, r3, #16
 8002ea8:	9301      	str	r3, [sp, #4]
 8002eaa:	9b01      	ldr	r3, [sp, #4]
 8002eac:	4922      	ldr	r1, [pc, #136]	; (8002f38 <serial_init+0x120>)
 8002eae:	4630      	mov	r0, r6
 8002eb0:	f7fe f982 	bl	80011b8 <pinmap_pinout>
 8002eb4:	4921      	ldr	r1, [pc, #132]	; (8002f3c <serial_init+0x124>)
 8002eb6:	4628      	mov	r0, r5
 8002eb8:	f7fe f97e 	bl	80011b8 <pinmap_pinout>
 8002ebc:	1c72      	adds	r2, r6, #1
 8002ebe:	d003      	beq.n	8002ec8 <serial_init+0xb0>
 8002ec0:	2101      	movs	r1, #1
 8002ec2:	4630      	mov	r0, r6
 8002ec4:	f7ff fee8 	bl	8002c98 <pin_mode>
 8002ec8:	1c6b      	adds	r3, r5, #1
 8002eca:	d003      	beq.n	8002ed4 <serial_init+0xbc>
 8002ecc:	2101      	movs	r1, #1
 8002ece:	4628      	mov	r0, r5
 8002ed0:	f7ff fee2 	bl	8002c98 <pin_mode>
 8002ed4:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8002ed8:	60a3      	str	r3, [r4, #8]
 8002eda:	2300      	movs	r3, #0
 8002edc:	60e3      	str	r3, [r4, #12]
 8002ede:	6123      	str	r3, [r4, #16]
 8002ee0:	6163      	str	r3, [r4, #20]
 8002ee2:	6223      	str	r3, [r4, #32]
 8002ee4:	8326      	strh	r6, [r4, #24]
 8002ee6:	8365      	strh	r5, [r4, #26]
 8002ee8:	4620      	mov	r0, r4
 8002eea:	f7ff ff1f 	bl	8002d2c <init_uart>
 8002eee:	6822      	ldr	r2, [r4, #0]
 8002ef0:	4b15      	ldr	r3, [pc, #84]	; (8002f48 <serial_init+0x130>)
 8002ef2:	429a      	cmp	r2, r3
 8002ef4:	d107      	bne.n	8002f06 <serial_init+0xee>
 8002ef6:	4b15      	ldr	r3, [pc, #84]	; (8002f4c <serial_init+0x134>)
 8002ef8:	4815      	ldr	r0, [pc, #84]	; (8002f50 <serial_init+0x138>)
 8002efa:	2201      	movs	r2, #1
 8002efc:	601a      	str	r2, [r3, #0]
 8002efe:	4621      	mov	r1, r4
 8002f00:	224c      	movs	r2, #76	; 0x4c
 8002f02:	f001 fc8d 	bl	8004820 <memcpy>
 8002f06:	b005      	add	sp, #20
 8002f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f0a:	4b0e      	ldr	r3, [pc, #56]	; (8002f44 <serial_init+0x12c>)
 8002f0c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002f0e:	f042 0220 	orr.w	r2, r2, #32
 8002f12:	625a      	str	r2, [r3, #36]	; 0x24
 8002f14:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002f16:	f022 0220 	bic.w	r2, r2, #32
 8002f1a:	625a      	str	r2, [r3, #36]	; 0x24
 8002f1c:	2200      	movs	r2, #0
 8002f1e:	9203      	str	r2, [sp, #12]
 8002f20:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002f22:	f042 0220 	orr.w	r2, r2, #32
 8002f26:	645a      	str	r2, [r3, #68]	; 0x44
 8002f28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f2a:	f003 0320 	and.w	r3, r3, #32
 8002f2e:	9303      	str	r3, [sp, #12]
 8002f30:	9b03      	ldr	r3, [sp, #12]
 8002f32:	2305      	movs	r3, #5
 8002f34:	e7a3      	b.n	8002e7e <serial_init+0x66>
 8002f36:	bf00      	nop
 8002f38:	080055f0 	.word	0x080055f0
 8002f3c:	080055a8 	.word	0x080055a8
 8002f40:	40011000 	.word	0x40011000
 8002f44:	40023800 	.word	0x40023800
 8002f48:	40004400 	.word	0x40004400
 8002f4c:	2000195c 	.word	0x2000195c
 8002f50:	20002774 	.word	0x20002774

08002f54 <serial_baud>:
 8002f54:	6081      	str	r1, [r0, #8]
 8002f56:	f7ff bee9 	b.w	8002d2c <init_uart>
	...

08002f5c <serial_irq_handler>:
 8002f5c:	4b03      	ldr	r3, [pc, #12]	; (8002f6c <serial_irq_handler+0x10>)
 8002f5e:	6019      	str	r1, [r3, #0]
 8002f60:	6841      	ldr	r1, [r0, #4]
 8002f62:	4b03      	ldr	r3, [pc, #12]	; (8002f70 <serial_irq_handler+0x14>)
 8002f64:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8002f68:	4770      	bx	lr
 8002f6a:	bf00      	nop
 8002f6c:	20001938 	.word	0x20001938
 8002f70:	2000193c 	.word	0x2000193c

08002f74 <serial_irq_set>:
 8002f74:	b538      	push	{r3, r4, r5, lr}
 8002f76:	6843      	ldr	r3, [r0, #4]
 8002f78:	2b01      	cmp	r3, #1
 8002f7a:	460d      	mov	r5, r1
 8002f7c:	d01a      	beq.n	8002fb4 <serial_irq_set+0x40>
 8002f7e:	2b05      	cmp	r3, #5
 8002f80:	d01b      	beq.n	8002fba <serial_irq_set+0x46>
 8002f82:	b9eb      	cbnz	r3, 8002fc0 <serial_irq_set+0x4c>
 8002f84:	491c      	ldr	r1, [pc, #112]	; (8002ff8 <serial_irq_set+0x84>)
 8002f86:	2425      	movs	r4, #37	; 0x25
 8002f88:	481c      	ldr	r0, [pc, #112]	; (8002ffc <serial_irq_set+0x88>)
 8002f8a:	019b      	lsls	r3, r3, #6
 8002f8c:	b1f2      	cbz	r2, 8002fcc <serial_irq_set+0x58>
 8002f8e:	58c2      	ldr	r2, [r0, r3]
 8002f90:	68d3      	ldr	r3, [r2, #12]
 8002f92:	b9c5      	cbnz	r5, 8002fc6 <serial_irq_set+0x52>
 8002f94:	f043 0320 	orr.w	r3, r3, #32
 8002f98:	60d3      	str	r3, [r2, #12]
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	f000 f986 	bl	80032ac <__NVIC_SetVector>
 8002fa0:	0962      	lsrs	r2, r4, #5
 8002fa2:	2301      	movs	r3, #1
 8002fa4:	f004 0407 	and.w	r4, r4, #7
 8002fa8:	fa03 f404 	lsl.w	r4, r3, r4
 8002fac:	4b14      	ldr	r3, [pc, #80]	; (8003000 <serial_irq_set+0x8c>)
 8002fae:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8002fb2:	bd38      	pop	{r3, r4, r5, pc}
 8002fb4:	4913      	ldr	r1, [pc, #76]	; (8003004 <serial_irq_set+0x90>)
 8002fb6:	2426      	movs	r4, #38	; 0x26
 8002fb8:	e7e6      	b.n	8002f88 <serial_irq_set+0x14>
 8002fba:	4913      	ldr	r1, [pc, #76]	; (8003008 <serial_irq_set+0x94>)
 8002fbc:	2447      	movs	r4, #71	; 0x47
 8002fbe:	e7e3      	b.n	8002f88 <serial_irq_set+0x14>
 8002fc0:	2100      	movs	r1, #0
 8002fc2:	460c      	mov	r4, r1
 8002fc4:	e7e0      	b.n	8002f88 <serial_irq_set+0x14>
 8002fc6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002fca:	e7e5      	b.n	8002f98 <serial_irq_set+0x24>
 8002fcc:	58c3      	ldr	r3, [r0, r3]
 8002fce:	68da      	ldr	r2, [r3, #12]
 8002fd0:	b935      	cbnz	r5, 8002fe0 <serial_irq_set+0x6c>
 8002fd2:	f022 0220 	bic.w	r2, r2, #32
 8002fd6:	60da      	str	r2, [r3, #12]
 8002fd8:	68db      	ldr	r3, [r3, #12]
 8002fda:	061a      	lsls	r2, r3, #24
 8002fdc:	d506      	bpl.n	8002fec <serial_irq_set+0x78>
 8002fde:	bd38      	pop	{r3, r4, r5, pc}
 8002fe0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002fe4:	60da      	str	r2, [r3, #12]
 8002fe6:	68db      	ldr	r3, [r3, #12]
 8002fe8:	069b      	lsls	r3, r3, #26
 8002fea:	d404      	bmi.n	8002ff6 <serial_irq_set+0x82>
 8002fec:	4620      	mov	r0, r4
 8002fee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002ff2:	f7ff be89 	b.w	8002d08 <__NVIC_DisableIRQ>
 8002ff6:	bd38      	pop	{r3, r4, r5, pc}
 8002ff8:	08002e05 	.word	0x08002e05
 8002ffc:	20001960 	.word	0x20001960
 8003000:	e000e100 	.word	0xe000e100
 8003004:	08002e0b 	.word	0x08002e0b
 8003008:	08002e11 	.word	0x08002e11

0800300c <serial_readable>:
 800300c:	6843      	ldr	r3, [r0, #4]
 800300e:	4a03      	ldr	r2, [pc, #12]	; (800301c <serial_readable+0x10>)
 8003010:	019b      	lsls	r3, r3, #6
 8003012:	58d3      	ldr	r3, [r2, r3]
 8003014:	6818      	ldr	r0, [r3, #0]
 8003016:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800301a:	4770      	bx	lr
 800301c:	20001960 	.word	0x20001960

08003020 <serial_getc>:
 8003020:	6841      	ldr	r1, [r0, #4]
 8003022:	b510      	push	{r4, lr}
 8003024:	4604      	mov	r4, r0
 8003026:	4620      	mov	r0, r4
 8003028:	f7ff fff0 	bl	800300c <serial_readable>
 800302c:	2800      	cmp	r0, #0
 800302e:	d0fa      	beq.n	8003026 <serial_getc+0x6>
 8003030:	0189      	lsls	r1, r1, #6
 8003032:	4b03      	ldr	r3, [pc, #12]	; (8003040 <serial_getc+0x20>)
 8003034:	585b      	ldr	r3, [r3, r1]
 8003036:	6858      	ldr	r0, [r3, #4]
 8003038:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800303c:	bd10      	pop	{r4, pc}
 800303e:	bf00      	nop
 8003040:	20001960 	.word	0x20001960

08003044 <serial_writable>:
 8003044:	6843      	ldr	r3, [r0, #4]
 8003046:	4a03      	ldr	r2, [pc, #12]	; (8003054 <serial_writable+0x10>)
 8003048:	019b      	lsls	r3, r3, #6
 800304a:	58d3      	ldr	r3, [r2, r3]
 800304c:	6818      	ldr	r0, [r3, #0]
 800304e:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003052:	4770      	bx	lr
 8003054:	20001960 	.word	0x20001960

08003058 <serial_putc>:
 8003058:	b538      	push	{r3, r4, r5, lr}
 800305a:	6844      	ldr	r4, [r0, #4]
 800305c:	4605      	mov	r5, r0
 800305e:	4628      	mov	r0, r5
 8003060:	f7ff fff0 	bl	8003044 <serial_writable>
 8003064:	2800      	cmp	r0, #0
 8003066:	d0fa      	beq.n	800305e <serial_putc+0x6>
 8003068:	01a4      	lsls	r4, r4, #6
 800306a:	4b03      	ldr	r3, [pc, #12]	; (8003078 <serial_putc+0x20>)
 800306c:	591b      	ldr	r3, [r3, r4]
 800306e:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003072:	6059      	str	r1, [r3, #4]
 8003074:	bd38      	pop	{r3, r4, r5, pc}
 8003076:	bf00      	nop
 8003078:	20001960 	.word	0x20001960

0800307c <mbed_sdk_init>:
 800307c:	b508      	push	{r3, lr}
 800307e:	f000 f819 	bl	80030b4 <SystemCoreClockUpdate>
 8003082:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003086:	f000 b9bf 	b.w	8003408 <HAL_Init>

0800308a <SetSysClock_PLL_HSE.part.0>:
 800308a:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800308c:	230f      	movs	r3, #15
 800308e:	9301      	str	r3, [sp, #4]
 8003090:	2102      	movs	r1, #2
 8003092:	2300      	movs	r3, #0
 8003094:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003098:	a801      	add	r0, sp, #4
 800309a:	9102      	str	r1, [sp, #8]
 800309c:	9303      	str	r3, [sp, #12]
 800309e:	9204      	str	r2, [sp, #16]
 80030a0:	9305      	str	r3, [sp, #20]
 80030a2:	f000 fcdb 	bl	8003a5c <HAL_RCC_ClockConfig>
 80030a6:	fab0 f080 	clz	r0, r0
 80030aa:	0940      	lsrs	r0, r0, #5
 80030ac:	b007      	add	sp, #28
 80030ae:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080030b4 <SystemCoreClockUpdate>:
 80030b4:	4a17      	ldr	r2, [pc, #92]	; (8003114 <SystemCoreClockUpdate+0x60>)
 80030b6:	4918      	ldr	r1, [pc, #96]	; (8003118 <SystemCoreClockUpdate+0x64>)
 80030b8:	6893      	ldr	r3, [r2, #8]
 80030ba:	f003 030c 	and.w	r3, r3, #12
 80030be:	2b04      	cmp	r3, #4
 80030c0:	b510      	push	{r4, lr}
 80030c2:	d00d      	beq.n	80030e0 <SystemCoreClockUpdate+0x2c>
 80030c4:	2b08      	cmp	r3, #8
 80030c6:	d00d      	beq.n	80030e4 <SystemCoreClockUpdate+0x30>
 80030c8:	4b14      	ldr	r3, [pc, #80]	; (800311c <SystemCoreClockUpdate+0x68>)
 80030ca:	600b      	str	r3, [r1, #0]
 80030cc:	4b11      	ldr	r3, [pc, #68]	; (8003114 <SystemCoreClockUpdate+0x60>)
 80030ce:	4a14      	ldr	r2, [pc, #80]	; (8003120 <SystemCoreClockUpdate+0x6c>)
 80030d0:	689b      	ldr	r3, [r3, #8]
 80030d2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80030d6:	5cd2      	ldrb	r2, [r2, r3]
 80030d8:	680b      	ldr	r3, [r1, #0]
 80030da:	40d3      	lsrs	r3, r2
 80030dc:	600b      	str	r3, [r1, #0]
 80030de:	bd10      	pop	{r4, pc}
 80030e0:	4b10      	ldr	r3, [pc, #64]	; (8003124 <SystemCoreClockUpdate+0x70>)
 80030e2:	e7f2      	b.n	80030ca <SystemCoreClockUpdate+0x16>
 80030e4:	6854      	ldr	r4, [r2, #4]
 80030e6:	6850      	ldr	r0, [r2, #4]
 80030e8:	6852      	ldr	r2, [r2, #4]
 80030ea:	0263      	lsls	r3, r4, #9
 80030ec:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80030f0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80030f4:	bf4c      	ite	mi
 80030f6:	4b0b      	ldrmi	r3, [pc, #44]	; (8003124 <SystemCoreClockUpdate+0x70>)
 80030f8:	4b08      	ldrpl	r3, [pc, #32]	; (800311c <SystemCoreClockUpdate+0x68>)
 80030fa:	fbb3 f3f0 	udiv	r3, r3, r0
 80030fe:	4353      	muls	r3, r2
 8003100:	4a04      	ldr	r2, [pc, #16]	; (8003114 <SystemCoreClockUpdate+0x60>)
 8003102:	6852      	ldr	r2, [r2, #4]
 8003104:	f3c2 4201 	ubfx	r2, r2, #16, #2
 8003108:	3201      	adds	r2, #1
 800310a:	0052      	lsls	r2, r2, #1
 800310c:	fbb3 f3f2 	udiv	r3, r3, r2
 8003110:	e7db      	b.n	80030ca <SystemCoreClockUpdate+0x16>
 8003112:	bf00      	nop
 8003114:	40023800 	.word	0x40023800
 8003118:	200001b0 	.word	0x200001b0
 800311c:	00f42400 	.word	0x00f42400
 8003120:	08005638 	.word	0x08005638
 8003124:	007a1200 	.word	0x007a1200

08003128 <SetSysClock_PLL_HSE>:
 8003128:	b500      	push	{lr}
 800312a:	b08f      	sub	sp, #60	; 0x3c
 800312c:	4b1b      	ldr	r3, [pc, #108]	; (800319c <SetSysClock_PLL_HSE+0x74>)
 800312e:	2100      	movs	r1, #0
 8003130:	9100      	str	r1, [sp, #0]
 8003132:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003134:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003138:	641a      	str	r2, [r3, #64]	; 0x40
 800313a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800313c:	4a18      	ldr	r2, [pc, #96]	; (80031a0 <SetSysClock_PLL_HSE+0x78>)
 800313e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003142:	9300      	str	r3, [sp, #0]
 8003144:	9b00      	ldr	r3, [sp, #0]
 8003146:	9101      	str	r1, [sp, #4]
 8003148:	6813      	ldr	r3, [r2, #0]
 800314a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800314e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003152:	6013      	str	r3, [r2, #0]
 8003154:	6813      	ldr	r3, [r2, #0]
 8003156:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800315a:	9301      	str	r3, [sp, #4]
 800315c:	9b01      	ldr	r3, [sp, #4]
 800315e:	2301      	movs	r3, #1
 8003160:	9302      	str	r3, [sp, #8]
 8003162:	b9b8      	cbnz	r0, 8003194 <SetSysClock_PLL_HSE+0x6c>
 8003164:	9303      	str	r3, [sp, #12]
 8003166:	2302      	movs	r3, #2
 8003168:	9308      	str	r3, [sp, #32]
 800316a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800316e:	9309      	str	r3, [sp, #36]	; 0x24
 8003170:	2308      	movs	r3, #8
 8003172:	930a      	str	r3, [sp, #40]	; 0x28
 8003174:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8003178:	930b      	str	r3, [sp, #44]	; 0x2c
 800317a:	2304      	movs	r3, #4
 800317c:	930c      	str	r3, [sp, #48]	; 0x30
 800317e:	a802      	add	r0, sp, #8
 8003180:	2307      	movs	r3, #7
 8003182:	930d      	str	r3, [sp, #52]	; 0x34
 8003184:	f000 fac0 	bl	8003708 <HAL_RCC_OscConfig>
 8003188:	b930      	cbnz	r0, 8003198 <SetSysClock_PLL_HSE+0x70>
 800318a:	f7ff ff7e 	bl	800308a <SetSysClock_PLL_HSE.part.0>
 800318e:	b00f      	add	sp, #60	; 0x3c
 8003190:	f85d fb04 	ldr.w	pc, [sp], #4
 8003194:	2305      	movs	r3, #5
 8003196:	e7e5      	b.n	8003164 <SetSysClock_PLL_HSE+0x3c>
 8003198:	2000      	movs	r0, #0
 800319a:	e7f8      	b.n	800318e <SetSysClock_PLL_HSE+0x66>
 800319c:	40023800 	.word	0x40023800
 80031a0:	40007000 	.word	0x40007000

080031a4 <SetSysClock_PLL_HSI>:
 80031a4:	b510      	push	{r4, lr}
 80031a6:	b08e      	sub	sp, #56	; 0x38
 80031a8:	2400      	movs	r4, #0
 80031aa:	4b1a      	ldr	r3, [pc, #104]	; (8003214 <SetSysClock_PLL_HSI+0x70>)
 80031ac:	9400      	str	r4, [sp, #0]
 80031ae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80031b0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80031b4:	641a      	str	r2, [r3, #64]	; 0x40
 80031b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80031b8:	4a17      	ldr	r2, [pc, #92]	; (8003218 <SetSysClock_PLL_HSI+0x74>)
 80031ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80031be:	9300      	str	r3, [sp, #0]
 80031c0:	9b00      	ldr	r3, [sp, #0]
 80031c2:	9401      	str	r4, [sp, #4]
 80031c4:	6813      	ldr	r3, [r2, #0]
 80031c6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80031ca:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80031ce:	6013      	str	r3, [r2, #0]
 80031d0:	6813      	ldr	r3, [r2, #0]
 80031d2:	9403      	str	r4, [sp, #12]
 80031d4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80031d8:	9301      	str	r3, [sp, #4]
 80031da:	9b01      	ldr	r3, [sp, #4]
 80031dc:	9409      	str	r4, [sp, #36]	; 0x24
 80031de:	2303      	movs	r3, #3
 80031e0:	9302      	str	r3, [sp, #8]
 80031e2:	2301      	movs	r3, #1
 80031e4:	9305      	str	r3, [sp, #20]
 80031e6:	2310      	movs	r3, #16
 80031e8:	9306      	str	r3, [sp, #24]
 80031ea:	930a      	str	r3, [sp, #40]	; 0x28
 80031ec:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80031f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80031f2:	2304      	movs	r3, #4
 80031f4:	2202      	movs	r2, #2
 80031f6:	930c      	str	r3, [sp, #48]	; 0x30
 80031f8:	a802      	add	r0, sp, #8
 80031fa:	2307      	movs	r3, #7
 80031fc:	9208      	str	r2, [sp, #32]
 80031fe:	930d      	str	r3, [sp, #52]	; 0x34
 8003200:	f000 fa82 	bl	8003708 <HAL_RCC_OscConfig>
 8003204:	b918      	cbnz	r0, 800320e <SetSysClock_PLL_HSI+0x6a>
 8003206:	f7ff ff40 	bl	800308a <SetSysClock_PLL_HSE.part.0>
 800320a:	b00e      	add	sp, #56	; 0x38
 800320c:	bd10      	pop	{r4, pc}
 800320e:	4620      	mov	r0, r4
 8003210:	e7fb      	b.n	800320a <SetSysClock_PLL_HSI+0x66>
 8003212:	bf00      	nop
 8003214:	40023800 	.word	0x40023800
 8003218:	40007000 	.word	0x40007000

0800321c <SetSysClock>:
 800321c:	b508      	push	{r3, lr}
 800321e:	2001      	movs	r0, #1
 8003220:	f7ff ff82 	bl	8003128 <SetSysClock_PLL_HSE>
 8003224:	b930      	cbnz	r0, 8003234 <SetSysClock+0x18>
 8003226:	f7ff ff7f 	bl	8003128 <SetSysClock_PLL_HSE>
 800322a:	b918      	cbnz	r0, 8003234 <SetSysClock+0x18>
 800322c:	f7ff ffba 	bl	80031a4 <SetSysClock_PLL_HSI>
 8003230:	b900      	cbnz	r0, 8003234 <SetSysClock+0x18>
 8003232:	e7fe      	b.n	8003232 <SetSysClock+0x16>
 8003234:	bd08      	pop	{r3, pc}
	...

08003238 <SystemInit>:
 8003238:	4a17      	ldr	r2, [pc, #92]	; (8003298 <SystemInit+0x60>)
 800323a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 800323e:	b510      	push	{r4, lr}
 8003240:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003244:	4c15      	ldr	r4, [pc, #84]	; (800329c <SystemInit+0x64>)
 8003246:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800324a:	6823      	ldr	r3, [r4, #0]
 800324c:	2100      	movs	r1, #0
 800324e:	f043 0301 	orr.w	r3, r3, #1
 8003252:	6023      	str	r3, [r4, #0]
 8003254:	60a1      	str	r1, [r4, #8]
 8003256:	6823      	ldr	r3, [r4, #0]
 8003258:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800325c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003260:	6023      	str	r3, [r4, #0]
 8003262:	4b0f      	ldr	r3, [pc, #60]	; (80032a0 <SystemInit+0x68>)
 8003264:	6063      	str	r3, [r4, #4]
 8003266:	6823      	ldr	r3, [r4, #0]
 8003268:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800326c:	6023      	str	r3, [r4, #0]
 800326e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003272:	60e1      	str	r1, [r4, #12]
 8003274:	6093      	str	r3, [r2, #8]
 8003276:	4b0b      	ldr	r3, [pc, #44]	; (80032a4 <SystemInit+0x6c>)
 8003278:	4a0b      	ldr	r2, [pc, #44]	; (80032a8 <SystemInit+0x70>)
 800327a:	601a      	str	r2, [r3, #0]
 800327c:	f000 f8c4 	bl	8003408 <HAL_Init>
 8003280:	f7ff ffcc 	bl	800321c <SetSysClock>
 8003284:	6a23      	ldr	r3, [r4, #32]
 8003286:	f043 0308 	orr.w	r3, r3, #8
 800328a:	6223      	str	r3, [r4, #32]
 800328c:	6a23      	ldr	r3, [r4, #32]
 800328e:	f023 0308 	bic.w	r3, r3, #8
 8003292:	6223      	str	r3, [r4, #32]
 8003294:	bd10      	pop	{r4, pc}
 8003296:	bf00      	nop
 8003298:	e000ed00 	.word	0xe000ed00
 800329c:	40023800 	.word	0x40023800
 80032a0:	24003010 	.word	0x24003010
 80032a4:	200001b0 	.word	0x200001b0
 80032a8:	00f42400 	.word	0x00f42400

080032ac <__NVIC_SetVector>:
 80032ac:	b530      	push	{r4, r5, lr}
 80032ae:	4c0c      	ldr	r4, [pc, #48]	; (80032e0 <__NVIC_SetVector+0x34>)
 80032b0:	68a2      	ldr	r2, [r4, #8]
 80032b2:	68a4      	ldr	r4, [r4, #8]
 80032b4:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 80032b8:	4613      	mov	r3, r2
 80032ba:	d10c      	bne.n	80032d6 <__NVIC_SetVector+0x2a>
 80032bc:	1f13      	subs	r3, r2, #4
 80032be:	4c09      	ldr	r4, [pc, #36]	; (80032e4 <__NVIC_SetVector+0x38>)
 80032c0:	4a09      	ldr	r2, [pc, #36]	; (80032e8 <__NVIC_SetVector+0x3c>)
 80032c2:	f853 5f04 	ldr.w	r5, [r3, #4]!
 80032c6:	f842 5f04 	str.w	r5, [r2, #4]!
 80032ca:	42a2      	cmp	r2, r4
 80032cc:	d1f9      	bne.n	80032c2 <__NVIC_SetVector+0x16>
 80032ce:	4a04      	ldr	r2, [pc, #16]	; (80032e0 <__NVIC_SetVector+0x34>)
 80032d0:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80032d4:	6093      	str	r3, [r2, #8]
 80032d6:	3010      	adds	r0, #16
 80032d8:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80032dc:	bd30      	pop	{r4, r5, pc}
 80032de:	bf00      	nop
 80032e0:	e000ed00 	.word	0xe000ed00
 80032e4:	20000190 	.word	0x20000190
 80032e8:	1ffffffc 	.word	0x1ffffffc

080032ec <HAL_TIM_OC_MspInit>:
 80032ec:	4770      	bx	lr
	...

080032f0 <TIM_Base_SetConfig>:
 80032f0:	4a22      	ldr	r2, [pc, #136]	; (800337c <TIM_Base_SetConfig+0x8c>)
 80032f2:	6803      	ldr	r3, [r0, #0]
 80032f4:	4290      	cmp	r0, r2
 80032f6:	d00e      	beq.n	8003316 <TIM_Base_SetConfig+0x26>
 80032f8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80032fc:	d00b      	beq.n	8003316 <TIM_Base_SetConfig+0x26>
 80032fe:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8003302:	4290      	cmp	r0, r2
 8003304:	d007      	beq.n	8003316 <TIM_Base_SetConfig+0x26>
 8003306:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800330a:	4290      	cmp	r0, r2
 800330c:	d003      	beq.n	8003316 <TIM_Base_SetConfig+0x26>
 800330e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003312:	4290      	cmp	r0, r2
 8003314:	d119      	bne.n	800334a <TIM_Base_SetConfig+0x5a>
 8003316:	684a      	ldr	r2, [r1, #4]
 8003318:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800331c:	4313      	orrs	r3, r2
 800331e:	4a17      	ldr	r2, [pc, #92]	; (800337c <TIM_Base_SetConfig+0x8c>)
 8003320:	4290      	cmp	r0, r2
 8003322:	d104      	bne.n	800332e <TIM_Base_SetConfig+0x3e>
 8003324:	68ca      	ldr	r2, [r1, #12]
 8003326:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800332a:	4313      	orrs	r3, r2
 800332c:	e018      	b.n	8003360 <TIM_Base_SetConfig+0x70>
 800332e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003332:	d0f7      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 8003334:	4a12      	ldr	r2, [pc, #72]	; (8003380 <TIM_Base_SetConfig+0x90>)
 8003336:	4290      	cmp	r0, r2
 8003338:	d0f4      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 800333a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800333e:	4290      	cmp	r0, r2
 8003340:	d0f0      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 8003342:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003346:	4290      	cmp	r0, r2
 8003348:	d0ec      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 800334a:	4a0e      	ldr	r2, [pc, #56]	; (8003384 <TIM_Base_SetConfig+0x94>)
 800334c:	4290      	cmp	r0, r2
 800334e:	d0e9      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 8003350:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003354:	4290      	cmp	r0, r2
 8003356:	d0e5      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 8003358:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800335c:	4290      	cmp	r0, r2
 800335e:	d0e1      	beq.n	8003324 <TIM_Base_SetConfig+0x34>
 8003360:	6003      	str	r3, [r0, #0]
 8003362:	688b      	ldr	r3, [r1, #8]
 8003364:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003366:	680b      	ldr	r3, [r1, #0]
 8003368:	6283      	str	r3, [r0, #40]	; 0x28
 800336a:	4b04      	ldr	r3, [pc, #16]	; (800337c <TIM_Base_SetConfig+0x8c>)
 800336c:	4298      	cmp	r0, r3
 800336e:	bf04      	itt	eq
 8003370:	690b      	ldreq	r3, [r1, #16]
 8003372:	6303      	streq	r3, [r0, #48]	; 0x30
 8003374:	2301      	movs	r3, #1
 8003376:	6143      	str	r3, [r0, #20]
 8003378:	4770      	bx	lr
 800337a:	bf00      	nop
 800337c:	40010000 	.word	0x40010000
 8003380:	40000400 	.word	0x40000400
 8003384:	40014000 	.word	0x40014000

08003388 <HAL_TIM_OC_Init>:
 8003388:	b510      	push	{r4, lr}
 800338a:	4604      	mov	r4, r0
 800338c:	b1a0      	cbz	r0, 80033b8 <HAL_TIM_OC_Init+0x30>
 800338e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003392:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003396:	b91b      	cbnz	r3, 80033a0 <HAL_TIM_OC_Init+0x18>
 8003398:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800339c:	f7ff ffa6 	bl	80032ec <HAL_TIM_OC_MspInit>
 80033a0:	2302      	movs	r3, #2
 80033a2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80033a6:	6820      	ldr	r0, [r4, #0]
 80033a8:	1d21      	adds	r1, r4, #4
 80033aa:	f7ff ffa1 	bl	80032f0 <TIM_Base_SetConfig>
 80033ae:	2301      	movs	r3, #1
 80033b0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80033b4:	2000      	movs	r0, #0
 80033b6:	bd10      	pop	{r4, pc}
 80033b8:	2001      	movs	r0, #1
 80033ba:	bd10      	pop	{r4, pc}

080033bc <TIM_CCxChannelCmd>:
 80033bc:	6a03      	ldr	r3, [r0, #32]
 80033be:	b510      	push	{r4, lr}
 80033c0:	2401      	movs	r4, #1
 80033c2:	408c      	lsls	r4, r1
 80033c4:	ea23 0304 	bic.w	r3, r3, r4
 80033c8:	6203      	str	r3, [r0, #32]
 80033ca:	6a03      	ldr	r3, [r0, #32]
 80033cc:	408a      	lsls	r2, r1
 80033ce:	431a      	orrs	r2, r3
 80033d0:	6202      	str	r2, [r0, #32]
 80033d2:	bd10      	pop	{r4, pc}

080033d4 <HAL_TIM_PWM_Start>:
 80033d4:	b510      	push	{r4, lr}
 80033d6:	4604      	mov	r4, r0
 80033d8:	2201      	movs	r2, #1
 80033da:	6800      	ldr	r0, [r0, #0]
 80033dc:	f7ff ffee 	bl	80033bc <TIM_CCxChannelCmd>
 80033e0:	6823      	ldr	r3, [r4, #0]
 80033e2:	4a06      	ldr	r2, [pc, #24]	; (80033fc <HAL_TIM_PWM_Start+0x28>)
 80033e4:	4293      	cmp	r3, r2
 80033e6:	bf02      	ittt	eq
 80033e8:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 80033ea:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 80033ee:	645a      	streq	r2, [r3, #68]	; 0x44
 80033f0:	681a      	ldr	r2, [r3, #0]
 80033f2:	f042 0201 	orr.w	r2, r2, #1
 80033f6:	601a      	str	r2, [r3, #0]
 80033f8:	2000      	movs	r0, #0
 80033fa:	bd10      	pop	{r4, pc}
 80033fc:	40010000 	.word	0x40010000

08003400 <HAL_TIM_OC_Start>:
 8003400:	f7ff bfe8 	b.w	80033d4 <HAL_TIM_PWM_Start>

08003404 <HAL_MspInit>:
 8003404:	4770      	bx	lr
	...

08003408 <HAL_Init>:
 8003408:	b508      	push	{r3, lr}
 800340a:	4b0a      	ldr	r3, [pc, #40]	; (8003434 <HAL_Init+0x2c>)
 800340c:	681a      	ldr	r2, [r3, #0]
 800340e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003412:	601a      	str	r2, [r3, #0]
 8003414:	681a      	ldr	r2, [r3, #0]
 8003416:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800341a:	601a      	str	r2, [r3, #0]
 800341c:	681a      	ldr	r2, [r3, #0]
 800341e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003422:	601a      	str	r2, [r3, #0]
 8003424:	200f      	movs	r0, #15
 8003426:	f7ff fa05 	bl	8002834 <HAL_InitTick>
 800342a:	f7ff ffeb 	bl	8003404 <HAL_MspInit>
 800342e:	2000      	movs	r0, #0
 8003430:	bd08      	pop	{r3, pc}
 8003432:	bf00      	nop
 8003434:	40023c00 	.word	0x40023c00

08003438 <HAL_IncTick>:
 8003438:	4a02      	ldr	r2, [pc, #8]	; (8003444 <HAL_IncTick+0xc>)
 800343a:	6813      	ldr	r3, [r2, #0]
 800343c:	3301      	adds	r3, #1
 800343e:	6013      	str	r3, [r2, #0]
 8003440:	4770      	bx	lr
 8003442:	bf00      	nop
 8003444:	200027c0 	.word	0x200027c0

08003448 <HAL_GetTick>:
 8003448:	4b01      	ldr	r3, [pc, #4]	; (8003450 <HAL_GetTick+0x8>)
 800344a:	6818      	ldr	r0, [r3, #0]
 800344c:	4770      	bx	lr
 800344e:	bf00      	nop
 8003450:	200027c0 	.word	0x200027c0

08003454 <UART_SetConfig>:
 8003454:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003458:	6806      	ldr	r6, [r0, #0]
 800345a:	68c2      	ldr	r2, [r0, #12]
 800345c:	6933      	ldr	r3, [r6, #16]
 800345e:	69c1      	ldr	r1, [r0, #28]
 8003460:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003464:	4313      	orrs	r3, r2
 8003466:	6133      	str	r3, [r6, #16]
 8003468:	4604      	mov	r4, r0
 800346a:	6883      	ldr	r3, [r0, #8]
 800346c:	6900      	ldr	r0, [r0, #16]
 800346e:	68f2      	ldr	r2, [r6, #12]
 8003470:	4303      	orrs	r3, r0
 8003472:	6960      	ldr	r0, [r4, #20]
 8003474:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8003478:	4303      	orrs	r3, r0
 800347a:	f022 020c 	bic.w	r2, r2, #12
 800347e:	430b      	orrs	r3, r1
 8003480:	4313      	orrs	r3, r2
 8003482:	60f3      	str	r3, [r6, #12]
 8003484:	6973      	ldr	r3, [r6, #20]
 8003486:	69a2      	ldr	r2, [r4, #24]
 8003488:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800348c:	4313      	orrs	r3, r2
 800348e:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8003492:	6173      	str	r3, [r6, #20]
 8003494:	4b7a      	ldr	r3, [pc, #488]	; (8003680 <UART_SetConfig+0x22c>)
 8003496:	d17c      	bne.n	8003592 <UART_SetConfig+0x13e>
 8003498:	429e      	cmp	r6, r3
 800349a:	d003      	beq.n	80034a4 <UART_SetConfig+0x50>
 800349c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80034a0:	429e      	cmp	r6, r3
 80034a2:	d144      	bne.n	800352e <UART_SetConfig+0xda>
 80034a4:	f000 fba8 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80034a8:	2519      	movs	r5, #25
 80034aa:	fb05 f300 	mul.w	r3, r5, r0
 80034ae:	6860      	ldr	r0, [r4, #4]
 80034b0:	f04f 0964 	mov.w	r9, #100	; 0x64
 80034b4:	0040      	lsls	r0, r0, #1
 80034b6:	fbb3 f3f0 	udiv	r3, r3, r0
 80034ba:	fbb3 f3f9 	udiv	r3, r3, r9
 80034be:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80034c2:	f000 fb99 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80034c6:	6863      	ldr	r3, [r4, #4]
 80034c8:	4368      	muls	r0, r5
 80034ca:	005b      	lsls	r3, r3, #1
 80034cc:	fbb0 f7f3 	udiv	r7, r0, r3
 80034d0:	f000 fb92 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80034d4:	6863      	ldr	r3, [r4, #4]
 80034d6:	4368      	muls	r0, r5
 80034d8:	005b      	lsls	r3, r3, #1
 80034da:	fbb0 f3f3 	udiv	r3, r0, r3
 80034de:	fbb3 f3f9 	udiv	r3, r3, r9
 80034e2:	fb09 7313 	mls	r3, r9, r3, r7
 80034e6:	00db      	lsls	r3, r3, #3
 80034e8:	3332      	adds	r3, #50	; 0x32
 80034ea:	fbb3 f3f9 	udiv	r3, r3, r9
 80034ee:	005b      	lsls	r3, r3, #1
 80034f0:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80034f4:	f000 fb80 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80034f8:	6862      	ldr	r2, [r4, #4]
 80034fa:	4368      	muls	r0, r5
 80034fc:	0052      	lsls	r2, r2, #1
 80034fe:	fbb0 faf2 	udiv	r10, r0, r2
 8003502:	f000 fb79 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 8003506:	6863      	ldr	r3, [r4, #4]
 8003508:	4368      	muls	r0, r5
 800350a:	005b      	lsls	r3, r3, #1
 800350c:	fbb0 f3f3 	udiv	r3, r0, r3
 8003510:	fbb3 f3f9 	udiv	r3, r3, r9
 8003514:	fb09 a313 	mls	r3, r9, r3, r10
 8003518:	00db      	lsls	r3, r3, #3
 800351a:	3332      	adds	r3, #50	; 0x32
 800351c:	fbb3 f3f9 	udiv	r3, r3, r9
 8003520:	f003 0307 	and.w	r3, r3, #7
 8003524:	4443      	add	r3, r8
 8003526:	443b      	add	r3, r7
 8003528:	60b3      	str	r3, [r6, #8]
 800352a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800352e:	f000 fb4b 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 8003532:	2519      	movs	r5, #25
 8003534:	fb05 f300 	mul.w	r3, r5, r0
 8003538:	6860      	ldr	r0, [r4, #4]
 800353a:	f04f 0964 	mov.w	r9, #100	; 0x64
 800353e:	0040      	lsls	r0, r0, #1
 8003540:	fbb3 f3f0 	udiv	r3, r3, r0
 8003544:	fbb3 f3f9 	udiv	r3, r3, r9
 8003548:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800354c:	f000 fb3c 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 8003550:	6863      	ldr	r3, [r4, #4]
 8003552:	4368      	muls	r0, r5
 8003554:	005b      	lsls	r3, r3, #1
 8003556:	fbb0 f7f3 	udiv	r7, r0, r3
 800355a:	f000 fb35 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 800355e:	6863      	ldr	r3, [r4, #4]
 8003560:	4368      	muls	r0, r5
 8003562:	005b      	lsls	r3, r3, #1
 8003564:	fbb0 f3f3 	udiv	r3, r0, r3
 8003568:	fbb3 f3f9 	udiv	r3, r3, r9
 800356c:	fb09 7313 	mls	r3, r9, r3, r7
 8003570:	00db      	lsls	r3, r3, #3
 8003572:	3332      	adds	r3, #50	; 0x32
 8003574:	fbb3 f3f9 	udiv	r3, r3, r9
 8003578:	005b      	lsls	r3, r3, #1
 800357a:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 800357e:	f000 fb23 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 8003582:	6862      	ldr	r2, [r4, #4]
 8003584:	4368      	muls	r0, r5
 8003586:	0052      	lsls	r2, r2, #1
 8003588:	fbb0 faf2 	udiv	r10, r0, r2
 800358c:	f000 fb1c 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 8003590:	e7b9      	b.n	8003506 <UART_SetConfig+0xb2>
 8003592:	429e      	cmp	r6, r3
 8003594:	d002      	beq.n	800359c <UART_SetConfig+0x148>
 8003596:	4b3b      	ldr	r3, [pc, #236]	; (8003684 <UART_SetConfig+0x230>)
 8003598:	429e      	cmp	r6, r3
 800359a:	d140      	bne.n	800361e <UART_SetConfig+0x1ca>
 800359c:	f000 fb2c 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80035a0:	6867      	ldr	r7, [r4, #4]
 80035a2:	2519      	movs	r5, #25
 80035a4:	f04f 0964 	mov.w	r9, #100	; 0x64
 80035a8:	fb05 f300 	mul.w	r3, r5, r0
 80035ac:	00bf      	lsls	r7, r7, #2
 80035ae:	fbb3 f3f7 	udiv	r3, r3, r7
 80035b2:	fbb3 f3f9 	udiv	r3, r3, r9
 80035b6:	011f      	lsls	r7, r3, #4
 80035b8:	f000 fb1e 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80035bc:	6863      	ldr	r3, [r4, #4]
 80035be:	4368      	muls	r0, r5
 80035c0:	009b      	lsls	r3, r3, #2
 80035c2:	fbb0 f8f3 	udiv	r8, r0, r3
 80035c6:	f000 fb17 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80035ca:	6863      	ldr	r3, [r4, #4]
 80035cc:	4368      	muls	r0, r5
 80035ce:	009b      	lsls	r3, r3, #2
 80035d0:	fbb0 f3f3 	udiv	r3, r0, r3
 80035d4:	fbb3 f3f9 	udiv	r3, r3, r9
 80035d8:	fb09 8313 	mls	r3, r9, r3, r8
 80035dc:	011b      	lsls	r3, r3, #4
 80035de:	3332      	adds	r3, #50	; 0x32
 80035e0:	fbb3 f3f9 	udiv	r3, r3, r9
 80035e4:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 80035e8:	f000 fb06 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80035ec:	6862      	ldr	r2, [r4, #4]
 80035ee:	4368      	muls	r0, r5
 80035f0:	0092      	lsls	r2, r2, #2
 80035f2:	fbb0 faf2 	udiv	r10, r0, r2
 80035f6:	f000 faff 	bl	8003bf8 <HAL_RCC_GetPCLK2Freq>
 80035fa:	6863      	ldr	r3, [r4, #4]
 80035fc:	4368      	muls	r0, r5
 80035fe:	009b      	lsls	r3, r3, #2
 8003600:	fbb0 f3f3 	udiv	r3, r0, r3
 8003604:	fbb3 f3f9 	udiv	r3, r3, r9
 8003608:	fb09 a313 	mls	r3, r9, r3, r10
 800360c:	011b      	lsls	r3, r3, #4
 800360e:	3332      	adds	r3, #50	; 0x32
 8003610:	fbb3 f3f9 	udiv	r3, r3, r9
 8003614:	f003 030f 	and.w	r3, r3, #15
 8003618:	ea43 0308 	orr.w	r3, r3, r8
 800361c:	e783      	b.n	8003526 <UART_SetConfig+0xd2>
 800361e:	f000 fad3 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 8003622:	6867      	ldr	r7, [r4, #4]
 8003624:	2519      	movs	r5, #25
 8003626:	f04f 0964 	mov.w	r9, #100	; 0x64
 800362a:	fb05 f300 	mul.w	r3, r5, r0
 800362e:	00bf      	lsls	r7, r7, #2
 8003630:	fbb3 f3f7 	udiv	r3, r3, r7
 8003634:	fbb3 f3f9 	udiv	r3, r3, r9
 8003638:	011f      	lsls	r7, r3, #4
 800363a:	f000 fac5 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 800363e:	6863      	ldr	r3, [r4, #4]
 8003640:	4368      	muls	r0, r5
 8003642:	009b      	lsls	r3, r3, #2
 8003644:	fbb0 f8f3 	udiv	r8, r0, r3
 8003648:	f000 fabe 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 800364c:	6863      	ldr	r3, [r4, #4]
 800364e:	4368      	muls	r0, r5
 8003650:	009b      	lsls	r3, r3, #2
 8003652:	fbb0 f3f3 	udiv	r3, r0, r3
 8003656:	fbb3 f3f9 	udiv	r3, r3, r9
 800365a:	fb09 8313 	mls	r3, r9, r3, r8
 800365e:	011b      	lsls	r3, r3, #4
 8003660:	3332      	adds	r3, #50	; 0x32
 8003662:	fbb3 f3f9 	udiv	r3, r3, r9
 8003666:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 800366a:	f000 faad 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 800366e:	6862      	ldr	r2, [r4, #4]
 8003670:	4368      	muls	r0, r5
 8003672:	0092      	lsls	r2, r2, #2
 8003674:	fbb0 faf2 	udiv	r10, r0, r2
 8003678:	f000 faa6 	bl	8003bc8 <HAL_RCC_GetPCLK1Freq>
 800367c:	e7bd      	b.n	80035fa <UART_SetConfig+0x1a6>
 800367e:	bf00      	nop
 8003680:	40011000 	.word	0x40011000
 8003684:	40011400 	.word	0x40011400

08003688 <HAL_UART_MspInit>:
 8003688:	4770      	bx	lr

0800368a <HAL_UART_Init>:
 800368a:	b510      	push	{r4, lr}
 800368c:	4604      	mov	r4, r0
 800368e:	b340      	cbz	r0, 80036e2 <HAL_UART_Init+0x58>
 8003690:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003694:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003698:	b91b      	cbnz	r3, 80036a2 <HAL_UART_Init+0x18>
 800369a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800369e:	f7ff fff3 	bl	8003688 <HAL_UART_MspInit>
 80036a2:	6822      	ldr	r2, [r4, #0]
 80036a4:	2324      	movs	r3, #36	; 0x24
 80036a6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80036aa:	68d3      	ldr	r3, [r2, #12]
 80036ac:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80036b0:	60d3      	str	r3, [r2, #12]
 80036b2:	4620      	mov	r0, r4
 80036b4:	f7ff fece 	bl	8003454 <UART_SetConfig>
 80036b8:	6823      	ldr	r3, [r4, #0]
 80036ba:	691a      	ldr	r2, [r3, #16]
 80036bc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80036c0:	611a      	str	r2, [r3, #16]
 80036c2:	695a      	ldr	r2, [r3, #20]
 80036c4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80036c8:	615a      	str	r2, [r3, #20]
 80036ca:	68da      	ldr	r2, [r3, #12]
 80036cc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80036d0:	60da      	str	r2, [r3, #12]
 80036d2:	2000      	movs	r0, #0
 80036d4:	2320      	movs	r3, #32
 80036d6:	63e0      	str	r0, [r4, #60]	; 0x3c
 80036d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80036dc:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 80036e0:	bd10      	pop	{r4, pc}
 80036e2:	2001      	movs	r0, #1
 80036e4:	bd10      	pop	{r4, pc}
	...

080036e8 <HAL_PWR_EnterSLEEPMode>:
 80036e8:	4a06      	ldr	r2, [pc, #24]	; (8003704 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80036ea:	6913      	ldr	r3, [r2, #16]
 80036ec:	2901      	cmp	r1, #1
 80036ee:	f023 0304 	bic.w	r3, r3, #4
 80036f2:	6113      	str	r3, [r2, #16]
 80036f4:	d101      	bne.n	80036fa <HAL_PWR_EnterSLEEPMode+0x12>
 80036f6:	bf30      	wfi
 80036f8:	4770      	bx	lr
 80036fa:	bf40      	sev
 80036fc:	bf20      	wfe
 80036fe:	bf20      	wfe
 8003700:	4770      	bx	lr
 8003702:	bf00      	nop
 8003704:	e000ed00 	.word	0xe000ed00

08003708 <HAL_RCC_OscConfig>:
 8003708:	6803      	ldr	r3, [r0, #0]
 800370a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800370c:	07dd      	lsls	r5, r3, #31
 800370e:	4604      	mov	r4, r0
 8003710:	d438      	bmi.n	8003784 <HAL_RCC_OscConfig+0x7c>
 8003712:	6823      	ldr	r3, [r4, #0]
 8003714:	0798      	lsls	r0, r3, #30
 8003716:	d471      	bmi.n	80037fc <HAL_RCC_OscConfig+0xf4>
 8003718:	6823      	ldr	r3, [r4, #0]
 800371a:	071e      	lsls	r6, r3, #28
 800371c:	f100 80bd 	bmi.w	800389a <HAL_RCC_OscConfig+0x192>
 8003720:	6823      	ldr	r3, [r4, #0]
 8003722:	075d      	lsls	r5, r3, #29
 8003724:	d528      	bpl.n	8003778 <HAL_RCC_OscConfig+0x70>
 8003726:	2300      	movs	r3, #0
 8003728:	9301      	str	r3, [sp, #4]
 800372a:	4ba8      	ldr	r3, [pc, #672]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 800372c:	4da8      	ldr	r5, [pc, #672]	; (80039d0 <HAL_RCC_OscConfig+0x2c8>)
 800372e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003730:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003734:	641a      	str	r2, [r3, #64]	; 0x40
 8003736:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003738:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800373c:	9301      	str	r3, [sp, #4]
 800373e:	9b01      	ldr	r3, [sp, #4]
 8003740:	682b      	ldr	r3, [r5, #0]
 8003742:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003746:	602b      	str	r3, [r5, #0]
 8003748:	f7ff fe7e 	bl	8003448 <HAL_GetTick>
 800374c:	4606      	mov	r6, r0
 800374e:	682b      	ldr	r3, [r5, #0]
 8003750:	05da      	lsls	r2, r3, #23
 8003752:	f140 80c4 	bpl.w	80038de <HAL_RCC_OscConfig+0x1d6>
 8003756:	4b9f      	ldr	r3, [pc, #636]	; (80039d4 <HAL_RCC_OscConfig+0x2cc>)
 8003758:	7a22      	ldrb	r2, [r4, #8]
 800375a:	701a      	strb	r2, [r3, #0]
 800375c:	68a3      	ldr	r3, [r4, #8]
 800375e:	2b00      	cmp	r3, #0
 8003760:	f000 80cb 	beq.w	80038fa <HAL_RCC_OscConfig+0x1f2>
 8003764:	f7ff fe70 	bl	8003448 <HAL_GetTick>
 8003768:	4d98      	ldr	r5, [pc, #608]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 800376a:	4606      	mov	r6, r0
 800376c:	f241 3788 	movw	r7, #5000	; 0x1388
 8003770:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003772:	079b      	lsls	r3, r3, #30
 8003774:	f140 80ba 	bpl.w	80038ec <HAL_RCC_OscConfig+0x1e4>
 8003778:	69a2      	ldr	r2, [r4, #24]
 800377a:	2a00      	cmp	r2, #0
 800377c:	f040 80cd 	bne.w	800391a <HAL_RCC_OscConfig+0x212>
 8003780:	2000      	movs	r0, #0
 8003782:	e015      	b.n	80037b0 <HAL_RCC_OscConfig+0xa8>
 8003784:	4b91      	ldr	r3, [pc, #580]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 8003786:	689a      	ldr	r2, [r3, #8]
 8003788:	f002 020c 	and.w	r2, r2, #12
 800378c:	2a04      	cmp	r2, #4
 800378e:	d007      	beq.n	80037a0 <HAL_RCC_OscConfig+0x98>
 8003790:	689a      	ldr	r2, [r3, #8]
 8003792:	f002 020c 	and.w	r2, r2, #12
 8003796:	2a08      	cmp	r2, #8
 8003798:	d10c      	bne.n	80037b4 <HAL_RCC_OscConfig+0xac>
 800379a:	685b      	ldr	r3, [r3, #4]
 800379c:	0259      	lsls	r1, r3, #9
 800379e:	d509      	bpl.n	80037b4 <HAL_RCC_OscConfig+0xac>
 80037a0:	4b8a      	ldr	r3, [pc, #552]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	039a      	lsls	r2, r3, #14
 80037a6:	d5b4      	bpl.n	8003712 <HAL_RCC_OscConfig+0xa>
 80037a8:	6863      	ldr	r3, [r4, #4]
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d1b1      	bne.n	8003712 <HAL_RCC_OscConfig+0xa>
 80037ae:	2001      	movs	r0, #1
 80037b0:	b003      	add	sp, #12
 80037b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037b4:	4b88      	ldr	r3, [pc, #544]	; (80039d8 <HAL_RCC_OscConfig+0x2d0>)
 80037b6:	7922      	ldrb	r2, [r4, #4]
 80037b8:	701a      	strb	r2, [r3, #0]
 80037ba:	6863      	ldr	r3, [r4, #4]
 80037bc:	b17b      	cbz	r3, 80037de <HAL_RCC_OscConfig+0xd6>
 80037be:	f7ff fe43 	bl	8003448 <HAL_GetTick>
 80037c2:	4d82      	ldr	r5, [pc, #520]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 80037c4:	4606      	mov	r6, r0
 80037c6:	f241 3788 	movw	r7, #5000	; 0x1388
 80037ca:	682b      	ldr	r3, [r5, #0]
 80037cc:	039b      	lsls	r3, r3, #14
 80037ce:	d4a0      	bmi.n	8003712 <HAL_RCC_OscConfig+0xa>
 80037d0:	f7ff fe3a 	bl	8003448 <HAL_GetTick>
 80037d4:	1b80      	subs	r0, r0, r6
 80037d6:	42b8      	cmp	r0, r7
 80037d8:	d9f7      	bls.n	80037ca <HAL_RCC_OscConfig+0xc2>
 80037da:	2003      	movs	r0, #3
 80037dc:	e7e8      	b.n	80037b0 <HAL_RCC_OscConfig+0xa8>
 80037de:	f7ff fe33 	bl	8003448 <HAL_GetTick>
 80037e2:	4d7a      	ldr	r5, [pc, #488]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 80037e4:	4606      	mov	r6, r0
 80037e6:	f241 3788 	movw	r7, #5000	; 0x1388
 80037ea:	682b      	ldr	r3, [r5, #0]
 80037ec:	0398      	lsls	r0, r3, #14
 80037ee:	d590      	bpl.n	8003712 <HAL_RCC_OscConfig+0xa>
 80037f0:	f7ff fe2a 	bl	8003448 <HAL_GetTick>
 80037f4:	1b80      	subs	r0, r0, r6
 80037f6:	42b8      	cmp	r0, r7
 80037f8:	d9f7      	bls.n	80037ea <HAL_RCC_OscConfig+0xe2>
 80037fa:	e7ee      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80037fc:	4b73      	ldr	r3, [pc, #460]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 80037fe:	689a      	ldr	r2, [r3, #8]
 8003800:	f012 0f0c 	tst.w	r2, #12
 8003804:	d007      	beq.n	8003816 <HAL_RCC_OscConfig+0x10e>
 8003806:	689a      	ldr	r2, [r3, #8]
 8003808:	f002 020c 	and.w	r2, r2, #12
 800380c:	2a08      	cmp	r2, #8
 800380e:	d116      	bne.n	800383e <HAL_RCC_OscConfig+0x136>
 8003810:	685b      	ldr	r3, [r3, #4]
 8003812:	0259      	lsls	r1, r3, #9
 8003814:	d413      	bmi.n	800383e <HAL_RCC_OscConfig+0x136>
 8003816:	4b6d      	ldr	r3, [pc, #436]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 8003818:	681a      	ldr	r2, [r3, #0]
 800381a:	0792      	lsls	r2, r2, #30
 800381c:	d502      	bpl.n	8003824 <HAL_RCC_OscConfig+0x11c>
 800381e:	68e2      	ldr	r2, [r4, #12]
 8003820:	2a01      	cmp	r2, #1
 8003822:	d1c4      	bne.n	80037ae <HAL_RCC_OscConfig+0xa6>
 8003824:	6818      	ldr	r0, [r3, #0]
 8003826:	22f8      	movs	r2, #248	; 0xf8
 8003828:	fa92 f2a2 	rbit	r2, r2
 800382c:	fab2 f182 	clz	r1, r2
 8003830:	6922      	ldr	r2, [r4, #16]
 8003832:	408a      	lsls	r2, r1
 8003834:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8003838:	430a      	orrs	r2, r1
 800383a:	601a      	str	r2, [r3, #0]
 800383c:	e76c      	b.n	8003718 <HAL_RCC_OscConfig+0x10>
 800383e:	68e2      	ldr	r2, [r4, #12]
 8003840:	4b66      	ldr	r3, [pc, #408]	; (80039dc <HAL_RCC_OscConfig+0x2d4>)
 8003842:	b1da      	cbz	r2, 800387c <HAL_RCC_OscConfig+0x174>
 8003844:	2201      	movs	r2, #1
 8003846:	601a      	str	r2, [r3, #0]
 8003848:	f7ff fdfe 	bl	8003448 <HAL_GetTick>
 800384c:	4d5f      	ldr	r5, [pc, #380]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 800384e:	4606      	mov	r6, r0
 8003850:	682b      	ldr	r3, [r5, #0]
 8003852:	079b      	lsls	r3, r3, #30
 8003854:	d50c      	bpl.n	8003870 <HAL_RCC_OscConfig+0x168>
 8003856:	6829      	ldr	r1, [r5, #0]
 8003858:	23f8      	movs	r3, #248	; 0xf8
 800385a:	fa93 f3a3 	rbit	r3, r3
 800385e:	fab3 f283 	clz	r2, r3
 8003862:	6923      	ldr	r3, [r4, #16]
 8003864:	4093      	lsls	r3, r2
 8003866:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 800386a:	4313      	orrs	r3, r2
 800386c:	602b      	str	r3, [r5, #0]
 800386e:	e753      	b.n	8003718 <HAL_RCC_OscConfig+0x10>
 8003870:	f7ff fdea 	bl	8003448 <HAL_GetTick>
 8003874:	1b80      	subs	r0, r0, r6
 8003876:	2802      	cmp	r0, #2
 8003878:	d9ea      	bls.n	8003850 <HAL_RCC_OscConfig+0x148>
 800387a:	e7ae      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 800387c:	601a      	str	r2, [r3, #0]
 800387e:	f7ff fde3 	bl	8003448 <HAL_GetTick>
 8003882:	4d52      	ldr	r5, [pc, #328]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 8003884:	4606      	mov	r6, r0
 8003886:	682b      	ldr	r3, [r5, #0]
 8003888:	079f      	lsls	r7, r3, #30
 800388a:	f57f af45 	bpl.w	8003718 <HAL_RCC_OscConfig+0x10>
 800388e:	f7ff fddb 	bl	8003448 <HAL_GetTick>
 8003892:	1b80      	subs	r0, r0, r6
 8003894:	2802      	cmp	r0, #2
 8003896:	d9f6      	bls.n	8003886 <HAL_RCC_OscConfig+0x17e>
 8003898:	e79f      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 800389a:	6962      	ldr	r2, [r4, #20]
 800389c:	4b50      	ldr	r3, [pc, #320]	; (80039e0 <HAL_RCC_OscConfig+0x2d8>)
 800389e:	b17a      	cbz	r2, 80038c0 <HAL_RCC_OscConfig+0x1b8>
 80038a0:	2201      	movs	r2, #1
 80038a2:	601a      	str	r2, [r3, #0]
 80038a4:	f7ff fdd0 	bl	8003448 <HAL_GetTick>
 80038a8:	4d48      	ldr	r5, [pc, #288]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 80038aa:	4606      	mov	r6, r0
 80038ac:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80038ae:	0798      	lsls	r0, r3, #30
 80038b0:	f53f af36 	bmi.w	8003720 <HAL_RCC_OscConfig+0x18>
 80038b4:	f7ff fdc8 	bl	8003448 <HAL_GetTick>
 80038b8:	1b80      	subs	r0, r0, r6
 80038ba:	2802      	cmp	r0, #2
 80038bc:	d9f6      	bls.n	80038ac <HAL_RCC_OscConfig+0x1a4>
 80038be:	e78c      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80038c0:	601a      	str	r2, [r3, #0]
 80038c2:	f7ff fdc1 	bl	8003448 <HAL_GetTick>
 80038c6:	4d41      	ldr	r5, [pc, #260]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 80038c8:	4606      	mov	r6, r0
 80038ca:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80038cc:	0799      	lsls	r1, r3, #30
 80038ce:	f57f af27 	bpl.w	8003720 <HAL_RCC_OscConfig+0x18>
 80038d2:	f7ff fdb9 	bl	8003448 <HAL_GetTick>
 80038d6:	1b80      	subs	r0, r0, r6
 80038d8:	2802      	cmp	r0, #2
 80038da:	d9f6      	bls.n	80038ca <HAL_RCC_OscConfig+0x1c2>
 80038dc:	e77d      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80038de:	f7ff fdb3 	bl	8003448 <HAL_GetTick>
 80038e2:	1b80      	subs	r0, r0, r6
 80038e4:	2802      	cmp	r0, #2
 80038e6:	f67f af32 	bls.w	800374e <HAL_RCC_OscConfig+0x46>
 80038ea:	e776      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80038ec:	f7ff fdac 	bl	8003448 <HAL_GetTick>
 80038f0:	1b80      	subs	r0, r0, r6
 80038f2:	42b8      	cmp	r0, r7
 80038f4:	f67f af3c 	bls.w	8003770 <HAL_RCC_OscConfig+0x68>
 80038f8:	e76f      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80038fa:	f7ff fda5 	bl	8003448 <HAL_GetTick>
 80038fe:	4d33      	ldr	r5, [pc, #204]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 8003900:	4606      	mov	r6, r0
 8003902:	f241 3788 	movw	r7, #5000	; 0x1388
 8003906:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003908:	0798      	lsls	r0, r3, #30
 800390a:	f57f af35 	bpl.w	8003778 <HAL_RCC_OscConfig+0x70>
 800390e:	f7ff fd9b 	bl	8003448 <HAL_GetTick>
 8003912:	1b80      	subs	r0, r0, r6
 8003914:	42b8      	cmp	r0, r7
 8003916:	d9f6      	bls.n	8003906 <HAL_RCC_OscConfig+0x1fe>
 8003918:	e75f      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 800391a:	4d2c      	ldr	r5, [pc, #176]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 800391c:	68ab      	ldr	r3, [r5, #8]
 800391e:	f003 030c 	and.w	r3, r3, #12
 8003922:	2b08      	cmp	r3, #8
 8003924:	f43f af43 	beq.w	80037ae <HAL_RCC_OscConfig+0xa6>
 8003928:	4e2e      	ldr	r6, [pc, #184]	; (80039e4 <HAL_RCC_OscConfig+0x2dc>)
 800392a:	2300      	movs	r3, #0
 800392c:	2a02      	cmp	r2, #2
 800392e:	6033      	str	r3, [r6, #0]
 8003930:	d13e      	bne.n	80039b0 <HAL_RCC_OscConfig+0x2a8>
 8003932:	f7ff fd89 	bl	8003448 <HAL_GetTick>
 8003936:	4607      	mov	r7, r0
 8003938:	682b      	ldr	r3, [r5, #0]
 800393a:	0199      	lsls	r1, r3, #6
 800393c:	d432      	bmi.n	80039a4 <HAL_RCC_OscConfig+0x29c>
 800393e:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8003942:	fa97 f7a7 	rbit	r7, r7
 8003946:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800394a:	fab7 f787 	clz	r7, r7
 800394e:	fa92 f2a2 	rbit	r2, r2
 8003952:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 8003956:	fab2 f082 	clz	r0, r2
 800395a:	fa91 f1a1 	rbit	r1, r1
 800395e:	6a22      	ldr	r2, [r4, #32]
 8003960:	69e3      	ldr	r3, [r4, #28]
 8003962:	4313      	orrs	r3, r2
 8003964:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003966:	fa02 f707 	lsl.w	r7, r2, r7
 800396a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800396c:	0852      	lsrs	r2, r2, #1
 800396e:	3a01      	subs	r2, #1
 8003970:	4082      	lsls	r2, r0
 8003972:	433b      	orrs	r3, r7
 8003974:	4313      	orrs	r3, r2
 8003976:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003978:	4c14      	ldr	r4, [pc, #80]	; (80039cc <HAL_RCC_OscConfig+0x2c4>)
 800397a:	fab1 f181 	clz	r1, r1
 800397e:	fa02 f101 	lsl.w	r1, r2, r1
 8003982:	430b      	orrs	r3, r1
 8003984:	606b      	str	r3, [r5, #4]
 8003986:	2301      	movs	r3, #1
 8003988:	6033      	str	r3, [r6, #0]
 800398a:	f7ff fd5d 	bl	8003448 <HAL_GetTick>
 800398e:	4605      	mov	r5, r0
 8003990:	6823      	ldr	r3, [r4, #0]
 8003992:	019a      	lsls	r2, r3, #6
 8003994:	f53f aef4 	bmi.w	8003780 <HAL_RCC_OscConfig+0x78>
 8003998:	f7ff fd56 	bl	8003448 <HAL_GetTick>
 800399c:	1b40      	subs	r0, r0, r5
 800399e:	2802      	cmp	r0, #2
 80039a0:	d9f6      	bls.n	8003990 <HAL_RCC_OscConfig+0x288>
 80039a2:	e71a      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80039a4:	f7ff fd50 	bl	8003448 <HAL_GetTick>
 80039a8:	1bc0      	subs	r0, r0, r7
 80039aa:	2802      	cmp	r0, #2
 80039ac:	d9c4      	bls.n	8003938 <HAL_RCC_OscConfig+0x230>
 80039ae:	e714      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80039b0:	f7ff fd4a 	bl	8003448 <HAL_GetTick>
 80039b4:	4604      	mov	r4, r0
 80039b6:	682b      	ldr	r3, [r5, #0]
 80039b8:	019b      	lsls	r3, r3, #6
 80039ba:	f57f aee1 	bpl.w	8003780 <HAL_RCC_OscConfig+0x78>
 80039be:	f7ff fd43 	bl	8003448 <HAL_GetTick>
 80039c2:	1b00      	subs	r0, r0, r4
 80039c4:	2802      	cmp	r0, #2
 80039c6:	d9f6      	bls.n	80039b6 <HAL_RCC_OscConfig+0x2ae>
 80039c8:	e707      	b.n	80037da <HAL_RCC_OscConfig+0xd2>
 80039ca:	bf00      	nop
 80039cc:	40023800 	.word	0x40023800
 80039d0:	40007000 	.word	0x40007000
 80039d4:	40023870 	.word	0x40023870
 80039d8:	40023802 	.word	0x40023802
 80039dc:	42470000 	.word	0x42470000
 80039e0:	42470e80 	.word	0x42470e80
 80039e4:	42470060 	.word	0x42470060

080039e8 <HAL_RCC_GetSysClockFreq>:
 80039e8:	4a19      	ldr	r2, [pc, #100]	; (8003a50 <HAL_RCC_GetSysClockFreq+0x68>)
 80039ea:	6893      	ldr	r3, [r2, #8]
 80039ec:	f003 030c 	and.w	r3, r3, #12
 80039f0:	2b04      	cmp	r3, #4
 80039f2:	b510      	push	{r4, lr}
 80039f4:	d003      	beq.n	80039fe <HAL_RCC_GetSysClockFreq+0x16>
 80039f6:	2b08      	cmp	r3, #8
 80039f8:	d003      	beq.n	8003a02 <HAL_RCC_GetSysClockFreq+0x1a>
 80039fa:	4816      	ldr	r0, [pc, #88]	; (8003a54 <HAL_RCC_GetSysClockFreq+0x6c>)
 80039fc:	bd10      	pop	{r4, pc}
 80039fe:	4816      	ldr	r0, [pc, #88]	; (8003a58 <HAL_RCC_GetSysClockFreq+0x70>)
 8003a00:	bd10      	pop	{r4, pc}
 8003a02:	6851      	ldr	r1, [r2, #4]
 8003a04:	6853      	ldr	r3, [r2, #4]
 8003a06:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8003a0a:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8003a0e:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 8003a12:	6853      	ldr	r3, [r2, #4]
 8003a14:	fa94 f0a4 	rbit	r0, r4
 8003a18:	fab0 f080 	clz	r0, r0
 8003a1c:	ea03 0304 	and.w	r3, r3, r4
 8003a20:	fa23 f300 	lsr.w	r3, r3, r0
 8003a24:	bf14      	ite	ne
 8003a26:	480c      	ldrne	r0, [pc, #48]	; (8003a58 <HAL_RCC_GetSysClockFreq+0x70>)
 8003a28:	480a      	ldreq	r0, [pc, #40]	; (8003a54 <HAL_RCC_GetSysClockFreq+0x6c>)
 8003a2a:	fbb0 f0f1 	udiv	r0, r0, r1
 8003a2e:	4358      	muls	r0, r3
 8003a30:	4b07      	ldr	r3, [pc, #28]	; (8003a50 <HAL_RCC_GetSysClockFreq+0x68>)
 8003a32:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8003a36:	685b      	ldr	r3, [r3, #4]
 8003a38:	fa92 f2a2 	rbit	r2, r2
 8003a3c:	fab2 f282 	clz	r2, r2
 8003a40:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003a44:	40d3      	lsrs	r3, r2
 8003a46:	3301      	adds	r3, #1
 8003a48:	005b      	lsls	r3, r3, #1
 8003a4a:	fbb0 f0f3 	udiv	r0, r0, r3
 8003a4e:	bd10      	pop	{r4, pc}
 8003a50:	40023800 	.word	0x40023800
 8003a54:	00f42400 	.word	0x00f42400
 8003a58:	007a1200 	.word	0x007a1200

08003a5c <HAL_RCC_ClockConfig>:
 8003a5c:	4b56      	ldr	r3, [pc, #344]	; (8003bb8 <HAL_RCC_ClockConfig+0x15c>)
 8003a5e:	681a      	ldr	r2, [r3, #0]
 8003a60:	f002 020f 	and.w	r2, r2, #15
 8003a64:	428a      	cmp	r2, r1
 8003a66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a6a:	4605      	mov	r5, r0
 8003a6c:	460e      	mov	r6, r1
 8003a6e:	d330      	bcc.n	8003ad2 <HAL_RCC_ClockConfig+0x76>
 8003a70:	682a      	ldr	r2, [r5, #0]
 8003a72:	0794      	lsls	r4, r2, #30
 8003a74:	d437      	bmi.n	8003ae6 <HAL_RCC_ClockConfig+0x8a>
 8003a76:	07d0      	lsls	r0, r2, #31
 8003a78:	d43d      	bmi.n	8003af6 <HAL_RCC_ClockConfig+0x9a>
 8003a7a:	4b4f      	ldr	r3, [pc, #316]	; (8003bb8 <HAL_RCC_ClockConfig+0x15c>)
 8003a7c:	681a      	ldr	r2, [r3, #0]
 8003a7e:	f002 020f 	and.w	r2, r2, #15
 8003a82:	4296      	cmp	r6, r2
 8003a84:	f0c0 8088 	bcc.w	8003b98 <HAL_RCC_ClockConfig+0x13c>
 8003a88:	682a      	ldr	r2, [r5, #0]
 8003a8a:	0751      	lsls	r1, r2, #29
 8003a8c:	f100 808c 	bmi.w	8003ba8 <HAL_RCC_ClockConfig+0x14c>
 8003a90:	0713      	lsls	r3, r2, #28
 8003a92:	d507      	bpl.n	8003aa4 <HAL_RCC_ClockConfig+0x48>
 8003a94:	4a49      	ldr	r2, [pc, #292]	; (8003bbc <HAL_RCC_ClockConfig+0x160>)
 8003a96:	6929      	ldr	r1, [r5, #16]
 8003a98:	6893      	ldr	r3, [r2, #8]
 8003a9a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8003a9e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8003aa2:	6093      	str	r3, [r2, #8]
 8003aa4:	f7ff ffa0 	bl	80039e8 <HAL_RCC_GetSysClockFreq>
 8003aa8:	4b44      	ldr	r3, [pc, #272]	; (8003bbc <HAL_RCC_ClockConfig+0x160>)
 8003aaa:	22f0      	movs	r2, #240	; 0xf0
 8003aac:	689b      	ldr	r3, [r3, #8]
 8003aae:	fa92 f2a2 	rbit	r2, r2
 8003ab2:	fab2 f282 	clz	r2, r2
 8003ab6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003aba:	40d3      	lsrs	r3, r2
 8003abc:	4a40      	ldr	r2, [pc, #256]	; (8003bc0 <HAL_RCC_ClockConfig+0x164>)
 8003abe:	5cd3      	ldrb	r3, [r2, r3]
 8003ac0:	40d8      	lsrs	r0, r3
 8003ac2:	4b40      	ldr	r3, [pc, #256]	; (8003bc4 <HAL_RCC_ClockConfig+0x168>)
 8003ac4:	6018      	str	r0, [r3, #0]
 8003ac6:	200f      	movs	r0, #15
 8003ac8:	f7fe feb4 	bl	8002834 <HAL_InitTick>
 8003acc:	2000      	movs	r0, #0
 8003ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ad2:	b2ca      	uxtb	r2, r1
 8003ad4:	701a      	strb	r2, [r3, #0]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	f003 030f 	and.w	r3, r3, #15
 8003adc:	4299      	cmp	r1, r3
 8003ade:	d0c7      	beq.n	8003a70 <HAL_RCC_ClockConfig+0x14>
 8003ae0:	2001      	movs	r0, #1
 8003ae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ae6:	4935      	ldr	r1, [pc, #212]	; (8003bbc <HAL_RCC_ClockConfig+0x160>)
 8003ae8:	68a8      	ldr	r0, [r5, #8]
 8003aea:	688b      	ldr	r3, [r1, #8]
 8003aec:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003af0:	4303      	orrs	r3, r0
 8003af2:	608b      	str	r3, [r1, #8]
 8003af4:	e7bf      	b.n	8003a76 <HAL_RCC_ClockConfig+0x1a>
 8003af6:	686a      	ldr	r2, [r5, #4]
 8003af8:	4b30      	ldr	r3, [pc, #192]	; (8003bbc <HAL_RCC_ClockConfig+0x160>)
 8003afa:	2a01      	cmp	r2, #1
 8003afc:	d11e      	bne.n	8003b3c <HAL_RCC_ClockConfig+0xe0>
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8003b04:	d0ec      	beq.n	8003ae0 <HAL_RCC_ClockConfig+0x84>
 8003b06:	4c2d      	ldr	r4, [pc, #180]	; (8003bbc <HAL_RCC_ClockConfig+0x160>)
 8003b08:	68a3      	ldr	r3, [r4, #8]
 8003b0a:	f023 0303 	bic.w	r3, r3, #3
 8003b0e:	4313      	orrs	r3, r2
 8003b10:	60a3      	str	r3, [r4, #8]
 8003b12:	f7ff fc99 	bl	8003448 <HAL_GetTick>
 8003b16:	686b      	ldr	r3, [r5, #4]
 8003b18:	2b01      	cmp	r3, #1
 8003b1a:	4607      	mov	r7, r0
 8003b1c:	f241 3888 	movw	r8, #5000	; 0x1388
 8003b20:	d116      	bne.n	8003b50 <HAL_RCC_ClockConfig+0xf4>
 8003b22:	68a3      	ldr	r3, [r4, #8]
 8003b24:	f003 030c 	and.w	r3, r3, #12
 8003b28:	2b04      	cmp	r3, #4
 8003b2a:	d0a6      	beq.n	8003a7a <HAL_RCC_ClockConfig+0x1e>
 8003b2c:	f7ff fc8c 	bl	8003448 <HAL_GetTick>
 8003b30:	1bc0      	subs	r0, r0, r7
 8003b32:	4540      	cmp	r0, r8
 8003b34:	d9f5      	bls.n	8003b22 <HAL_RCC_ClockConfig+0xc6>
 8003b36:	2003      	movs	r0, #3
 8003b38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b3c:	1e91      	subs	r1, r2, #2
 8003b3e:	2901      	cmp	r1, #1
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	d802      	bhi.n	8003b4a <HAL_RCC_ClockConfig+0xee>
 8003b44:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003b48:	e7dc      	b.n	8003b04 <HAL_RCC_ClockConfig+0xa8>
 8003b4a:	f013 0f02 	tst.w	r3, #2
 8003b4e:	e7d9      	b.n	8003b04 <HAL_RCC_ClockConfig+0xa8>
 8003b50:	2b02      	cmp	r3, #2
 8003b52:	d10a      	bne.n	8003b6a <HAL_RCC_ClockConfig+0x10e>
 8003b54:	68a3      	ldr	r3, [r4, #8]
 8003b56:	f003 030c 	and.w	r3, r3, #12
 8003b5a:	2b08      	cmp	r3, #8
 8003b5c:	d08d      	beq.n	8003a7a <HAL_RCC_ClockConfig+0x1e>
 8003b5e:	f7ff fc73 	bl	8003448 <HAL_GetTick>
 8003b62:	1bc0      	subs	r0, r0, r7
 8003b64:	4540      	cmp	r0, r8
 8003b66:	d9f5      	bls.n	8003b54 <HAL_RCC_ClockConfig+0xf8>
 8003b68:	e7e5      	b.n	8003b36 <HAL_RCC_ClockConfig+0xda>
 8003b6a:	2b03      	cmp	r3, #3
 8003b6c:	d10f      	bne.n	8003b8e <HAL_RCC_ClockConfig+0x132>
 8003b6e:	68a3      	ldr	r3, [r4, #8]
 8003b70:	f003 030c 	and.w	r3, r3, #12
 8003b74:	2b0c      	cmp	r3, #12
 8003b76:	d080      	beq.n	8003a7a <HAL_RCC_ClockConfig+0x1e>
 8003b78:	f7ff fc66 	bl	8003448 <HAL_GetTick>
 8003b7c:	1bc0      	subs	r0, r0, r7
 8003b7e:	4540      	cmp	r0, r8
 8003b80:	d9f5      	bls.n	8003b6e <HAL_RCC_ClockConfig+0x112>
 8003b82:	e7d8      	b.n	8003b36 <HAL_RCC_ClockConfig+0xda>
 8003b84:	f7ff fc60 	bl	8003448 <HAL_GetTick>
 8003b88:	1bc0      	subs	r0, r0, r7
 8003b8a:	4540      	cmp	r0, r8
 8003b8c:	d8d3      	bhi.n	8003b36 <HAL_RCC_ClockConfig+0xda>
 8003b8e:	68a3      	ldr	r3, [r4, #8]
 8003b90:	f013 0f0c 	tst.w	r3, #12
 8003b94:	d1f6      	bne.n	8003b84 <HAL_RCC_ClockConfig+0x128>
 8003b96:	e770      	b.n	8003a7a <HAL_RCC_ClockConfig+0x1e>
 8003b98:	b2f2      	uxtb	r2, r6
 8003b9a:	701a      	strb	r2, [r3, #0]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	f003 030f 	and.w	r3, r3, #15
 8003ba2:	429e      	cmp	r6, r3
 8003ba4:	d19c      	bne.n	8003ae0 <HAL_RCC_ClockConfig+0x84>
 8003ba6:	e76f      	b.n	8003a88 <HAL_RCC_ClockConfig+0x2c>
 8003ba8:	4904      	ldr	r1, [pc, #16]	; (8003bbc <HAL_RCC_ClockConfig+0x160>)
 8003baa:	68e8      	ldr	r0, [r5, #12]
 8003bac:	688b      	ldr	r3, [r1, #8]
 8003bae:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8003bb2:	4303      	orrs	r3, r0
 8003bb4:	608b      	str	r3, [r1, #8]
 8003bb6:	e76b      	b.n	8003a90 <HAL_RCC_ClockConfig+0x34>
 8003bb8:	40023c00 	.word	0x40023c00
 8003bbc:	40023800 	.word	0x40023800
 8003bc0:	08005648 	.word	0x08005648
 8003bc4:	200001b0 	.word	0x200001b0

08003bc8 <HAL_RCC_GetPCLK1Freq>:
 8003bc8:	4b08      	ldr	r3, [pc, #32]	; (8003bec <HAL_RCC_GetPCLK1Freq+0x24>)
 8003bca:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8003bce:	689b      	ldr	r3, [r3, #8]
 8003bd0:	fa92 f2a2 	rbit	r2, r2
 8003bd4:	fab2 f282 	clz	r2, r2
 8003bd8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003bdc:	40d3      	lsrs	r3, r2
 8003bde:	4a04      	ldr	r2, [pc, #16]	; (8003bf0 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003be0:	5cd3      	ldrb	r3, [r2, r3]
 8003be2:	4a04      	ldr	r2, [pc, #16]	; (8003bf4 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8003be4:	6810      	ldr	r0, [r2, #0]
 8003be6:	40d8      	lsrs	r0, r3
 8003be8:	4770      	bx	lr
 8003bea:	bf00      	nop
 8003bec:	40023800 	.word	0x40023800
 8003bf0:	08005648 	.word	0x08005648
 8003bf4:	200001b0 	.word	0x200001b0

08003bf8 <HAL_RCC_GetPCLK2Freq>:
 8003bf8:	4b08      	ldr	r3, [pc, #32]	; (8003c1c <HAL_RCC_GetPCLK2Freq+0x24>)
 8003bfa:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8003bfe:	689b      	ldr	r3, [r3, #8]
 8003c00:	fa92 f2a2 	rbit	r2, r2
 8003c04:	fab2 f282 	clz	r2, r2
 8003c08:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8003c0c:	40d3      	lsrs	r3, r2
 8003c0e:	4a04      	ldr	r2, [pc, #16]	; (8003c20 <HAL_RCC_GetPCLK2Freq+0x28>)
 8003c10:	5cd3      	ldrb	r3, [r2, r3]
 8003c12:	4a04      	ldr	r2, [pc, #16]	; (8003c24 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8003c14:	6810      	ldr	r0, [r2, #0]
 8003c16:	40d8      	lsrs	r0, r3
 8003c18:	4770      	bx	lr
 8003c1a:	bf00      	nop
 8003c1c:	40023800 	.word	0x40023800
 8003c20:	08005648 	.word	0x08005648
 8003c24:	200001b0 	.word	0x200001b0

08003c28 <HAL_RCC_GetClockConfig>:
 8003c28:	230f      	movs	r3, #15
 8003c2a:	6003      	str	r3, [r0, #0]
 8003c2c:	4b0b      	ldr	r3, [pc, #44]	; (8003c5c <HAL_RCC_GetClockConfig+0x34>)
 8003c2e:	689a      	ldr	r2, [r3, #8]
 8003c30:	f002 0203 	and.w	r2, r2, #3
 8003c34:	6042      	str	r2, [r0, #4]
 8003c36:	689a      	ldr	r2, [r3, #8]
 8003c38:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8003c3c:	6082      	str	r2, [r0, #8]
 8003c3e:	689a      	ldr	r2, [r3, #8]
 8003c40:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8003c44:	60c2      	str	r2, [r0, #12]
 8003c46:	689b      	ldr	r3, [r3, #8]
 8003c48:	08db      	lsrs	r3, r3, #3
 8003c4a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003c4e:	6103      	str	r3, [r0, #16]
 8003c50:	4b03      	ldr	r3, [pc, #12]	; (8003c60 <HAL_RCC_GetClockConfig+0x38>)
 8003c52:	681b      	ldr	r3, [r3, #0]
 8003c54:	f003 030f 	and.w	r3, r3, #15
 8003c58:	600b      	str	r3, [r1, #0]
 8003c5a:	4770      	bx	lr
 8003c5c:	40023800 	.word	0x40023800
 8003c60:	40023c00 	.word	0x40023c00

08003c64 <mbed::RawSerial::lock()>:
 8003c64:	4770      	bx	lr
	...

08003c68 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8003c68:	b510      	push	{r4, lr}
 8003c6a:	4604      	mov	r4, r0
 8003c6c:	f000 f8b8 	bl	8003de0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8003c70:	4b01      	ldr	r3, [pc, #4]	; (8003c78 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8003c72:	6023      	str	r3, [r4, #0]
 8003c74:	4620      	mov	r0, r4
 8003c76:	bd10      	pop	{r4, pc}
 8003c78:	08005660 	.word	0x08005660

08003c7c <mbed::RawSerial::~RawSerial()>:
 8003c7c:	b510      	push	{r4, lr}
 8003c7e:	4b03      	ldr	r3, [pc, #12]	; (8003c8c <mbed::RawSerial::~RawSerial()+0x10>)
 8003c80:	6003      	str	r3, [r0, #0]
 8003c82:	4604      	mov	r4, r0
 8003c84:	f7fd f8c0 	bl	8000e08 <mbed::SerialBase::~SerialBase()>
 8003c88:	4620      	mov	r0, r4
 8003c8a:	bd10      	pop	{r4, pc}
 8003c8c:	08005660 	.word	0x08005660

08003c90 <mbed::RawSerial::~RawSerial()>:
 8003c90:	b510      	push	{r4, lr}
 8003c92:	4604      	mov	r4, r0
 8003c94:	f7ff fff2 	bl	8003c7c <mbed::RawSerial::~RawSerial()>
 8003c98:	4620      	mov	r0, r4
 8003c9a:	f000 fab1 	bl	8004200 <operator delete(void*)>
 8003c9e:	4620      	mov	r0, r4
 8003ca0:	bd10      	pop	{r4, pc}

08003ca2 <mbed::Timer::start()>:
 8003ca2:	b510      	push	{r4, lr}
 8003ca4:	4604      	mov	r4, r0
 8003ca6:	f7fd fad9 	bl	800125c <core_util_critical_section_enter>
 8003caa:	6823      	ldr	r3, [r4, #0]
 8003cac:	b92b      	cbnz	r3, 8003cba <mbed::Timer::start()+0x18>
 8003cae:	68e0      	ldr	r0, [r4, #12]
 8003cb0:	f7fd fa7f 	bl	80011b2 <ticker_read>
 8003cb4:	2301      	movs	r3, #1
 8003cb6:	6060      	str	r0, [r4, #4]
 8003cb8:	6023      	str	r3, [r4, #0]
 8003cba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003cbe:	f7fd bae3 	b.w	8001288 <core_util_critical_section_exit>

08003cc2 <mbed::Timer::slicetime()>:
 8003cc2:	b538      	push	{r3, r4, r5, lr}
 8003cc4:	4605      	mov	r5, r0
 8003cc6:	f7fd fac9 	bl	800125c <core_util_critical_section_enter>
 8003cca:	682c      	ldr	r4, [r5, #0]
 8003ccc:	b124      	cbz	r4, 8003cd8 <mbed::Timer::slicetime()+0x16>
 8003cce:	68e8      	ldr	r0, [r5, #12]
 8003cd0:	f7fd fa6f 	bl	80011b2 <ticker_read>
 8003cd4:	686c      	ldr	r4, [r5, #4]
 8003cd6:	1b04      	subs	r4, r0, r4
 8003cd8:	f7fd fad6 	bl	8001288 <core_util_critical_section_exit>
 8003cdc:	4620      	mov	r0, r4
 8003cde:	bd38      	pop	{r3, r4, r5, pc}

08003ce0 <mbed::Timer::read_us()>:
 8003ce0:	b538      	push	{r3, r4, r5, lr}
 8003ce2:	4605      	mov	r5, r0
 8003ce4:	f7fd faba 	bl	800125c <core_util_critical_section_enter>
 8003ce8:	4628      	mov	r0, r5
 8003cea:	68ac      	ldr	r4, [r5, #8]
 8003cec:	f7ff ffe9 	bl	8003cc2 <mbed::Timer::slicetime()>
 8003cf0:	4404      	add	r4, r0
 8003cf2:	f7fd fac9 	bl	8001288 <core_util_critical_section_exit>
 8003cf6:	4620      	mov	r0, r4
 8003cf8:	bd38      	pop	{r3, r4, r5, pc}

08003cfa <mbed::Timer::read_ms()>:
 8003cfa:	b508      	push	{r3, lr}
 8003cfc:	f7ff fff0 	bl	8003ce0 <mbed::Timer::read_us()>
 8003d00:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003d04:	fb90 f0f3 	sdiv	r0, r0, r3
 8003d08:	bd08      	pop	{r3, pc}

08003d0a <mbed::Timer::reset()>:
 8003d0a:	b510      	push	{r4, lr}
 8003d0c:	4604      	mov	r4, r0
 8003d0e:	f7fd faa5 	bl	800125c <core_util_critical_section_enter>
 8003d12:	68e0      	ldr	r0, [r4, #12]
 8003d14:	f7fd fa4d 	bl	80011b2 <ticker_read>
 8003d18:	2300      	movs	r3, #0
 8003d1a:	6060      	str	r0, [r4, #4]
 8003d1c:	60a3      	str	r3, [r4, #8]
 8003d1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003d22:	f7fd bab1 	b.w	8001288 <core_util_critical_section_exit>

08003d26 <mbed::Timer::Timer()>:
 8003d26:	2300      	movs	r3, #0
 8003d28:	b510      	push	{r4, lr}
 8003d2a:	6003      	str	r3, [r0, #0]
 8003d2c:	6043      	str	r3, [r0, #4]
 8003d2e:	6083      	str	r3, [r0, #8]
 8003d30:	4604      	mov	r4, r0
 8003d32:	f7fd fa11 	bl	8001158 <get_us_ticker_data>
 8003d36:	60e0      	str	r0, [r4, #12]
 8003d38:	4620      	mov	r0, r4
 8003d3a:	f7ff ffe6 	bl	8003d0a <mbed::Timer::reset()>
 8003d3e:	4620      	mov	r0, r4
 8003d40:	bd10      	pop	{r4, pc}

08003d42 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8003d42:	6803      	ldr	r3, [r0, #0]
 8003d44:	4718      	bx	r3

08003d46 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8003d46:	b108      	cbz	r0, 8003d4c <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8003d48:	680b      	ldr	r3, [r1, #0]
 8003d4a:	6003      	str	r3, [r0, #0]
 8003d4c:	4770      	bx	lr

08003d4e <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8003d4e:	4770      	bx	lr

08003d50 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8003d50:	4288      	cmp	r0, r1
 8003d52:	b538      	push	{r3, r4, r5, lr}
 8003d54:	4604      	mov	r4, r0
 8003d56:	460d      	mov	r5, r1
 8003d58:	d00a      	beq.n	8003d70 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8003d5a:	f7fd f812 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8003d5e:	b13c      	cbz	r4, 8003d70 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8003d60:	68eb      	ldr	r3, [r5, #12]
 8003d62:	b11b      	cbz	r3, 8003d6c <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8003d64:	685b      	ldr	r3, [r3, #4]
 8003d66:	4629      	mov	r1, r5
 8003d68:	4620      	mov	r0, r4
 8003d6a:	4798      	blx	r3
 8003d6c:	68eb      	ldr	r3, [r5, #12]
 8003d6e:	60e3      	str	r3, [r4, #12]
 8003d70:	4620      	mov	r0, r4
 8003d72:	bd38      	pop	{r3, r4, r5, pc}

08003d74 <mbed::donothing()>:
 8003d74:	4770      	bx	lr

08003d76 <mbed::SerialBase::lock()>:
 8003d76:	4770      	bx	lr

08003d78 <mbed::SerialBase::unlock()>:
 8003d78:	4770      	bx	lr

08003d7a <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8003d7a:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8003d7e:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8003d82:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	4718      	bx	r3

08003d8a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 8003d8a:	b410      	push	{r4}
 8003d8c:	b180      	cbz	r0, 8003db0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8003d8e:	6814      	ldr	r4, [r2, #0]
 8003d90:	6853      	ldr	r3, [r2, #4]
 8003d92:	b90c      	cbnz	r4, 8003d98 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8003d94:	07da      	lsls	r2, r3, #31
 8003d96:	d50b      	bpl.n	8003db0 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8003d98:	f013 0f01 	tst.w	r3, #1
 8003d9c:	ea4f 0363 	mov.w	r3, r3, asr #1
 8003da0:	bf1c      	itt	ne
 8003da2:	58c2      	ldrne	r2, [r0, r3]
 8003da4:	5914      	ldrne	r4, [r2, r4]
 8003da6:	4418      	add	r0, r3
 8003da8:	4623      	mov	r3, r4
 8003daa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003dae:	4718      	bx	r3
 8003db0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003db4:	4770      	bx	lr

08003db6 <mbed::SerialBase::baud(int)>:
 8003db6:	b570      	push	{r4, r5, r6, lr}
 8003db8:	4605      	mov	r5, r0
 8003dba:	4604      	mov	r4, r0
 8003dbc:	f855 3b4c 	ldr.w	r3, [r5], #76
 8003dc0:	460e      	mov	r6, r1
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	4798      	blx	r3
 8003dc6:	4628      	mov	r0, r5
 8003dc8:	4631      	mov	r1, r6
 8003dca:	f7ff f8c3 	bl	8002f54 <serial_baud>
 8003dce:	6823      	ldr	r3, [r4, #0]
 8003dd0:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8003dd4:	4620      	mov	r0, r4
 8003dd6:	685b      	ldr	r3, [r3, #4]
 8003dd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003ddc:	4718      	bx	r3
	...

08003de0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 8003de0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003de4:	b087      	sub	sp, #28
 8003de6:	2500      	movs	r5, #0
 8003de8:	4691      	mov	r9, r2
 8003dea:	9500      	str	r5, [sp, #0]
 8003dec:	4602      	mov	r2, r0
 8003dee:	9501      	str	r5, [sp, #4]
 8003df0:	4604      	mov	r4, r0
 8003df2:	4688      	mov	r8, r1
 8003df4:	461f      	mov	r7, r3
 8003df6:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8003dfa:	4b27      	ldr	r3, [pc, #156]	; (8003e98 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8003dfc:	f842 3b08 	str.w	r3, [r2], #8
 8003e00:	4b26      	ldr	r3, [pc, #152]	; (8003e9c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 8003e02:	e882 0003 	stmia.w	r2, {r0, r1}
 8003e06:	6123      	str	r3, [r4, #16]
 8003e08:	f248 0307 	movw	r3, #32775	; 0x8007
 8003e0c:	6163      	str	r3, [r4, #20]
 8003e0e:	4b24      	ldr	r3, [pc, #144]	; (8003ea0 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 8003e10:	61e5      	str	r5, [r4, #28]
 8003e12:	61a4      	str	r4, [r4, #24]
 8003e14:	6222      	str	r2, [r4, #32]
 8003e16:	6263      	str	r3, [r4, #36]	; 0x24
 8003e18:	f3bf 8f6f 	isb	sy
 8003e1c:	f3bf 8f4f 	dsb	sy
 8003e20:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8003e24:	224c      	movs	r2, #76	; 0x4c
 8003e26:	6365      	str	r5, [r4, #52]	; 0x34
 8003e28:	6465      	str	r5, [r4, #68]	; 0x44
 8003e2a:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 8003e2e:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 8003e32:	4630      	mov	r0, r6
 8003e34:	f000 fd19 	bl	800486a <memset>
 8003e38:	a902      	add	r1, sp, #8
 8003e3a:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 8003e3e:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8003e42:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8003e46:	4d17      	ldr	r5, [pc, #92]	; (8003ea4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8003e48:	4f17      	ldr	r7, [pc, #92]	; (8003ea8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 8003e4a:	9702      	str	r7, [sp, #8]
 8003e4c:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8003e50:	9505      	str	r5, [sp, #20]
 8003e52:	f7ff ff7d 	bl	8003d50 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003e56:	a802      	add	r0, sp, #8
 8003e58:	f7fc ff93 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8003e5c:	a902      	add	r1, sp, #8
 8003e5e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8003e62:	9702      	str	r7, [sp, #8]
 8003e64:	9505      	str	r5, [sp, #20]
 8003e66:	f7ff ff73 	bl	8003d50 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003e6a:	a802      	add	r0, sp, #8
 8003e6c:	f7fc ff89 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8003e70:	464a      	mov	r2, r9
 8003e72:	4641      	mov	r1, r8
 8003e74:	4630      	mov	r0, r6
 8003e76:	f7fe ffcf 	bl	8002e18 <serial_init>
 8003e7a:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 8003e7e:	4630      	mov	r0, r6
 8003e80:	f7ff f868 	bl	8002f54 <serial_baud>
 8003e84:	4630      	mov	r0, r6
 8003e86:	4622      	mov	r2, r4
 8003e88:	4908      	ldr	r1, [pc, #32]	; (8003eac <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 8003e8a:	f7ff f867 	bl	8002f5c <serial_irq_handler>
 8003e8e:	4620      	mov	r0, r4
 8003e90:	b007      	add	sp, #28
 8003e92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003e96:	bf00      	nop
 8003e98:	08005684 	.word	0x08005684
 8003e9c:	e890a001 	.word	0xe890a001
 8003ea0:	08003d8b 	.word	0x08003d8b
 8003ea4:	08005670 	.word	0x08005670
 8003ea8:	08003d75 	.word	0x08003d75
 8003eac:	08003d7b 	.word	0x08003d7b

08003eb0 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8003eb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003eb4:	4605      	mov	r5, r0
 8003eb6:	4688      	mov	r8, r1
 8003eb8:	f855 3b4c 	ldr.w	r3, [r5], #76
 8003ebc:	681b      	ldr	r3, [r3, #0]
 8003ebe:	4604      	mov	r4, r0
 8003ec0:	4616      	mov	r6, r2
 8003ec2:	4798      	blx	r3
 8003ec4:	f7fd f9ca 	bl	800125c <core_util_critical_section_enter>
 8003ec8:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8003ecc:	0130      	lsls	r0, r6, #4
 8003ece:	b197      	cbz	r7, 8003ef6 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8003ed0:	3098      	adds	r0, #152	; 0x98
 8003ed2:	4641      	mov	r1, r8
 8003ed4:	4420      	add	r0, r4
 8003ed6:	f7ff ff3b 	bl	8003d50 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003eda:	2201      	movs	r2, #1
 8003edc:	4631      	mov	r1, r6
 8003ede:	4628      	mov	r0, r5
 8003ee0:	f7ff f848 	bl	8002f74 <serial_irq_set>
 8003ee4:	f7fd f9d0 	bl	8001288 <core_util_critical_section_exit>
 8003ee8:	6823      	ldr	r3, [r4, #0]
 8003eea:	4620      	mov	r0, r4
 8003eec:	685b      	ldr	r3, [r3, #4]
 8003eee:	4798      	blx	r3
 8003ef0:	b004      	add	sp, #16
 8003ef2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003ef6:	4b07      	ldr	r3, [pc, #28]	; (8003f14 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8003ef8:	9300      	str	r3, [sp, #0]
 8003efa:	3098      	adds	r0, #152	; 0x98
 8003efc:	4b06      	ldr	r3, [pc, #24]	; (8003f18 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 8003efe:	9303      	str	r3, [sp, #12]
 8003f00:	4669      	mov	r1, sp
 8003f02:	4420      	add	r0, r4
 8003f04:	f7ff ff24 	bl	8003d50 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8003f08:	4668      	mov	r0, sp
 8003f0a:	f7fc ff3a 	bl	8000d82 <mbed::Callback<void ()>::~Callback()>
 8003f0e:	463a      	mov	r2, r7
 8003f10:	e7e4      	b.n	8003edc <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 8003f12:	bf00      	nop
 8003f14:	08003d75 	.word	0x08003d75
 8003f18:	08005670 	.word	0x08005670

08003f1c <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8003f1c:	b538      	push	{r3, r4, r5, lr}
 8003f1e:	4604      	mov	r4, r0
 8003f20:	b148      	cbz	r0, 8003f36 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8003f22:	3058      	adds	r0, #88	; 0x58
 8003f24:	42a0      	cmp	r0, r4
 8003f26:	d006      	beq.n	8003f36 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8003f28:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8003f2c:	3814      	subs	r0, #20
 8003f2e:	f7fc ff62 	bl	8000df6 <mbed::Callback<void (int)>::~Callback()>
 8003f32:	4628      	mov	r0, r5
 8003f34:	e7f6      	b.n	8003f24 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8003f36:	4620      	mov	r0, r4
 8003f38:	bd38      	pop	{r3, r4, r5, pc}
	...

08003f3c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8003f3c:	b570      	push	{r4, r5, r6, lr}
 8003f3e:	4c0e      	ldr	r4, [pc, #56]	; (8003f78 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8003f40:	4620      	mov	r0, r4
 8003f42:	2500      	movs	r5, #0
 8003f44:	2628      	movs	r6, #40	; 0x28
 8003f46:	4632      	mov	r2, r6
 8003f48:	4629      	mov	r1, r5
 8003f4a:	f840 5b04 	str.w	r5, [r0], #4
 8003f4e:	f000 fc8c 	bl	800486a <memset>
 8003f52:	4632      	mov	r2, r6
 8003f54:	4629      	mov	r1, r5
 8003f56:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8003f5a:	62e5      	str	r5, [r4, #44]	; 0x2c
 8003f5c:	f000 fc85 	bl	800486a <memset>
 8003f60:	65a5      	str	r5, [r4, #88]	; 0x58
 8003f62:	4620      	mov	r0, r4
 8003f64:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003f66:	4a05      	ldr	r2, [pc, #20]	; (8003f7c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8003f68:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8003f6c:	4904      	ldr	r1, [pc, #16]	; (8003f80 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8003f6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003f72:	f000 b927 	b.w	80041c4 <__aeabi_atexit>
 8003f76:	bf00      	nop
 8003f78:	20001b60 	.word	0x20001b60
 8003f7c:	20000194 	.word	0x20000194
 8003f80:	08003f1d 	.word	0x08003f1d

08003f84 <__wrap__malloc_r>:
 8003f84:	f000 bcc8 	b.w	8004918 <_malloc_r>

08003f88 <__wrap__realloc_r>:
 8003f88:	f000 bd24 	b.w	80049d4 <_realloc_r>

08003f8c <__wrap__free_r>:
 8003f8c:	f000 bc76 	b.w	800487c <_free_r>

08003f90 <wait_us>:
 8003f90:	b570      	push	{r4, r5, r6, lr}
 8003f92:	4605      	mov	r5, r0
 8003f94:	f7fe fdaa 	bl	8002aec <us_ticker_read>
 8003f98:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003f9c:	fb95 f4f4 	sdiv	r4, r5, r4
 8003fa0:	2c00      	cmp	r4, #0
 8003fa2:	4606      	mov	r6, r0
 8003fa4:	dd02      	ble.n	8003fac <wait_us+0x1c>
 8003fa6:	f7fd f953 	bl	8001250 <core_util_are_interrupts_enabled>
 8003faa:	b928      	cbnz	r0, 8003fb8 <wait_us+0x28>
 8003fac:	f7fe fd9e 	bl	8002aec <us_ticker_read>
 8003fb0:	1b80      	subs	r0, r0, r6
 8003fb2:	42a8      	cmp	r0, r5
 8003fb4:	d3fa      	bcc.n	8003fac <wait_us+0x1c>
 8003fb6:	bd70      	pop	{r4, r5, r6, pc}
 8003fb8:	4620      	mov	r0, r4
 8003fba:	f000 f92b 	bl	8004214 <rtos::Thread::wait(unsigned long)>
 8003fbe:	e7f5      	b.n	8003fac <wait_us+0x1c>

08003fc0 <wait_ms>:
 8003fc0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003fc4:	4358      	muls	r0, r3
 8003fc6:	f7ff bfe3 	b.w	8003f90 <wait_us>
	...

08003fcc <init_serial()>:
 8003fcc:	b508      	push	{r3, lr}
 8003fce:	4b08      	ldr	r3, [pc, #32]	; (8003ff0 <init_serial()+0x24>)
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	b95b      	cbnz	r3, 8003fec <init_serial()+0x20>
 8003fd4:	2102      	movs	r1, #2
 8003fd6:	4807      	ldr	r0, [pc, #28]	; (8003ff4 <init_serial()+0x28>)
 8003fd8:	2203      	movs	r2, #3
 8003fda:	f7fe ff1d 	bl	8002e18 <serial_init>
 8003fde:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8003fe2:	4804      	ldr	r0, [pc, #16]	; (8003ff4 <init_serial()+0x28>)
 8003fe4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003fe8:	f7fe bfb4 	b.w	8002f54 <serial_baud>
 8003fec:	bd08      	pop	{r3, pc}
 8003fee:	bf00      	nop
 8003ff0:	2000195c 	.word	0x2000195c
 8003ff4:	20002774 	.word	0x20002774

08003ff8 <_close>:
 8003ff8:	2802      	cmp	r0, #2
 8003ffa:	b510      	push	{r4, lr}
 8003ffc:	4604      	mov	r4, r0
 8003ffe:	dc01      	bgt.n	8004004 <_close+0xc>
 8004000:	2000      	movs	r0, #0
 8004002:	bd10      	pop	{r4, pc}
 8004004:	f000 f9f0 	bl	80043e8 <__errno>
 8004008:	2309      	movs	r3, #9
 800400a:	6003      	str	r3, [r0, #0]
 800400c:	3c03      	subs	r4, #3
 800400e:	4b09      	ldr	r3, [pc, #36]	; (8004034 <_close+0x3c>)
 8004010:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004014:	2200      	movs	r2, #0
 8004016:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800401a:	b140      	cbz	r0, 800402e <_close+0x36>
 800401c:	6803      	ldr	r3, [r0, #0]
 800401e:	691b      	ldr	r3, [r3, #16]
 8004020:	4798      	blx	r3
 8004022:	1e04      	subs	r4, r0, #0
 8004024:	daec      	bge.n	8004000 <_close+0x8>
 8004026:	f000 f9df 	bl	80043e8 <__errno>
 800402a:	4264      	negs	r4, r4
 800402c:	6004      	str	r4, [r0, #0]
 800402e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004032:	bd10      	pop	{r4, pc}
 8004034:	20001bc4 	.word	0x20001bc4

08004038 <_write>:
 8004038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800403a:	4605      	mov	r5, r0
 800403c:	460e      	mov	r6, r1
 800403e:	4614      	mov	r4, r2
 8004040:	f000 f9d2 	bl	80043e8 <__errno>
 8004044:	2309      	movs	r3, #9
 8004046:	2d02      	cmp	r5, #2
 8004048:	6003      	str	r3, [r0, #0]
 800404a:	dc0f      	bgt.n	800406c <_write+0x34>
 800404c:	4b12      	ldr	r3, [pc, #72]	; (8004098 <_write+0x60>)
 800404e:	681b      	ldr	r3, [r3, #0]
 8004050:	b90b      	cbnz	r3, 8004056 <_write+0x1e>
 8004052:	f7ff ffbb 	bl	8003fcc <init_serial()>
 8004056:	4635      	mov	r5, r6
 8004058:	1937      	adds	r7, r6, r4
 800405a:	4e10      	ldr	r6, [pc, #64]	; (800409c <_write+0x64>)
 800405c:	42bd      	cmp	r5, r7
 800405e:	d015      	beq.n	800408c <_write+0x54>
 8004060:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004064:	4630      	mov	r0, r6
 8004066:	f7fe fff7 	bl	8003058 <serial_putc>
 800406a:	e7f7      	b.n	800405c <_write+0x24>
 800406c:	3d03      	subs	r5, #3
 800406e:	4b0c      	ldr	r3, [pc, #48]	; (80040a0 <_write+0x68>)
 8004070:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004074:	b160      	cbz	r0, 8004090 <_write+0x58>
 8004076:	6803      	ldr	r3, [r0, #0]
 8004078:	4622      	mov	r2, r4
 800407a:	68db      	ldr	r3, [r3, #12]
 800407c:	4631      	mov	r1, r6
 800407e:	4798      	blx	r3
 8004080:	1e04      	subs	r4, r0, #0
 8004082:	da03      	bge.n	800408c <_write+0x54>
 8004084:	f000 f9b0 	bl	80043e8 <__errno>
 8004088:	4263      	negs	r3, r4
 800408a:	6003      	str	r3, [r0, #0]
 800408c:	4620      	mov	r0, r4
 800408e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004090:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004094:	e7fa      	b.n	800408c <_write+0x54>
 8004096:	bf00      	nop
 8004098:	2000195c 	.word	0x2000195c
 800409c:	20002774 	.word	0x20002774
 80040a0:	20001bc4 	.word	0x20001bc4

080040a4 <_read>:
 80040a4:	b570      	push	{r4, r5, r6, lr}
 80040a6:	4604      	mov	r4, r0
 80040a8:	460d      	mov	r5, r1
 80040aa:	4616      	mov	r6, r2
 80040ac:	f000 f99c 	bl	80043e8 <__errno>
 80040b0:	2309      	movs	r3, #9
 80040b2:	2c02      	cmp	r4, #2
 80040b4:	6003      	str	r3, [r0, #0]
 80040b6:	dc0b      	bgt.n	80040d0 <_read+0x2c>
 80040b8:	4b0f      	ldr	r3, [pc, #60]	; (80040f8 <_read+0x54>)
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	b90b      	cbnz	r3, 80040c2 <_read+0x1e>
 80040be:	f7ff ff85 	bl	8003fcc <init_serial()>
 80040c2:	480e      	ldr	r0, [pc, #56]	; (80040fc <_read+0x58>)
 80040c4:	f7fe ffac 	bl	8003020 <serial_getc>
 80040c8:	2401      	movs	r4, #1
 80040ca:	7028      	strb	r0, [r5, #0]
 80040cc:	4620      	mov	r0, r4
 80040ce:	bd70      	pop	{r4, r5, r6, pc}
 80040d0:	3c03      	subs	r4, #3
 80040d2:	4b0b      	ldr	r3, [pc, #44]	; (8004100 <_read+0x5c>)
 80040d4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80040d8:	b158      	cbz	r0, 80040f2 <_read+0x4e>
 80040da:	6803      	ldr	r3, [r0, #0]
 80040dc:	4632      	mov	r2, r6
 80040de:	689b      	ldr	r3, [r3, #8]
 80040e0:	4629      	mov	r1, r5
 80040e2:	4798      	blx	r3
 80040e4:	1e04      	subs	r4, r0, #0
 80040e6:	daf1      	bge.n	80040cc <_read+0x28>
 80040e8:	f000 f97e 	bl	80043e8 <__errno>
 80040ec:	4263      	negs	r3, r4
 80040ee:	6003      	str	r3, [r0, #0]
 80040f0:	e7ec      	b.n	80040cc <_read+0x28>
 80040f2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80040f6:	e7e9      	b.n	80040cc <_read+0x28>
 80040f8:	2000195c 	.word	0x2000195c
 80040fc:	20002774 	.word	0x20002774
 8004100:	20001bc4 	.word	0x20001bc4

08004104 <_lseek>:
 8004104:	b570      	push	{r4, r5, r6, lr}
 8004106:	4604      	mov	r4, r0
 8004108:	460d      	mov	r5, r1
 800410a:	4616      	mov	r6, r2
 800410c:	f000 f96c 	bl	80043e8 <__errno>
 8004110:	2309      	movs	r3, #9
 8004112:	2c02      	cmp	r4, #2
 8004114:	6003      	str	r3, [r0, #0]
 8004116:	dd0b      	ble.n	8004130 <_lseek+0x2c>
 8004118:	3c03      	subs	r4, #3
 800411a:	4b08      	ldr	r3, [pc, #32]	; (800413c <_lseek+0x38>)
 800411c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004120:	b140      	cbz	r0, 8004134 <_lseek+0x30>
 8004122:	6803      	ldr	r3, [r0, #0]
 8004124:	4632      	mov	r2, r6
 8004126:	4629      	mov	r1, r5
 8004128:	69db      	ldr	r3, [r3, #28]
 800412a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800412e:	4718      	bx	r3
 8004130:	2000      	movs	r0, #0
 8004132:	bd70      	pop	{r4, r5, r6, pc}
 8004134:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004138:	bd70      	pop	{r4, r5, r6, pc}
 800413a:	bf00      	nop
 800413c:	20001bc4 	.word	0x20001bc4

08004140 <software_init_hook>:
 8004140:	b508      	push	{r3, lr}
 8004142:	f7fe ff9b 	bl	800307c <mbed_sdk_init>
 8004146:	f7fd fa29 	bl	800159c <software_init_hook_rtos>
 800414a:	bd08      	pop	{r3, pc}

0800414c <mbed_main>:
 800414c:	4770      	bx	lr

0800414e <__wrap_main>:
 800414e:	b508      	push	{r3, lr}
 8004150:	f7ff fffc 	bl	800414c <mbed_main>
 8004154:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004158:	f7fc bd24 	b.w	8000ba4 <main>

0800415c <_sbrk>:
 800415c:	4a0c      	ldr	r2, [pc, #48]	; (8004190 <_sbrk+0x34>)
 800415e:	6813      	ldr	r3, [r2, #0]
 8004160:	b510      	push	{r4, lr}
 8004162:	4418      	add	r0, r3
 8004164:	f3ef 8108 	mrs	r1, MSP
 8004168:	4288      	cmp	r0, r1
 800416a:	d305      	bcc.n	8004178 <_sbrk+0x1c>
 800416c:	4b09      	ldr	r3, [pc, #36]	; (8004194 <_sbrk+0x38>)
 800416e:	220c      	movs	r2, #12
 8004170:	601a      	str	r2, [r3, #0]
 8004172:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004176:	bd10      	pop	{r4, pc}
 8004178:	4907      	ldr	r1, [pc, #28]	; (8004198 <_sbrk+0x3c>)
 800417a:	680c      	ldr	r4, [r1, #0]
 800417c:	b124      	cbz	r4, 8004188 <_sbrk+0x2c>
 800417e:	4907      	ldr	r1, [pc, #28]	; (800419c <_sbrk+0x40>)
 8004180:	6809      	ldr	r1, [r1, #0]
 8004182:	4421      	add	r1, r4
 8004184:	4288      	cmp	r0, r1
 8004186:	d2f1      	bcs.n	800416c <_sbrk+0x10>
 8004188:	6010      	str	r0, [r2, #0]
 800418a:	4618      	mov	r0, r3
 800418c:	bd10      	pop	{r4, pc}
 800418e:	bf00      	nop
 8004190:	200001b4 	.word	0x200001b4
 8004194:	200027c4 	.word	0x200027c4
 8004198:	20001cc4 	.word	0x20001cc4
 800419c:	20001cc8 	.word	0x20001cc8

080041a0 <_exit>:
 80041a0:	4c07      	ldr	r4, [pc, #28]	; (80041c0 <_exit+0x20>)
 80041a2:	b508      	push	{r3, lr}
 80041a4:	6823      	ldr	r3, [r4, #0]
 80041a6:	4605      	mov	r5, r0
 80041a8:	6898      	ldr	r0, [r3, #8]
 80041aa:	f000 f9d5 	bl	8004558 <fflush>
 80041ae:	6823      	ldr	r3, [r4, #0]
 80041b0:	68d8      	ldr	r0, [r3, #12]
 80041b2:	f000 f9d1 	bl	8004558 <fflush>
 80041b6:	b10d      	cbz	r5, 80041bc <_exit+0x1c>
 80041b8:	f7fd f87f 	bl	80012ba <mbed_die>
 80041bc:	e7fe      	b.n	80041bc <_exit+0x1c>
 80041be:	bf00      	nop
 80041c0:	200001b8 	.word	0x200001b8

080041c4 <__aeabi_atexit>:
 80041c4:	2001      	movs	r0, #1
 80041c6:	4770      	bx	lr

080041c8 <__wrap_exit>:
 80041c8:	b508      	push	{r3, lr}
 80041ca:	f7ff ffe9 	bl	80041a0 <_exit>

080041ce <__malloc_lock>:
 80041ce:	b508      	push	{r3, lr}
 80041d0:	f7fd f9f2 	bl	80015b8 <__rtos_malloc_lock>
 80041d4:	bd08      	pop	{r3, pc}

080041d6 <__malloc_unlock>:
 80041d6:	b508      	push	{r3, lr}
 80041d8:	f7fd f9f6 	bl	80015c8 <__rtos_malloc_unlock>
 80041dc:	bd08      	pop	{r3, pc}
	...

080041e0 <operator new[](unsigned int)>:
 80041e0:	b510      	push	{r4, lr}
 80041e2:	f000 fab9 	bl	8004758 <malloc>
 80041e6:	4604      	mov	r4, r0
 80041e8:	b910      	cbnz	r0, 80041f0 <operator new[](unsigned int)+0x10>
 80041ea:	4802      	ldr	r0, [pc, #8]	; (80041f4 <operator new[](unsigned int)+0x14>)
 80041ec:	f7fd f860 	bl	80012b0 <error>
 80041f0:	4620      	mov	r0, r4
 80041f2:	bd10      	pop	{r4, pc}
 80041f4:	08005694 	.word	0x08005694

080041f8 <operator delete[](void*)>:
 80041f8:	b108      	cbz	r0, 80041fe <operator delete[](void*)+0x6>
 80041fa:	f000 bab5 	b.w	8004768 <free>
 80041fe:	4770      	bx	lr

08004200 <operator delete(void*)>:
 8004200:	f7ff bffa 	b.w	80041f8 <operator delete[](void*)>

08004204 <thread_terminate_hook>:
 8004204:	4b02      	ldr	r3, [pc, #8]	; (8004210 <thread_terminate_hook+0xc>)
 8004206:	681b      	ldr	r3, [r3, #0]
 8004208:	b103      	cbz	r3, 800420c <thread_terminate_hook+0x8>
 800420a:	4718      	bx	r3
 800420c:	4770      	bx	lr
 800420e:	bf00      	nop
 8004210:	20001ccc 	.word	0x20001ccc

08004214 <rtos::Thread::wait(unsigned long)>:
 8004214:	f7fd bdae 	b.w	8001d74 <osDelay>

08004218 <rt_set_PSP>:
 8004218:	f380 8809 	msr	PSP, r0
 800421c:	4770      	bx	lr

0800421e <rt_get_PSP>:
 800421e:	f3ef 8009 	mrs	r0, PSP
 8004222:	4770      	bx	lr

08004224 <os_set_env>:
 8004224:	4668      	mov	r0, sp
 8004226:	f380 8809 	msr	PSP, r0
 800422a:	485a      	ldr	r0, [pc, #360]	; (8004394 <OS_Tick_Handler+0x10>)
 800422c:	7800      	ldrb	r0, [r0, #0]
 800422e:	07c0      	lsls	r0, r0, #31
 8004230:	bf14      	ite	ne
 8004232:	2002      	movne	r0, #2
 8004234:	2003      	moveq	r0, #3
 8004236:	f380 8814 	msr	CONTROL, r0
 800423a:	4770      	bx	lr

0800423c <_alloc_box>:
 800423c:	f8df c158 	ldr.w	r12, [pc, #344]	; 8004398 <OS_Tick_Handler+0x14>
 8004240:	f3ef 8305 	mrs	r3, IPSR
 8004244:	061b      	lsls	r3, r3, #24
 8004246:	bf18      	it	ne
 8004248:	4760      	bxne	r12
 800424a:	f3ef 8314 	mrs	r3, CONTROL
 800424e:	07db      	lsls	r3, r3, #31
 8004250:	bf08      	it	eq
 8004252:	4760      	bxeq	r12
 8004254:	df00      	svc	0
 8004256:	4770      	bx	lr

08004258 <_free_box>:
 8004258:	f8df c140 	ldr.w	r12, [pc, #320]	; 800439c <OS_Tick_Handler+0x18>
 800425c:	f3ef 8305 	mrs	r3, IPSR
 8004260:	061b      	lsls	r3, r3, #24
 8004262:	bf18      	it	ne
 8004264:	4760      	bxne	r12
 8004266:	f3ef 8314 	mrs	r3, CONTROL
 800426a:	07db      	lsls	r3, r3, #31
 800426c:	bf08      	it	eq
 800426e:	4760      	bxeq	r12
 8004270:	df00      	svc	0
 8004272:	4770      	bx	lr

08004274 <SVC_Handler>:
 8004274:	f3ef 8009 	mrs	r0, PSP
 8004278:	6981      	ldr	r1, [r0, #24]
 800427a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800427e:	bbe1      	cbnz	r1, 80042fa <SVC_User>
 8004280:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004284:	b510      	push	{r4, lr}
 8004286:	47e0      	blx	r12
 8004288:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800428c:	f3ef 8c09 	mrs	r12, PSP
 8004290:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8004294:	4b42      	ldr	r3, [pc, #264]	; (80043a0 <OS_Tick_Handler+0x1c>)
 8004296:	e893 0006 	ldmia.w	r3, {r1, r2}
 800429a:	4291      	cmp	r1, r2
 800429c:	bf08      	it	eq
 800429e:	4770      	bxeq	lr
 80042a0:	b941      	cbnz	r1, 80042b4 <SVC_ContextSave>
 80042a2:	f01e 0f10 	tst.w	lr, #16
 80042a6:	d116      	bne.n	80042d6 <SVC_ContextRestore>
 80042a8:	493e      	ldr	r1, [pc, #248]	; (80043a4 <OS_Tick_Handler+0x20>)
 80042aa:	6808      	ldr	r0, [r1, #0]
 80042ac:	f020 0001 	bic.w	r0, r0, #1
 80042b0:	6008      	str	r0, [r1, #0]
 80042b2:	e010      	b.n	80042d6 <SVC_ContextRestore>

080042b4 <SVC_ContextSave>:
 80042b4:	f01e 0f10 	tst.w	lr, #16
 80042b8:	bf06      	itte	eq
 80042ba:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80042be:	2001      	moveq	r0, #1
 80042c0:	2000      	movne	r0, #0
 80042c2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80042c6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80042ca:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80042ce:	b40c      	push	{r2, r3}
 80042d0:	f7fd fa66 	bl	80017a0 <rt_stk_check>
 80042d4:	bc0c      	pop	{r2, r3}

080042d6 <SVC_ContextRestore>:
 80042d6:	601a      	str	r2, [r3, #0]
 80042d8:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80042dc:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80042e0:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80042e4:	2800      	cmp	r0, #0
 80042e6:	bf0e      	itee	eq
 80042e8:	f06f 0e02 	mvneq.w	lr, #2
 80042ec:	f06f 0e12 	mvnne.w	lr, #18
 80042f0:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80042f4:	f38c 8809 	msr	PSP, r12

080042f8 <SVC_Exit>:
 80042f8:	4770      	bx	lr

080042fa <SVC_User>:
 80042fa:	b510      	push	{r4, lr}
 80042fc:	4a2a      	ldr	r2, [pc, #168]	; (80043a8 <OS_Tick_Handler+0x24>)
 80042fe:	6812      	ldr	r2, [r2, #0]
 8004300:	4291      	cmp	r1, r2
 8004302:	d809      	bhi.n	8004318 <SVC_Done>
 8004304:	4c29      	ldr	r4, [pc, #164]	; (80043ac <OS_Tick_Handler+0x28>)
 8004306:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 800430a:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 800430e:	47a0      	blx	r4
 8004310:	f3ef 8c09 	mrs	r12, PSP
 8004314:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08004318 <SVC_Done>:
 8004318:	bd10      	pop	{r4, pc}

0800431a <PendSV_Handler>:
 800431a:	b510      	push	{r4, lr}
 800431c:	f7fd f9cc 	bl	80016b8 <rt_pop_req>

08004320 <Sys_Switch>:
 8004320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004324:	4b1e      	ldr	r3, [pc, #120]	; (80043a0 <OS_Tick_Handler+0x1c>)
 8004326:	e893 0006 	ldmia.w	r3, {r1, r2}
 800432a:	4291      	cmp	r1, r2
 800432c:	bf08      	it	eq
 800432e:	4770      	bxeq	lr
 8004330:	f3ef 8c09 	mrs	r12, PSP
 8004334:	f01e 0f10 	tst.w	lr, #16
 8004338:	bf06      	itte	eq
 800433a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800433e:	2001      	moveq	r0, #1
 8004340:	2000      	movne	r0, #0
 8004342:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004346:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800434a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800434e:	b40c      	push	{r2, r3}
 8004350:	f7fd fa26 	bl	80017a0 <rt_stk_check>
 8004354:	bc0c      	pop	{r2, r3}
 8004356:	601a      	str	r2, [r3, #0]
 8004358:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800435c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004360:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004364:	2800      	cmp	r0, #0
 8004366:	bf0e      	itee	eq
 8004368:	f06f 0e02 	mvneq.w	lr, #2
 800436c:	f06f 0e12 	mvnne.w	lr, #18
 8004370:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004374:	f38c 8809 	msr	PSP, r12

08004378 <Sys_Exit>:
 8004378:	4770      	bx	lr

0800437a <SysTick_Handler>:
 800437a:	b510      	push	{r4, lr}
 800437c:	f7fd f9f2 	bl	8001764 <rt_systick>
 8004380:	f7ff bfce 	b.w	8004320 <Sys_Switch>

08004384 <OS_Tick_Handler>:
 8004384:	b510      	push	{r4, lr}
 8004386:	f7fd f9eb 	bl	8001760 <os_tick_irqack>
 800438a:	f7fd f9eb 	bl	8001764 <rt_systick>
 800438e:	f7ff bfc7 	b.w	8004320 <Sys_Switch>
 8004392:	0000      	.short	0x0000
 8004394:	080054ee 	.word	0x080054ee
 8004398:	0800180f 	.word	0x0800180f
 800439c:	08001829 	.word	0x08001829
 80043a0:	200026ec 	.word	0x200026ec
 80043a4:	e000ef34 	.word	0xe000ef34
 80043a8:	00000000 	.word	0x00000000
 80043ac:	fffffffc 	.word	0xfffffffc

080043b0 <Reset_Handler>:
 80043b0:	f8df d020 	ldr.w	sp, [pc, #32]	; 80043d4 <LoopCopyDataInit+0x14>
 80043b4:	2100      	movs	r1, #0
 80043b6:	e003      	b.n	80043c0 <LoopCopyDataInit>

080043b8 <CopyDataInit>:
 80043b8:	4b07      	ldr	r3, [pc, #28]	; (80043d8 <LoopCopyDataInit+0x18>)
 80043ba:	585b      	ldr	r3, [r3, r1]
 80043bc:	5043      	str	r3, [r0, r1]
 80043be:	3104      	adds	r1, #4

080043c0 <LoopCopyDataInit>:
 80043c0:	4806      	ldr	r0, [pc, #24]	; (80043dc <LoopCopyDataInit+0x1c>)
 80043c2:	4b07      	ldr	r3, [pc, #28]	; (80043e0 <LoopCopyDataInit+0x20>)
 80043c4:	1842      	adds	r2, r0, r1
 80043c6:	429a      	cmp	r2, r3
 80043c8:	d3f6      	bcc.n	80043b8 <CopyDataInit>
 80043ca:	f7fe ff35 	bl	8003238 <SystemInit>
 80043ce:	f7fc fc83 	bl	8000cd8 <_start>
 80043d2:	4770      	bx	lr
 80043d4:	20018000 	.word	0x20018000
 80043d8:	08005758 	.word	0x08005758
 80043dc:	20000194 	.word	0x20000194
 80043e0:	20000230 	.word	0x20000230

080043e4 <ADC_IRQHandler>:
 80043e4:	e7fe      	b.n	80043e4 <ADC_IRQHandler>
	...

080043e8 <__errno>:
 80043e8:	4b01      	ldr	r3, [pc, #4]	; (80043f0 <__errno+0x8>)
 80043ea:	6818      	ldr	r0, [r3, #0]
 80043ec:	4770      	bx	lr
 80043ee:	bf00      	nop
 80043f0:	200001b8 	.word	0x200001b8

080043f4 <__sflush_r>:
 80043f4:	898a      	ldrh	r2, [r1, #12]
 80043f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043fa:	4605      	mov	r5, r0
 80043fc:	0710      	lsls	r0, r2, #28
 80043fe:	460c      	mov	r4, r1
 8004400:	d45a      	bmi.n	80044b8 <__sflush_r+0xc4>
 8004402:	684b      	ldr	r3, [r1, #4]
 8004404:	2b00      	cmp	r3, #0
 8004406:	dc05      	bgt.n	8004414 <__sflush_r+0x20>
 8004408:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800440a:	2b00      	cmp	r3, #0
 800440c:	dc02      	bgt.n	8004414 <__sflush_r+0x20>
 800440e:	2000      	movs	r0, #0
 8004410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004414:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004416:	2e00      	cmp	r6, #0
 8004418:	d0f9      	beq.n	800440e <__sflush_r+0x1a>
 800441a:	2300      	movs	r3, #0
 800441c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004420:	682f      	ldr	r7, [r5, #0]
 8004422:	602b      	str	r3, [r5, #0]
 8004424:	d033      	beq.n	800448e <__sflush_r+0x9a>
 8004426:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004428:	89a3      	ldrh	r3, [r4, #12]
 800442a:	075a      	lsls	r2, r3, #29
 800442c:	d505      	bpl.n	800443a <__sflush_r+0x46>
 800442e:	6863      	ldr	r3, [r4, #4]
 8004430:	1ac0      	subs	r0, r0, r3
 8004432:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004434:	b10b      	cbz	r3, 800443a <__sflush_r+0x46>
 8004436:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004438:	1ac0      	subs	r0, r0, r3
 800443a:	2300      	movs	r3, #0
 800443c:	4602      	mov	r2, r0
 800443e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004440:	6a21      	ldr	r1, [r4, #32]
 8004442:	4628      	mov	r0, r5
 8004444:	47b0      	blx	r6
 8004446:	1c43      	adds	r3, r0, #1
 8004448:	89a3      	ldrh	r3, [r4, #12]
 800444a:	d106      	bne.n	800445a <__sflush_r+0x66>
 800444c:	6829      	ldr	r1, [r5, #0]
 800444e:	291d      	cmp	r1, #29
 8004450:	d84b      	bhi.n	80044ea <__sflush_r+0xf6>
 8004452:	4a2b      	ldr	r2, [pc, #172]	; (8004500 <__sflush_r+0x10c>)
 8004454:	40ca      	lsrs	r2, r1
 8004456:	07d6      	lsls	r6, r2, #31
 8004458:	d547      	bpl.n	80044ea <__sflush_r+0xf6>
 800445a:	2200      	movs	r2, #0
 800445c:	6062      	str	r2, [r4, #4]
 800445e:	04d9      	lsls	r1, r3, #19
 8004460:	6922      	ldr	r2, [r4, #16]
 8004462:	6022      	str	r2, [r4, #0]
 8004464:	d504      	bpl.n	8004470 <__sflush_r+0x7c>
 8004466:	1c42      	adds	r2, r0, #1
 8004468:	d101      	bne.n	800446e <__sflush_r+0x7a>
 800446a:	682b      	ldr	r3, [r5, #0]
 800446c:	b903      	cbnz	r3, 8004470 <__sflush_r+0x7c>
 800446e:	6560      	str	r0, [r4, #84]	; 0x54
 8004470:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004472:	602f      	str	r7, [r5, #0]
 8004474:	2900      	cmp	r1, #0
 8004476:	d0ca      	beq.n	800440e <__sflush_r+0x1a>
 8004478:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800447c:	4299      	cmp	r1, r3
 800447e:	d002      	beq.n	8004486 <__sflush_r+0x92>
 8004480:	4628      	mov	r0, r5
 8004482:	f7ff fd83 	bl	8003f8c <__wrap__free_r>
 8004486:	2000      	movs	r0, #0
 8004488:	6360      	str	r0, [r4, #52]	; 0x34
 800448a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800448e:	6a21      	ldr	r1, [r4, #32]
 8004490:	2301      	movs	r3, #1
 8004492:	4628      	mov	r0, r5
 8004494:	47b0      	blx	r6
 8004496:	1c41      	adds	r1, r0, #1
 8004498:	d1c6      	bne.n	8004428 <__sflush_r+0x34>
 800449a:	682b      	ldr	r3, [r5, #0]
 800449c:	2b00      	cmp	r3, #0
 800449e:	d0c3      	beq.n	8004428 <__sflush_r+0x34>
 80044a0:	2b1d      	cmp	r3, #29
 80044a2:	d001      	beq.n	80044a8 <__sflush_r+0xb4>
 80044a4:	2b16      	cmp	r3, #22
 80044a6:	d101      	bne.n	80044ac <__sflush_r+0xb8>
 80044a8:	602f      	str	r7, [r5, #0]
 80044aa:	e7b0      	b.n	800440e <__sflush_r+0x1a>
 80044ac:	89a3      	ldrh	r3, [r4, #12]
 80044ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044b2:	81a3      	strh	r3, [r4, #12]
 80044b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044b8:	690f      	ldr	r7, [r1, #16]
 80044ba:	2f00      	cmp	r7, #0
 80044bc:	d0a7      	beq.n	800440e <__sflush_r+0x1a>
 80044be:	0793      	lsls	r3, r2, #30
 80044c0:	680e      	ldr	r6, [r1, #0]
 80044c2:	bf08      	it	eq
 80044c4:	694b      	ldreq	r3, [r1, #20]
 80044c6:	600f      	str	r7, [r1, #0]
 80044c8:	bf18      	it	ne
 80044ca:	2300      	movne	r3, #0
 80044cc:	eba6 0807 	sub.w	r8, r6, r7
 80044d0:	608b      	str	r3, [r1, #8]
 80044d2:	f1b8 0f00 	cmp.w	r8, #0
 80044d6:	dd9a      	ble.n	800440e <__sflush_r+0x1a>
 80044d8:	4643      	mov	r3, r8
 80044da:	463a      	mov	r2, r7
 80044dc:	6a21      	ldr	r1, [r4, #32]
 80044de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80044e0:	4628      	mov	r0, r5
 80044e2:	47b0      	blx	r6
 80044e4:	2800      	cmp	r0, #0
 80044e6:	dc07      	bgt.n	80044f8 <__sflush_r+0x104>
 80044e8:	89a3      	ldrh	r3, [r4, #12]
 80044ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044ee:	81a3      	strh	r3, [r4, #12]
 80044f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80044f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044f8:	4407      	add	r7, r0
 80044fa:	eba8 0800 	sub.w	r8, r8, r0
 80044fe:	e7e8      	b.n	80044d2 <__sflush_r+0xde>
 8004500:	20400001 	.word	0x20400001

08004504 <_fflush_r>:
 8004504:	b538      	push	{r3, r4, r5, lr}
 8004506:	690b      	ldr	r3, [r1, #16]
 8004508:	4605      	mov	r5, r0
 800450a:	460c      	mov	r4, r1
 800450c:	b1db      	cbz	r3, 8004546 <_fflush_r+0x42>
 800450e:	b118      	cbz	r0, 8004518 <_fflush_r+0x14>
 8004510:	6983      	ldr	r3, [r0, #24]
 8004512:	b90b      	cbnz	r3, 8004518 <_fflush_r+0x14>
 8004514:	f000 f872 	bl	80045fc <__sinit>
 8004518:	4b0c      	ldr	r3, [pc, #48]	; (800454c <_fflush_r+0x48>)
 800451a:	429c      	cmp	r4, r3
 800451c:	d109      	bne.n	8004532 <_fflush_r+0x2e>
 800451e:	686c      	ldr	r4, [r5, #4]
 8004520:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004524:	b17b      	cbz	r3, 8004546 <_fflush_r+0x42>
 8004526:	4621      	mov	r1, r4
 8004528:	4628      	mov	r0, r5
 800452a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800452e:	f7ff bf61 	b.w	80043f4 <__sflush_r>
 8004532:	4b07      	ldr	r3, [pc, #28]	; (8004550 <_fflush_r+0x4c>)
 8004534:	429c      	cmp	r4, r3
 8004536:	d101      	bne.n	800453c <_fflush_r+0x38>
 8004538:	68ac      	ldr	r4, [r5, #8]
 800453a:	e7f1      	b.n	8004520 <_fflush_r+0x1c>
 800453c:	4b05      	ldr	r3, [pc, #20]	; (8004554 <_fflush_r+0x50>)
 800453e:	429c      	cmp	r4, r3
 8004540:	bf08      	it	eq
 8004542:	68ec      	ldreq	r4, [r5, #12]
 8004544:	e7ec      	b.n	8004520 <_fflush_r+0x1c>
 8004546:	2000      	movs	r0, #0
 8004548:	bd38      	pop	{r3, r4, r5, pc}
 800454a:	bf00      	nop
 800454c:	080056d4 	.word	0x080056d4
 8004550:	080056f4 	.word	0x080056f4
 8004554:	080056b4 	.word	0x080056b4

08004558 <fflush>:
 8004558:	4601      	mov	r1, r0
 800455a:	b920      	cbnz	r0, 8004566 <fflush+0xe>
 800455c:	4b04      	ldr	r3, [pc, #16]	; (8004570 <fflush+0x18>)
 800455e:	4905      	ldr	r1, [pc, #20]	; (8004574 <fflush+0x1c>)
 8004560:	6818      	ldr	r0, [r3, #0]
 8004562:	f000 b8b7 	b.w	80046d4 <_fwalk_reent>
 8004566:	4b04      	ldr	r3, [pc, #16]	; (8004578 <fflush+0x20>)
 8004568:	6818      	ldr	r0, [r3, #0]
 800456a:	f7ff bfcb 	b.w	8004504 <_fflush_r>
 800456e:	bf00      	nop
 8004570:	08005714 	.word	0x08005714
 8004574:	08004505 	.word	0x08004505
 8004578:	200001b8 	.word	0x200001b8

0800457c <_cleanup_r>:
 800457c:	4901      	ldr	r1, [pc, #4]	; (8004584 <_cleanup_r+0x8>)
 800457e:	f000 b8a9 	b.w	80046d4 <_fwalk_reent>
 8004582:	bf00      	nop
 8004584:	08004505 	.word	0x08004505

08004588 <std.isra.0>:
 8004588:	2300      	movs	r3, #0
 800458a:	b510      	push	{r4, lr}
 800458c:	4604      	mov	r4, r0
 800458e:	6003      	str	r3, [r0, #0]
 8004590:	6043      	str	r3, [r0, #4]
 8004592:	6083      	str	r3, [r0, #8]
 8004594:	8181      	strh	r1, [r0, #12]
 8004596:	6643      	str	r3, [r0, #100]	; 0x64
 8004598:	81c2      	strh	r2, [r0, #14]
 800459a:	6103      	str	r3, [r0, #16]
 800459c:	6143      	str	r3, [r0, #20]
 800459e:	6183      	str	r3, [r0, #24]
 80045a0:	4619      	mov	r1, r3
 80045a2:	2208      	movs	r2, #8
 80045a4:	305c      	adds	r0, #92	; 0x5c
 80045a6:	f000 f960 	bl	800486a <memset>
 80045aa:	4b05      	ldr	r3, [pc, #20]	; (80045c0 <std.isra.0+0x38>)
 80045ac:	6263      	str	r3, [r4, #36]	; 0x24
 80045ae:	4b05      	ldr	r3, [pc, #20]	; (80045c4 <std.isra.0+0x3c>)
 80045b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80045b2:	4b05      	ldr	r3, [pc, #20]	; (80045c8 <std.isra.0+0x40>)
 80045b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80045b6:	4b05      	ldr	r3, [pc, #20]	; (80045cc <std.isra.0+0x44>)
 80045b8:	6224      	str	r4, [r4, #32]
 80045ba:	6323      	str	r3, [r4, #48]	; 0x30
 80045bc:	bd10      	pop	{r4, pc}
 80045be:	bf00      	nop
 80045c0:	08004d7d 	.word	0x08004d7d
 80045c4:	08004d9f 	.word	0x08004d9f
 80045c8:	08004dd7 	.word	0x08004dd7
 80045cc:	08004dfb 	.word	0x08004dfb

080045d0 <__sfmoreglue>:
 80045d0:	b570      	push	{r4, r5, r6, lr}
 80045d2:	1e4a      	subs	r2, r1, #1
 80045d4:	2568      	movs	r5, #104	; 0x68
 80045d6:	4355      	muls	r5, r2
 80045d8:	460e      	mov	r6, r1
 80045da:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80045de:	f7ff fcd1 	bl	8003f84 <__wrap__malloc_r>
 80045e2:	4604      	mov	r4, r0
 80045e4:	b140      	cbz	r0, 80045f8 <__sfmoreglue+0x28>
 80045e6:	2100      	movs	r1, #0
 80045e8:	e880 0042 	stmia.w	r0, {r1, r6}
 80045ec:	300c      	adds	r0, #12
 80045ee:	60a0      	str	r0, [r4, #8]
 80045f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80045f4:	f000 f939 	bl	800486a <memset>
 80045f8:	4620      	mov	r0, r4
 80045fa:	bd70      	pop	{r4, r5, r6, pc}

080045fc <__sinit>:
 80045fc:	6983      	ldr	r3, [r0, #24]
 80045fe:	b510      	push	{r4, lr}
 8004600:	4604      	mov	r4, r0
 8004602:	bb33      	cbnz	r3, 8004652 <__sinit+0x56>
 8004604:	6483      	str	r3, [r0, #72]	; 0x48
 8004606:	64c3      	str	r3, [r0, #76]	; 0x4c
 8004608:	6503      	str	r3, [r0, #80]	; 0x50
 800460a:	4b12      	ldr	r3, [pc, #72]	; (8004654 <__sinit+0x58>)
 800460c:	4a12      	ldr	r2, [pc, #72]	; (8004658 <__sinit+0x5c>)
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	6282      	str	r2, [r0, #40]	; 0x28
 8004612:	4298      	cmp	r0, r3
 8004614:	bf04      	itt	eq
 8004616:	2301      	moveq	r3, #1
 8004618:	6183      	streq	r3, [r0, #24]
 800461a:	f000 f81f 	bl	800465c <__sfp>
 800461e:	6060      	str	r0, [r4, #4]
 8004620:	4620      	mov	r0, r4
 8004622:	f000 f81b 	bl	800465c <__sfp>
 8004626:	60a0      	str	r0, [r4, #8]
 8004628:	4620      	mov	r0, r4
 800462a:	f000 f817 	bl	800465c <__sfp>
 800462e:	2200      	movs	r2, #0
 8004630:	60e0      	str	r0, [r4, #12]
 8004632:	2104      	movs	r1, #4
 8004634:	6860      	ldr	r0, [r4, #4]
 8004636:	f7ff ffa7 	bl	8004588 <std.isra.0>
 800463a:	2201      	movs	r2, #1
 800463c:	2109      	movs	r1, #9
 800463e:	68a0      	ldr	r0, [r4, #8]
 8004640:	f7ff ffa2 	bl	8004588 <std.isra.0>
 8004644:	2202      	movs	r2, #2
 8004646:	2112      	movs	r1, #18
 8004648:	68e0      	ldr	r0, [r4, #12]
 800464a:	f7ff ff9d 	bl	8004588 <std.isra.0>
 800464e:	2301      	movs	r3, #1
 8004650:	61a3      	str	r3, [r4, #24]
 8004652:	bd10      	pop	{r4, pc}
 8004654:	08005714 	.word	0x08005714
 8004658:	0800457d 	.word	0x0800457d

0800465c <__sfp>:
 800465c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800465e:	4b1c      	ldr	r3, [pc, #112]	; (80046d0 <__sfp+0x74>)
 8004660:	681e      	ldr	r6, [r3, #0]
 8004662:	69b3      	ldr	r3, [r6, #24]
 8004664:	4607      	mov	r7, r0
 8004666:	b913      	cbnz	r3, 800466e <__sfp+0x12>
 8004668:	4630      	mov	r0, r6
 800466a:	f7ff ffc7 	bl	80045fc <__sinit>
 800466e:	3648      	adds	r6, #72	; 0x48
 8004670:	68b4      	ldr	r4, [r6, #8]
 8004672:	6873      	ldr	r3, [r6, #4]
 8004674:	3b01      	subs	r3, #1
 8004676:	d503      	bpl.n	8004680 <__sfp+0x24>
 8004678:	6833      	ldr	r3, [r6, #0]
 800467a:	b133      	cbz	r3, 800468a <__sfp+0x2e>
 800467c:	6836      	ldr	r6, [r6, #0]
 800467e:	e7f7      	b.n	8004670 <__sfp+0x14>
 8004680:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004684:	b16d      	cbz	r5, 80046a2 <__sfp+0x46>
 8004686:	3468      	adds	r4, #104	; 0x68
 8004688:	e7f4      	b.n	8004674 <__sfp+0x18>
 800468a:	2104      	movs	r1, #4
 800468c:	4638      	mov	r0, r7
 800468e:	f7ff ff9f 	bl	80045d0 <__sfmoreglue>
 8004692:	6030      	str	r0, [r6, #0]
 8004694:	2800      	cmp	r0, #0
 8004696:	d1f1      	bne.n	800467c <__sfp+0x20>
 8004698:	230c      	movs	r3, #12
 800469a:	603b      	str	r3, [r7, #0]
 800469c:	4604      	mov	r4, r0
 800469e:	4620      	mov	r0, r4
 80046a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80046a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80046a6:	81e3      	strh	r3, [r4, #14]
 80046a8:	2301      	movs	r3, #1
 80046aa:	81a3      	strh	r3, [r4, #12]
 80046ac:	6665      	str	r5, [r4, #100]	; 0x64
 80046ae:	6025      	str	r5, [r4, #0]
 80046b0:	60a5      	str	r5, [r4, #8]
 80046b2:	6065      	str	r5, [r4, #4]
 80046b4:	6125      	str	r5, [r4, #16]
 80046b6:	6165      	str	r5, [r4, #20]
 80046b8:	61a5      	str	r5, [r4, #24]
 80046ba:	2208      	movs	r2, #8
 80046bc:	4629      	mov	r1, r5
 80046be:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80046c2:	f000 f8d2 	bl	800486a <memset>
 80046c6:	6365      	str	r5, [r4, #52]	; 0x34
 80046c8:	63a5      	str	r5, [r4, #56]	; 0x38
 80046ca:	64a5      	str	r5, [r4, #72]	; 0x48
 80046cc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80046ce:	e7e6      	b.n	800469e <__sfp+0x42>
 80046d0:	08005714 	.word	0x08005714

080046d4 <_fwalk_reent>:
 80046d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80046d8:	4680      	mov	r8, r0
 80046da:	4689      	mov	r9, r1
 80046dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80046e0:	2600      	movs	r6, #0
 80046e2:	b914      	cbnz	r4, 80046ea <_fwalk_reent+0x16>
 80046e4:	4630      	mov	r0, r6
 80046e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80046ea:	68a5      	ldr	r5, [r4, #8]
 80046ec:	6867      	ldr	r7, [r4, #4]
 80046ee:	3f01      	subs	r7, #1
 80046f0:	d501      	bpl.n	80046f6 <_fwalk_reent+0x22>
 80046f2:	6824      	ldr	r4, [r4, #0]
 80046f4:	e7f5      	b.n	80046e2 <_fwalk_reent+0xe>
 80046f6:	89ab      	ldrh	r3, [r5, #12]
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	d907      	bls.n	800470c <_fwalk_reent+0x38>
 80046fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004700:	3301      	adds	r3, #1
 8004702:	d003      	beq.n	800470c <_fwalk_reent+0x38>
 8004704:	4629      	mov	r1, r5
 8004706:	4640      	mov	r0, r8
 8004708:	47c8      	blx	r9
 800470a:	4306      	orrs	r6, r0
 800470c:	3568      	adds	r5, #104	; 0x68
 800470e:	e7ee      	b.n	80046ee <_fwalk_reent+0x1a>

08004710 <__libc_init_array>:
 8004710:	b570      	push	{r4, r5, r6, lr}
 8004712:	4e0d      	ldr	r6, [pc, #52]	; (8004748 <__libc_init_array+0x38>)
 8004714:	4c0d      	ldr	r4, [pc, #52]	; (800474c <__libc_init_array+0x3c>)
 8004716:	1ba4      	subs	r4, r4, r6
 8004718:	10a4      	asrs	r4, r4, #2
 800471a:	2500      	movs	r5, #0
 800471c:	42a5      	cmp	r5, r4
 800471e:	d109      	bne.n	8004734 <__libc_init_array+0x24>
 8004720:	4e0b      	ldr	r6, [pc, #44]	; (8004750 <__libc_init_array+0x40>)
 8004722:	4c0c      	ldr	r4, [pc, #48]	; (8004754 <__libc_init_array+0x44>)
 8004724:	f000 fd36 	bl	8005194 <_init>
 8004728:	1ba4      	subs	r4, r4, r6
 800472a:	10a4      	asrs	r4, r4, #2
 800472c:	2500      	movs	r5, #0
 800472e:	42a5      	cmp	r5, r4
 8004730:	d105      	bne.n	800473e <__libc_init_array+0x2e>
 8004732:	bd70      	pop	{r4, r5, r6, pc}
 8004734:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004738:	4798      	blx	r3
 800473a:	3501      	adds	r5, #1
 800473c:	e7ee      	b.n	800471c <__libc_init_array+0xc>
 800473e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004742:	4798      	blx	r3
 8004744:	3501      	adds	r5, #1
 8004746:	e7f2      	b.n	800472e <__libc_init_array+0x1e>
 8004748:	2000021c 	.word	0x2000021c
 800474c:	2000021c 	.word	0x2000021c
 8004750:	2000021c 	.word	0x2000021c
 8004754:	20000228 	.word	0x20000228

08004758 <malloc>:
 8004758:	4b02      	ldr	r3, [pc, #8]	; (8004764 <malloc+0xc>)
 800475a:	4601      	mov	r1, r0
 800475c:	6818      	ldr	r0, [r3, #0]
 800475e:	f7ff bc11 	b.w	8003f84 <__wrap__malloc_r>
 8004762:	bf00      	nop
 8004764:	200001b8 	.word	0x200001b8

08004768 <free>:
 8004768:	4b02      	ldr	r3, [pc, #8]	; (8004774 <free+0xc>)
 800476a:	4601      	mov	r1, r0
 800476c:	6818      	ldr	r0, [r3, #0]
 800476e:	f7ff bc0d 	b.w	8003f8c <__wrap__free_r>
 8004772:	bf00      	nop
 8004774:	200001b8 	.word	0x200001b8
	...

08004780 <memchr>:
 8004780:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8004784:	2a10      	cmp	r2, #16
 8004786:	db2b      	blt.n	80047e0 <memchr+0x60>
 8004788:	f010 0f07 	tst.w	r0, #7
 800478c:	d008      	beq.n	80047a0 <memchr+0x20>
 800478e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004792:	3a01      	subs	r2, #1
 8004794:	428b      	cmp	r3, r1
 8004796:	d02d      	beq.n	80047f4 <memchr+0x74>
 8004798:	f010 0f07 	tst.w	r0, #7
 800479c:	b342      	cbz	r2, 80047f0 <memchr+0x70>
 800479e:	d1f6      	bne.n	800478e <memchr+0xe>
 80047a0:	b4f0      	push	{r4, r5, r6, r7}
 80047a2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80047a6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80047aa:	f022 0407 	bic.w	r4, r2, #7
 80047ae:	f07f 0700 	mvns.w	r7, #0
 80047b2:	2300      	movs	r3, #0
 80047b4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80047b8:	3c08      	subs	r4, #8
 80047ba:	ea85 0501 	eor.w	r5, r5, r1
 80047be:	ea86 0601 	eor.w	r6, r6, r1
 80047c2:	fa85 f547 	uadd8	r5, r5, r7
 80047c6:	faa3 f587 	sel	r5, r3, r7
 80047ca:	fa86 f647 	uadd8	r6, r6, r7
 80047ce:	faa5 f687 	sel	r6, r5, r7
 80047d2:	b98e      	cbnz	r6, 80047f8 <memchr+0x78>
 80047d4:	d1ee      	bne.n	80047b4 <memchr+0x34>
 80047d6:	bcf0      	pop	{r4, r5, r6, r7}
 80047d8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80047dc:	f002 0207 	and.w	r2, r2, #7
 80047e0:	b132      	cbz	r2, 80047f0 <memchr+0x70>
 80047e2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80047e6:	3a01      	subs	r2, #1
 80047e8:	ea83 0301 	eor.w	r3, r3, r1
 80047ec:	b113      	cbz	r3, 80047f4 <memchr+0x74>
 80047ee:	d1f8      	bne.n	80047e2 <memchr+0x62>
 80047f0:	2000      	movs	r0, #0
 80047f2:	4770      	bx	lr
 80047f4:	3801      	subs	r0, #1
 80047f6:	4770      	bx	lr
 80047f8:	2d00      	cmp	r5, #0
 80047fa:	bf06      	itte	eq
 80047fc:	4635      	moveq	r5, r6
 80047fe:	3803      	subeq	r0, #3
 8004800:	3807      	subne	r0, #7
 8004802:	f015 0f01 	tst.w	r5, #1
 8004806:	d107      	bne.n	8004818 <memchr+0x98>
 8004808:	3001      	adds	r0, #1
 800480a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800480e:	bf02      	ittt	eq
 8004810:	3001      	addeq	r0, #1
 8004812:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8004816:	3001      	addeq	r0, #1
 8004818:	bcf0      	pop	{r4, r5, r6, r7}
 800481a:	3801      	subs	r0, #1
 800481c:	4770      	bx	lr
 800481e:	bf00      	nop

08004820 <memcpy>:
 8004820:	b510      	push	{r4, lr}
 8004822:	1e43      	subs	r3, r0, #1
 8004824:	440a      	add	r2, r1
 8004826:	4291      	cmp	r1, r2
 8004828:	d100      	bne.n	800482c <memcpy+0xc>
 800482a:	bd10      	pop	{r4, pc}
 800482c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004830:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004834:	e7f7      	b.n	8004826 <memcpy+0x6>

08004836 <memmove>:
 8004836:	4288      	cmp	r0, r1
 8004838:	b510      	push	{r4, lr}
 800483a:	eb01 0302 	add.w	r3, r1, r2
 800483e:	d803      	bhi.n	8004848 <memmove+0x12>
 8004840:	1e42      	subs	r2, r0, #1
 8004842:	4299      	cmp	r1, r3
 8004844:	d10c      	bne.n	8004860 <memmove+0x2a>
 8004846:	bd10      	pop	{r4, pc}
 8004848:	4298      	cmp	r0, r3
 800484a:	d2f9      	bcs.n	8004840 <memmove+0xa>
 800484c:	1881      	adds	r1, r0, r2
 800484e:	1ad2      	subs	r2, r2, r3
 8004850:	42d3      	cmn	r3, r2
 8004852:	d100      	bne.n	8004856 <memmove+0x20>
 8004854:	bd10      	pop	{r4, pc}
 8004856:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800485a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800485e:	e7f7      	b.n	8004850 <memmove+0x1a>
 8004860:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004864:	f802 4f01 	strb.w	r4, [r2, #1]!
 8004868:	e7eb      	b.n	8004842 <memmove+0xc>

0800486a <memset>:
 800486a:	4402      	add	r2, r0
 800486c:	4603      	mov	r3, r0
 800486e:	4293      	cmp	r3, r2
 8004870:	d100      	bne.n	8004874 <memset+0xa>
 8004872:	4770      	bx	lr
 8004874:	f803 1b01 	strb.w	r1, [r3], #1
 8004878:	e7f9      	b.n	800486e <memset+0x4>
	...

0800487c <_free_r>:
 800487c:	b538      	push	{r3, r4, r5, lr}
 800487e:	4605      	mov	r5, r0
 8004880:	2900      	cmp	r1, #0
 8004882:	d045      	beq.n	8004910 <_free_r+0x94>
 8004884:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004888:	1f0c      	subs	r4, r1, #4
 800488a:	2b00      	cmp	r3, #0
 800488c:	bfb8      	it	lt
 800488e:	18e4      	addlt	r4, r4, r3
 8004890:	f7ff fc9d 	bl	80041ce <__malloc_lock>
 8004894:	4a1f      	ldr	r2, [pc, #124]	; (8004914 <_free_r+0x98>)
 8004896:	6813      	ldr	r3, [r2, #0]
 8004898:	4610      	mov	r0, r2
 800489a:	b933      	cbnz	r3, 80048aa <_free_r+0x2e>
 800489c:	6063      	str	r3, [r4, #4]
 800489e:	6014      	str	r4, [r2, #0]
 80048a0:	4628      	mov	r0, r5
 80048a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80048a6:	f7ff bc96 	b.w	80041d6 <__malloc_unlock>
 80048aa:	42a3      	cmp	r3, r4
 80048ac:	d90c      	bls.n	80048c8 <_free_r+0x4c>
 80048ae:	6821      	ldr	r1, [r4, #0]
 80048b0:	1862      	adds	r2, r4, r1
 80048b2:	4293      	cmp	r3, r2
 80048b4:	bf04      	itt	eq
 80048b6:	681a      	ldreq	r2, [r3, #0]
 80048b8:	685b      	ldreq	r3, [r3, #4]
 80048ba:	6063      	str	r3, [r4, #4]
 80048bc:	bf04      	itt	eq
 80048be:	1852      	addeq	r2, r2, r1
 80048c0:	6022      	streq	r2, [r4, #0]
 80048c2:	6004      	str	r4, [r0, #0]
 80048c4:	e7ec      	b.n	80048a0 <_free_r+0x24>
 80048c6:	4613      	mov	r3, r2
 80048c8:	685a      	ldr	r2, [r3, #4]
 80048ca:	b10a      	cbz	r2, 80048d0 <_free_r+0x54>
 80048cc:	42a2      	cmp	r2, r4
 80048ce:	d9fa      	bls.n	80048c6 <_free_r+0x4a>
 80048d0:	6819      	ldr	r1, [r3, #0]
 80048d2:	1858      	adds	r0, r3, r1
 80048d4:	42a0      	cmp	r0, r4
 80048d6:	d10b      	bne.n	80048f0 <_free_r+0x74>
 80048d8:	6820      	ldr	r0, [r4, #0]
 80048da:	4401      	add	r1, r0
 80048dc:	1858      	adds	r0, r3, r1
 80048de:	4282      	cmp	r2, r0
 80048e0:	6019      	str	r1, [r3, #0]
 80048e2:	d1dd      	bne.n	80048a0 <_free_r+0x24>
 80048e4:	6810      	ldr	r0, [r2, #0]
 80048e6:	6852      	ldr	r2, [r2, #4]
 80048e8:	605a      	str	r2, [r3, #4]
 80048ea:	4401      	add	r1, r0
 80048ec:	6019      	str	r1, [r3, #0]
 80048ee:	e7d7      	b.n	80048a0 <_free_r+0x24>
 80048f0:	d902      	bls.n	80048f8 <_free_r+0x7c>
 80048f2:	230c      	movs	r3, #12
 80048f4:	602b      	str	r3, [r5, #0]
 80048f6:	e7d3      	b.n	80048a0 <_free_r+0x24>
 80048f8:	6820      	ldr	r0, [r4, #0]
 80048fa:	1821      	adds	r1, r4, r0
 80048fc:	428a      	cmp	r2, r1
 80048fe:	bf04      	itt	eq
 8004900:	6811      	ldreq	r1, [r2, #0]
 8004902:	6852      	ldreq	r2, [r2, #4]
 8004904:	6062      	str	r2, [r4, #4]
 8004906:	bf04      	itt	eq
 8004908:	1809      	addeq	r1, r1, r0
 800490a:	6021      	streq	r1, [r4, #0]
 800490c:	605c      	str	r4, [r3, #4]
 800490e:	e7c7      	b.n	80048a0 <_free_r+0x24>
 8004910:	bd38      	pop	{r3, r4, r5, pc}
 8004912:	bf00      	nop
 8004914:	20001cd0 	.word	0x20001cd0

08004918 <_malloc_r>:
 8004918:	b570      	push	{r4, r5, r6, lr}
 800491a:	1ccd      	adds	r5, r1, #3
 800491c:	f025 0503 	bic.w	r5, r5, #3
 8004920:	3508      	adds	r5, #8
 8004922:	2d0c      	cmp	r5, #12
 8004924:	bf38      	it	cc
 8004926:	250c      	movcc	r5, #12
 8004928:	2d00      	cmp	r5, #0
 800492a:	4606      	mov	r6, r0
 800492c:	db01      	blt.n	8004932 <_malloc_r+0x1a>
 800492e:	42a9      	cmp	r1, r5
 8004930:	d903      	bls.n	800493a <_malloc_r+0x22>
 8004932:	230c      	movs	r3, #12
 8004934:	6033      	str	r3, [r6, #0]
 8004936:	2000      	movs	r0, #0
 8004938:	bd70      	pop	{r4, r5, r6, pc}
 800493a:	f7ff fc48 	bl	80041ce <__malloc_lock>
 800493e:	4a23      	ldr	r2, [pc, #140]	; (80049cc <_malloc_r+0xb4>)
 8004940:	6814      	ldr	r4, [r2, #0]
 8004942:	4621      	mov	r1, r4
 8004944:	b991      	cbnz	r1, 800496c <_malloc_r+0x54>
 8004946:	4c22      	ldr	r4, [pc, #136]	; (80049d0 <_malloc_r+0xb8>)
 8004948:	6823      	ldr	r3, [r4, #0]
 800494a:	b91b      	cbnz	r3, 8004954 <_malloc_r+0x3c>
 800494c:	4630      	mov	r0, r6
 800494e:	f000 fa05 	bl	8004d5c <_sbrk_r>
 8004952:	6020      	str	r0, [r4, #0]
 8004954:	4629      	mov	r1, r5
 8004956:	4630      	mov	r0, r6
 8004958:	f000 fa00 	bl	8004d5c <_sbrk_r>
 800495c:	1c43      	adds	r3, r0, #1
 800495e:	d126      	bne.n	80049ae <_malloc_r+0x96>
 8004960:	230c      	movs	r3, #12
 8004962:	6033      	str	r3, [r6, #0]
 8004964:	4630      	mov	r0, r6
 8004966:	f7ff fc36 	bl	80041d6 <__malloc_unlock>
 800496a:	e7e4      	b.n	8004936 <_malloc_r+0x1e>
 800496c:	680b      	ldr	r3, [r1, #0]
 800496e:	1b5b      	subs	r3, r3, r5
 8004970:	d41a      	bmi.n	80049a8 <_malloc_r+0x90>
 8004972:	2b0b      	cmp	r3, #11
 8004974:	d90f      	bls.n	8004996 <_malloc_r+0x7e>
 8004976:	600b      	str	r3, [r1, #0]
 8004978:	50cd      	str	r5, [r1, r3]
 800497a:	18cc      	adds	r4, r1, r3
 800497c:	4630      	mov	r0, r6
 800497e:	f7ff fc2a 	bl	80041d6 <__malloc_unlock>
 8004982:	f104 000b 	add.w	r0, r4, #11
 8004986:	1d23      	adds	r3, r4, #4
 8004988:	f020 0007 	bic.w	r0, r0, #7
 800498c:	1ac3      	subs	r3, r0, r3
 800498e:	d01b      	beq.n	80049c8 <_malloc_r+0xb0>
 8004990:	425a      	negs	r2, r3
 8004992:	50e2      	str	r2, [r4, r3]
 8004994:	bd70      	pop	{r4, r5, r6, pc}
 8004996:	428c      	cmp	r4, r1
 8004998:	bf0d      	iteet	eq
 800499a:	6863      	ldreq	r3, [r4, #4]
 800499c:	684b      	ldrne	r3, [r1, #4]
 800499e:	6063      	strne	r3, [r4, #4]
 80049a0:	6013      	streq	r3, [r2, #0]
 80049a2:	bf18      	it	ne
 80049a4:	460c      	movne	r4, r1
 80049a6:	e7e9      	b.n	800497c <_malloc_r+0x64>
 80049a8:	460c      	mov	r4, r1
 80049aa:	6849      	ldr	r1, [r1, #4]
 80049ac:	e7ca      	b.n	8004944 <_malloc_r+0x2c>
 80049ae:	1cc4      	adds	r4, r0, #3
 80049b0:	f024 0403 	bic.w	r4, r4, #3
 80049b4:	42a0      	cmp	r0, r4
 80049b6:	d005      	beq.n	80049c4 <_malloc_r+0xac>
 80049b8:	1a21      	subs	r1, r4, r0
 80049ba:	4630      	mov	r0, r6
 80049bc:	f000 f9ce 	bl	8004d5c <_sbrk_r>
 80049c0:	3001      	adds	r0, #1
 80049c2:	d0cd      	beq.n	8004960 <_malloc_r+0x48>
 80049c4:	6025      	str	r5, [r4, #0]
 80049c6:	e7d9      	b.n	800497c <_malloc_r+0x64>
 80049c8:	bd70      	pop	{r4, r5, r6, pc}
 80049ca:	bf00      	nop
 80049cc:	20001cd0 	.word	0x20001cd0
 80049d0:	20001cd4 	.word	0x20001cd4

080049d4 <_realloc_r>:
 80049d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049d6:	4607      	mov	r7, r0
 80049d8:	4614      	mov	r4, r2
 80049da:	460e      	mov	r6, r1
 80049dc:	b921      	cbnz	r1, 80049e8 <_realloc_r+0x14>
 80049de:	4611      	mov	r1, r2
 80049e0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80049e4:	f7ff bace 	b.w	8003f84 <__wrap__malloc_r>
 80049e8:	b922      	cbnz	r2, 80049f4 <_realloc_r+0x20>
 80049ea:	f7ff facf 	bl	8003f8c <__wrap__free_r>
 80049ee:	4625      	mov	r5, r4
 80049f0:	4628      	mov	r0, r5
 80049f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80049f4:	f000 fa64 	bl	8004ec0 <_malloc_usable_size_r>
 80049f8:	4284      	cmp	r4, r0
 80049fa:	d90f      	bls.n	8004a1c <_realloc_r+0x48>
 80049fc:	4621      	mov	r1, r4
 80049fe:	4638      	mov	r0, r7
 8004a00:	f7ff fac0 	bl	8003f84 <__wrap__malloc_r>
 8004a04:	4605      	mov	r5, r0
 8004a06:	2800      	cmp	r0, #0
 8004a08:	d0f2      	beq.n	80049f0 <_realloc_r+0x1c>
 8004a0a:	4631      	mov	r1, r6
 8004a0c:	4622      	mov	r2, r4
 8004a0e:	f7ff ff07 	bl	8004820 <memcpy>
 8004a12:	4631      	mov	r1, r6
 8004a14:	4638      	mov	r0, r7
 8004a16:	f7ff fab9 	bl	8003f8c <__wrap__free_r>
 8004a1a:	e7e9      	b.n	80049f0 <_realloc_r+0x1c>
 8004a1c:	4635      	mov	r5, r6
 8004a1e:	e7e7      	b.n	80049f0 <_realloc_r+0x1c>

08004a20 <_printf_common>:
 8004a20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004a24:	4691      	mov	r9, r2
 8004a26:	461f      	mov	r7, r3
 8004a28:	688a      	ldr	r2, [r1, #8]
 8004a2a:	690b      	ldr	r3, [r1, #16]
 8004a2c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004a30:	4293      	cmp	r3, r2
 8004a32:	bfb8      	it	lt
 8004a34:	4613      	movlt	r3, r2
 8004a36:	f8c9 3000 	str.w	r3, [r9]
 8004a3a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004a3e:	4606      	mov	r6, r0
 8004a40:	460c      	mov	r4, r1
 8004a42:	b112      	cbz	r2, 8004a4a <_printf_common+0x2a>
 8004a44:	3301      	adds	r3, #1
 8004a46:	f8c9 3000 	str.w	r3, [r9]
 8004a4a:	6823      	ldr	r3, [r4, #0]
 8004a4c:	0699      	lsls	r1, r3, #26
 8004a4e:	bf42      	ittt	mi
 8004a50:	f8d9 3000 	ldrmi.w	r3, [r9]
 8004a54:	3302      	addmi	r3, #2
 8004a56:	f8c9 3000 	strmi.w	r3, [r9]
 8004a5a:	6825      	ldr	r5, [r4, #0]
 8004a5c:	f015 0506 	ands.w	r5, r5, #6
 8004a60:	d107      	bne.n	8004a72 <_printf_common+0x52>
 8004a62:	f104 0a19 	add.w	r10, r4, #25
 8004a66:	68e3      	ldr	r3, [r4, #12]
 8004a68:	f8d9 2000 	ldr.w	r2, [r9]
 8004a6c:	1a9b      	subs	r3, r3, r2
 8004a6e:	429d      	cmp	r5, r3
 8004a70:	db29      	blt.n	8004ac6 <_printf_common+0xa6>
 8004a72:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8004a76:	6822      	ldr	r2, [r4, #0]
 8004a78:	3300      	adds	r3, #0
 8004a7a:	bf18      	it	ne
 8004a7c:	2301      	movne	r3, #1
 8004a7e:	0692      	lsls	r2, r2, #26
 8004a80:	d42e      	bmi.n	8004ae0 <_printf_common+0xc0>
 8004a82:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004a86:	4639      	mov	r1, r7
 8004a88:	4630      	mov	r0, r6
 8004a8a:	47c0      	blx	r8
 8004a8c:	3001      	adds	r0, #1
 8004a8e:	d021      	beq.n	8004ad4 <_printf_common+0xb4>
 8004a90:	6823      	ldr	r3, [r4, #0]
 8004a92:	68e5      	ldr	r5, [r4, #12]
 8004a94:	f8d9 2000 	ldr.w	r2, [r9]
 8004a98:	f003 0306 	and.w	r3, r3, #6
 8004a9c:	2b04      	cmp	r3, #4
 8004a9e:	bf08      	it	eq
 8004aa0:	1aad      	subeq	r5, r5, r2
 8004aa2:	68a3      	ldr	r3, [r4, #8]
 8004aa4:	6922      	ldr	r2, [r4, #16]
 8004aa6:	bf0c      	ite	eq
 8004aa8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004aac:	2500      	movne	r5, #0
 8004aae:	4293      	cmp	r3, r2
 8004ab0:	bfc4      	itt	gt
 8004ab2:	1a9b      	subgt	r3, r3, r2
 8004ab4:	18ed      	addgt	r5, r5, r3
 8004ab6:	f04f 0900 	mov.w	r9, #0
 8004aba:	341a      	adds	r4, #26
 8004abc:	454d      	cmp	r5, r9
 8004abe:	d11b      	bne.n	8004af8 <_printf_common+0xd8>
 8004ac0:	2000      	movs	r0, #0
 8004ac2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004ac6:	2301      	movs	r3, #1
 8004ac8:	4652      	mov	r2, r10
 8004aca:	4639      	mov	r1, r7
 8004acc:	4630      	mov	r0, r6
 8004ace:	47c0      	blx	r8
 8004ad0:	3001      	adds	r0, #1
 8004ad2:	d103      	bne.n	8004adc <_printf_common+0xbc>
 8004ad4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004ad8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004adc:	3501      	adds	r5, #1
 8004ade:	e7c2      	b.n	8004a66 <_printf_common+0x46>
 8004ae0:	18e1      	adds	r1, r4, r3
 8004ae2:	1c5a      	adds	r2, r3, #1
 8004ae4:	2030      	movs	r0, #48	; 0x30
 8004ae6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004aea:	4422      	add	r2, r4
 8004aec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004af0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004af4:	3302      	adds	r3, #2
 8004af6:	e7c4      	b.n	8004a82 <_printf_common+0x62>
 8004af8:	2301      	movs	r3, #1
 8004afa:	4622      	mov	r2, r4
 8004afc:	4639      	mov	r1, r7
 8004afe:	4630      	mov	r0, r6
 8004b00:	47c0      	blx	r8
 8004b02:	3001      	adds	r0, #1
 8004b04:	d0e6      	beq.n	8004ad4 <_printf_common+0xb4>
 8004b06:	f109 0901 	add.w	r9, r9, #1
 8004b0a:	e7d7      	b.n	8004abc <_printf_common+0x9c>

08004b0c <_printf_i>:
 8004b0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004b10:	4617      	mov	r7, r2
 8004b12:	7e0a      	ldrb	r2, [r1, #24]
 8004b14:	b085      	sub	sp, #20
 8004b16:	2a6e      	cmp	r2, #110	; 0x6e
 8004b18:	4698      	mov	r8, r3
 8004b1a:	4606      	mov	r6, r0
 8004b1c:	460c      	mov	r4, r1
 8004b1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004b20:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8004b24:	f000 80bc 	beq.w	8004ca0 <_printf_i+0x194>
 8004b28:	d81a      	bhi.n	8004b60 <_printf_i+0x54>
 8004b2a:	2a63      	cmp	r2, #99	; 0x63
 8004b2c:	d02e      	beq.n	8004b8c <_printf_i+0x80>
 8004b2e:	d80a      	bhi.n	8004b46 <_printf_i+0x3a>
 8004b30:	2a00      	cmp	r2, #0
 8004b32:	f000 80c8 	beq.w	8004cc6 <_printf_i+0x1ba>
 8004b36:	2a58      	cmp	r2, #88	; 0x58
 8004b38:	f000 808a 	beq.w	8004c50 <_printf_i+0x144>
 8004b3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004b40:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8004b44:	e02a      	b.n	8004b9c <_printf_i+0x90>
 8004b46:	2a64      	cmp	r2, #100	; 0x64
 8004b48:	d001      	beq.n	8004b4e <_printf_i+0x42>
 8004b4a:	2a69      	cmp	r2, #105	; 0x69
 8004b4c:	d1f6      	bne.n	8004b3c <_printf_i+0x30>
 8004b4e:	6821      	ldr	r1, [r4, #0]
 8004b50:	681a      	ldr	r2, [r3, #0]
 8004b52:	f011 0f80 	tst.w	r1, #128	; 0x80
 8004b56:	d023      	beq.n	8004ba0 <_printf_i+0x94>
 8004b58:	1d11      	adds	r1, r2, #4
 8004b5a:	6019      	str	r1, [r3, #0]
 8004b5c:	6813      	ldr	r3, [r2, #0]
 8004b5e:	e027      	b.n	8004bb0 <_printf_i+0xa4>
 8004b60:	2a73      	cmp	r2, #115	; 0x73
 8004b62:	f000 80b4 	beq.w	8004cce <_printf_i+0x1c2>
 8004b66:	d808      	bhi.n	8004b7a <_printf_i+0x6e>
 8004b68:	2a6f      	cmp	r2, #111	; 0x6f
 8004b6a:	d02a      	beq.n	8004bc2 <_printf_i+0xb6>
 8004b6c:	2a70      	cmp	r2, #112	; 0x70
 8004b6e:	d1e5      	bne.n	8004b3c <_printf_i+0x30>
 8004b70:	680a      	ldr	r2, [r1, #0]
 8004b72:	f042 0220 	orr.w	r2, r2, #32
 8004b76:	600a      	str	r2, [r1, #0]
 8004b78:	e003      	b.n	8004b82 <_printf_i+0x76>
 8004b7a:	2a75      	cmp	r2, #117	; 0x75
 8004b7c:	d021      	beq.n	8004bc2 <_printf_i+0xb6>
 8004b7e:	2a78      	cmp	r2, #120	; 0x78
 8004b80:	d1dc      	bne.n	8004b3c <_printf_i+0x30>
 8004b82:	2278      	movs	r2, #120	; 0x78
 8004b84:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8004b88:	496e      	ldr	r1, [pc, #440]	; (8004d44 <_printf_i+0x238>)
 8004b8a:	e064      	b.n	8004c56 <_printf_i+0x14a>
 8004b8c:	681a      	ldr	r2, [r3, #0]
 8004b8e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8004b92:	1d11      	adds	r1, r2, #4
 8004b94:	6019      	str	r1, [r3, #0]
 8004b96:	6813      	ldr	r3, [r2, #0]
 8004b98:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004b9c:	2301      	movs	r3, #1
 8004b9e:	e0a3      	b.n	8004ce8 <_printf_i+0x1dc>
 8004ba0:	f011 0f40 	tst.w	r1, #64	; 0x40
 8004ba4:	f102 0104 	add.w	r1, r2, #4
 8004ba8:	6019      	str	r1, [r3, #0]
 8004baa:	d0d7      	beq.n	8004b5c <_printf_i+0x50>
 8004bac:	f9b2 3000 	ldrsh.w	r3, [r2]
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	da03      	bge.n	8004bbc <_printf_i+0xb0>
 8004bb4:	222d      	movs	r2, #45	; 0x2d
 8004bb6:	425b      	negs	r3, r3
 8004bb8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8004bbc:	4962      	ldr	r1, [pc, #392]	; (8004d48 <_printf_i+0x23c>)
 8004bbe:	220a      	movs	r2, #10
 8004bc0:	e017      	b.n	8004bf2 <_printf_i+0xe6>
 8004bc2:	6820      	ldr	r0, [r4, #0]
 8004bc4:	6819      	ldr	r1, [r3, #0]
 8004bc6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8004bca:	d003      	beq.n	8004bd4 <_printf_i+0xc8>
 8004bcc:	1d08      	adds	r0, r1, #4
 8004bce:	6018      	str	r0, [r3, #0]
 8004bd0:	680b      	ldr	r3, [r1, #0]
 8004bd2:	e006      	b.n	8004be2 <_printf_i+0xd6>
 8004bd4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004bd8:	f101 0004 	add.w	r0, r1, #4
 8004bdc:	6018      	str	r0, [r3, #0]
 8004bde:	d0f7      	beq.n	8004bd0 <_printf_i+0xc4>
 8004be0:	880b      	ldrh	r3, [r1, #0]
 8004be2:	4959      	ldr	r1, [pc, #356]	; (8004d48 <_printf_i+0x23c>)
 8004be4:	2a6f      	cmp	r2, #111	; 0x6f
 8004be6:	bf14      	ite	ne
 8004be8:	220a      	movne	r2, #10
 8004bea:	2208      	moveq	r2, #8
 8004bec:	2000      	movs	r0, #0
 8004bee:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8004bf2:	6865      	ldr	r5, [r4, #4]
 8004bf4:	60a5      	str	r5, [r4, #8]
 8004bf6:	2d00      	cmp	r5, #0
 8004bf8:	f2c0 809c 	blt.w	8004d34 <_printf_i+0x228>
 8004bfc:	6820      	ldr	r0, [r4, #0]
 8004bfe:	f020 0004 	bic.w	r0, r0, #4
 8004c02:	6020      	str	r0, [r4, #0]
 8004c04:	2b00      	cmp	r3, #0
 8004c06:	d13f      	bne.n	8004c88 <_printf_i+0x17c>
 8004c08:	2d00      	cmp	r5, #0
 8004c0a:	f040 8095 	bne.w	8004d38 <_printf_i+0x22c>
 8004c0e:	4675      	mov	r5, lr
 8004c10:	2a08      	cmp	r2, #8
 8004c12:	d10b      	bne.n	8004c2c <_printf_i+0x120>
 8004c14:	6823      	ldr	r3, [r4, #0]
 8004c16:	07da      	lsls	r2, r3, #31
 8004c18:	d508      	bpl.n	8004c2c <_printf_i+0x120>
 8004c1a:	6923      	ldr	r3, [r4, #16]
 8004c1c:	6862      	ldr	r2, [r4, #4]
 8004c1e:	429a      	cmp	r2, r3
 8004c20:	bfde      	ittt	le
 8004c22:	2330      	movle	r3, #48	; 0x30
 8004c24:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004c28:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8004c2c:	ebae 0305 	sub.w	r3, lr, r5
 8004c30:	6123      	str	r3, [r4, #16]
 8004c32:	f8cd 8000 	str.w	r8, [sp]
 8004c36:	463b      	mov	r3, r7
 8004c38:	aa03      	add	r2, sp, #12
 8004c3a:	4621      	mov	r1, r4
 8004c3c:	4630      	mov	r0, r6
 8004c3e:	f7ff feef 	bl	8004a20 <_printf_common>
 8004c42:	3001      	adds	r0, #1
 8004c44:	d155      	bne.n	8004cf2 <_printf_i+0x1e6>
 8004c46:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004c4a:	b005      	add	sp, #20
 8004c4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004c50:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8004c54:	493c      	ldr	r1, [pc, #240]	; (8004d48 <_printf_i+0x23c>)
 8004c56:	6822      	ldr	r2, [r4, #0]
 8004c58:	6818      	ldr	r0, [r3, #0]
 8004c5a:	f012 0f80 	tst.w	r2, #128	; 0x80
 8004c5e:	f100 0504 	add.w	r5, r0, #4
 8004c62:	601d      	str	r5, [r3, #0]
 8004c64:	d001      	beq.n	8004c6a <_printf_i+0x15e>
 8004c66:	6803      	ldr	r3, [r0, #0]
 8004c68:	e002      	b.n	8004c70 <_printf_i+0x164>
 8004c6a:	0655      	lsls	r5, r2, #25
 8004c6c:	d5fb      	bpl.n	8004c66 <_printf_i+0x15a>
 8004c6e:	8803      	ldrh	r3, [r0, #0]
 8004c70:	07d0      	lsls	r0, r2, #31
 8004c72:	bf44      	itt	mi
 8004c74:	f042 0220 	orrmi.w	r2, r2, #32
 8004c78:	6022      	strmi	r2, [r4, #0]
 8004c7a:	b91b      	cbnz	r3, 8004c84 <_printf_i+0x178>
 8004c7c:	6822      	ldr	r2, [r4, #0]
 8004c7e:	f022 0220 	bic.w	r2, r2, #32
 8004c82:	6022      	str	r2, [r4, #0]
 8004c84:	2210      	movs	r2, #16
 8004c86:	e7b1      	b.n	8004bec <_printf_i+0xe0>
 8004c88:	4675      	mov	r5, lr
 8004c8a:	fbb3 f0f2 	udiv	r0, r3, r2
 8004c8e:	fb02 3310 	mls	r3, r2, r0, r3
 8004c92:	5ccb      	ldrb	r3, [r1, r3]
 8004c94:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8004c98:	4603      	mov	r3, r0
 8004c9a:	2800      	cmp	r0, #0
 8004c9c:	d1f5      	bne.n	8004c8a <_printf_i+0x17e>
 8004c9e:	e7b7      	b.n	8004c10 <_printf_i+0x104>
 8004ca0:	6808      	ldr	r0, [r1, #0]
 8004ca2:	681a      	ldr	r2, [r3, #0]
 8004ca4:	6949      	ldr	r1, [r1, #20]
 8004ca6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8004caa:	d004      	beq.n	8004cb6 <_printf_i+0x1aa>
 8004cac:	1d10      	adds	r0, r2, #4
 8004cae:	6018      	str	r0, [r3, #0]
 8004cb0:	6813      	ldr	r3, [r2, #0]
 8004cb2:	6019      	str	r1, [r3, #0]
 8004cb4:	e007      	b.n	8004cc6 <_printf_i+0x1ba>
 8004cb6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004cba:	f102 0004 	add.w	r0, r2, #4
 8004cbe:	6018      	str	r0, [r3, #0]
 8004cc0:	6813      	ldr	r3, [r2, #0]
 8004cc2:	d0f6      	beq.n	8004cb2 <_printf_i+0x1a6>
 8004cc4:	8019      	strh	r1, [r3, #0]
 8004cc6:	2300      	movs	r3, #0
 8004cc8:	6123      	str	r3, [r4, #16]
 8004cca:	4675      	mov	r5, lr
 8004ccc:	e7b1      	b.n	8004c32 <_printf_i+0x126>
 8004cce:	681a      	ldr	r2, [r3, #0]
 8004cd0:	1d11      	adds	r1, r2, #4
 8004cd2:	6019      	str	r1, [r3, #0]
 8004cd4:	6815      	ldr	r5, [r2, #0]
 8004cd6:	6862      	ldr	r2, [r4, #4]
 8004cd8:	2100      	movs	r1, #0
 8004cda:	4628      	mov	r0, r5
 8004cdc:	f7ff fd50 	bl	8004780 <memchr>
 8004ce0:	b108      	cbz	r0, 8004ce6 <_printf_i+0x1da>
 8004ce2:	1b40      	subs	r0, r0, r5
 8004ce4:	6060      	str	r0, [r4, #4]
 8004ce6:	6863      	ldr	r3, [r4, #4]
 8004ce8:	6123      	str	r3, [r4, #16]
 8004cea:	2300      	movs	r3, #0
 8004cec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004cf0:	e79f      	b.n	8004c32 <_printf_i+0x126>
 8004cf2:	6923      	ldr	r3, [r4, #16]
 8004cf4:	462a      	mov	r2, r5
 8004cf6:	4639      	mov	r1, r7
 8004cf8:	4630      	mov	r0, r6
 8004cfa:	47c0      	blx	r8
 8004cfc:	3001      	adds	r0, #1
 8004cfe:	d0a2      	beq.n	8004c46 <_printf_i+0x13a>
 8004d00:	6823      	ldr	r3, [r4, #0]
 8004d02:	079b      	lsls	r3, r3, #30
 8004d04:	d507      	bpl.n	8004d16 <_printf_i+0x20a>
 8004d06:	2500      	movs	r5, #0
 8004d08:	f104 0919 	add.w	r9, r4, #25
 8004d0c:	68e3      	ldr	r3, [r4, #12]
 8004d0e:	9a03      	ldr	r2, [sp, #12]
 8004d10:	1a9b      	subs	r3, r3, r2
 8004d12:	429d      	cmp	r5, r3
 8004d14:	db05      	blt.n	8004d22 <_printf_i+0x216>
 8004d16:	68e0      	ldr	r0, [r4, #12]
 8004d18:	9b03      	ldr	r3, [sp, #12]
 8004d1a:	4298      	cmp	r0, r3
 8004d1c:	bfb8      	it	lt
 8004d1e:	4618      	movlt	r0, r3
 8004d20:	e793      	b.n	8004c4a <_printf_i+0x13e>
 8004d22:	2301      	movs	r3, #1
 8004d24:	464a      	mov	r2, r9
 8004d26:	4639      	mov	r1, r7
 8004d28:	4630      	mov	r0, r6
 8004d2a:	47c0      	blx	r8
 8004d2c:	3001      	adds	r0, #1
 8004d2e:	d08a      	beq.n	8004c46 <_printf_i+0x13a>
 8004d30:	3501      	adds	r5, #1
 8004d32:	e7eb      	b.n	8004d0c <_printf_i+0x200>
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d1a7      	bne.n	8004c88 <_printf_i+0x17c>
 8004d38:	780b      	ldrb	r3, [r1, #0]
 8004d3a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004d3e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004d42:	e765      	b.n	8004c10 <_printf_i+0x104>
 8004d44:	08005729 	.word	0x08005729
 8004d48:	08005718 	.word	0x08005718

08004d4c <realloc>:
 8004d4c:	4b02      	ldr	r3, [pc, #8]	; (8004d58 <realloc+0xc>)
 8004d4e:	460a      	mov	r2, r1
 8004d50:	4601      	mov	r1, r0
 8004d52:	6818      	ldr	r0, [r3, #0]
 8004d54:	f7ff b918 	b.w	8003f88 <__wrap__realloc_r>
 8004d58:	200001b8 	.word	0x200001b8

08004d5c <_sbrk_r>:
 8004d5c:	b538      	push	{r3, r4, r5, lr}
 8004d5e:	4c06      	ldr	r4, [pc, #24]	; (8004d78 <_sbrk_r+0x1c>)
 8004d60:	2300      	movs	r3, #0
 8004d62:	4605      	mov	r5, r0
 8004d64:	4608      	mov	r0, r1
 8004d66:	6023      	str	r3, [r4, #0]
 8004d68:	f7ff f9f8 	bl	800415c <_sbrk>
 8004d6c:	1c43      	adds	r3, r0, #1
 8004d6e:	d102      	bne.n	8004d76 <_sbrk_r+0x1a>
 8004d70:	6823      	ldr	r3, [r4, #0]
 8004d72:	b103      	cbz	r3, 8004d76 <_sbrk_r+0x1a>
 8004d74:	602b      	str	r3, [r5, #0]
 8004d76:	bd38      	pop	{r3, r4, r5, pc}
 8004d78:	200027c4 	.word	0x200027c4

08004d7c <__sread>:
 8004d7c:	b510      	push	{r4, lr}
 8004d7e:	460c      	mov	r4, r1
 8004d80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004d84:	f000 f9f4 	bl	8005170 <_read_r>
 8004d88:	2800      	cmp	r0, #0
 8004d8a:	bfab      	itete	ge
 8004d8c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004d8e:	89a3      	ldrhlt	r3, [r4, #12]
 8004d90:	181b      	addge	r3, r3, r0
 8004d92:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004d96:	bfac      	ite	ge
 8004d98:	6563      	strge	r3, [r4, #84]	; 0x54
 8004d9a:	81a3      	strhlt	r3, [r4, #12]
 8004d9c:	bd10      	pop	{r4, pc}

08004d9e <__swrite>:
 8004d9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004da2:	461f      	mov	r7, r3
 8004da4:	898b      	ldrh	r3, [r1, #12]
 8004da6:	05db      	lsls	r3, r3, #23
 8004da8:	4605      	mov	r5, r0
 8004daa:	460c      	mov	r4, r1
 8004dac:	4616      	mov	r6, r2
 8004dae:	d505      	bpl.n	8004dbc <__swrite+0x1e>
 8004db0:	2302      	movs	r3, #2
 8004db2:	2200      	movs	r2, #0
 8004db4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004db8:	f000 f870 	bl	8004e9c <_lseek_r>
 8004dbc:	89a3      	ldrh	r3, [r4, #12]
 8004dbe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004dc2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004dc6:	81a3      	strh	r3, [r4, #12]
 8004dc8:	4632      	mov	r2, r6
 8004dca:	463b      	mov	r3, r7
 8004dcc:	4628      	mov	r0, r5
 8004dce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004dd2:	f000 b841 	b.w	8004e58 <_write_r>

08004dd6 <__sseek>:
 8004dd6:	b510      	push	{r4, lr}
 8004dd8:	460c      	mov	r4, r1
 8004dda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004dde:	f000 f85d 	bl	8004e9c <_lseek_r>
 8004de2:	1c43      	adds	r3, r0, #1
 8004de4:	89a3      	ldrh	r3, [r4, #12]
 8004de6:	bf15      	itete	ne
 8004de8:	6560      	strne	r0, [r4, #84]	; 0x54
 8004dea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004dee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004df2:	81a3      	strheq	r3, [r4, #12]
 8004df4:	bf18      	it	ne
 8004df6:	81a3      	strhne	r3, [r4, #12]
 8004df8:	bd10      	pop	{r4, pc}

08004dfa <__sclose>:
 8004dfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004dfe:	f000 b83d 	b.w	8004e7c <_close_r>

08004e02 <strlen>:
 8004e02:	4603      	mov	r3, r0
 8004e04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004e08:	2a00      	cmp	r2, #0
 8004e0a:	d1fb      	bne.n	8004e04 <strlen+0x2>
 8004e0c:	1a18      	subs	r0, r3, r0
 8004e0e:	3801      	subs	r0, #1
 8004e10:	4770      	bx	lr

08004e12 <_vsiprintf_r>:
 8004e12:	b510      	push	{r4, lr}
 8004e14:	b09a      	sub	sp, #104	; 0x68
 8004e16:	f44f 7402 	mov.w	r4, #520	; 0x208
 8004e1a:	9100      	str	r1, [sp, #0]
 8004e1c:	9104      	str	r1, [sp, #16]
 8004e1e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004e22:	9102      	str	r1, [sp, #8]
 8004e24:	9105      	str	r1, [sp, #20]
 8004e26:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004e2a:	f8ad 100e 	strh.w	r1, [sp, #14]
 8004e2e:	4669      	mov	r1, sp
 8004e30:	f8ad 400c 	strh.w	r4, [sp, #12]
 8004e34:	f000 f8a8 	bl	8004f88 <_svfiprintf_r>
 8004e38:	9b00      	ldr	r3, [sp, #0]
 8004e3a:	2200      	movs	r2, #0
 8004e3c:	701a      	strb	r2, [r3, #0]
 8004e3e:	b01a      	add	sp, #104	; 0x68
 8004e40:	bd10      	pop	{r4, pc}
	...

08004e44 <vsiprintf>:
 8004e44:	4613      	mov	r3, r2
 8004e46:	460a      	mov	r2, r1
 8004e48:	4601      	mov	r1, r0
 8004e4a:	4802      	ldr	r0, [pc, #8]	; (8004e54 <vsiprintf+0x10>)
 8004e4c:	6800      	ldr	r0, [r0, #0]
 8004e4e:	f7ff bfe0 	b.w	8004e12 <_vsiprintf_r>
 8004e52:	bf00      	nop
 8004e54:	200001b8 	.word	0x200001b8

08004e58 <_write_r>:
 8004e58:	b538      	push	{r3, r4, r5, lr}
 8004e5a:	4c07      	ldr	r4, [pc, #28]	; (8004e78 <_write_r+0x20>)
 8004e5c:	4605      	mov	r5, r0
 8004e5e:	4608      	mov	r0, r1
 8004e60:	4611      	mov	r1, r2
 8004e62:	2200      	movs	r2, #0
 8004e64:	6022      	str	r2, [r4, #0]
 8004e66:	461a      	mov	r2, r3
 8004e68:	f7ff f8e6 	bl	8004038 <_write>
 8004e6c:	1c43      	adds	r3, r0, #1
 8004e6e:	d102      	bne.n	8004e76 <_write_r+0x1e>
 8004e70:	6823      	ldr	r3, [r4, #0]
 8004e72:	b103      	cbz	r3, 8004e76 <_write_r+0x1e>
 8004e74:	602b      	str	r3, [r5, #0]
 8004e76:	bd38      	pop	{r3, r4, r5, pc}
 8004e78:	200027c4 	.word	0x200027c4

08004e7c <_close_r>:
 8004e7c:	b538      	push	{r3, r4, r5, lr}
 8004e7e:	4c06      	ldr	r4, [pc, #24]	; (8004e98 <_close_r+0x1c>)
 8004e80:	2300      	movs	r3, #0
 8004e82:	4605      	mov	r5, r0
 8004e84:	4608      	mov	r0, r1
 8004e86:	6023      	str	r3, [r4, #0]
 8004e88:	f7ff f8b6 	bl	8003ff8 <_close>
 8004e8c:	1c43      	adds	r3, r0, #1
 8004e8e:	d102      	bne.n	8004e96 <_close_r+0x1a>
 8004e90:	6823      	ldr	r3, [r4, #0]
 8004e92:	b103      	cbz	r3, 8004e96 <_close_r+0x1a>
 8004e94:	602b      	str	r3, [r5, #0]
 8004e96:	bd38      	pop	{r3, r4, r5, pc}
 8004e98:	200027c4 	.word	0x200027c4

08004e9c <_lseek_r>:
 8004e9c:	b538      	push	{r3, r4, r5, lr}
 8004e9e:	4c07      	ldr	r4, [pc, #28]	; (8004ebc <_lseek_r+0x20>)
 8004ea0:	4605      	mov	r5, r0
 8004ea2:	4608      	mov	r0, r1
 8004ea4:	4611      	mov	r1, r2
 8004ea6:	2200      	movs	r2, #0
 8004ea8:	6022      	str	r2, [r4, #0]
 8004eaa:	461a      	mov	r2, r3
 8004eac:	f7ff f92a 	bl	8004104 <_lseek>
 8004eb0:	1c43      	adds	r3, r0, #1
 8004eb2:	d102      	bne.n	8004eba <_lseek_r+0x1e>
 8004eb4:	6823      	ldr	r3, [r4, #0]
 8004eb6:	b103      	cbz	r3, 8004eba <_lseek_r+0x1e>
 8004eb8:	602b      	str	r3, [r5, #0]
 8004eba:	bd38      	pop	{r3, r4, r5, pc}
 8004ebc:	200027c4 	.word	0x200027c4

08004ec0 <_malloc_usable_size_r>:
 8004ec0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8004ec4:	2800      	cmp	r0, #0
 8004ec6:	f1a0 0004 	sub.w	r0, r0, #4
 8004eca:	bfbc      	itt	lt
 8004ecc:	580b      	ldrlt	r3, [r1, r0]
 8004ece:	18c0      	addlt	r0, r0, r3
 8004ed0:	4770      	bx	lr

08004ed2 <__ssputs_r>:
 8004ed2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8004ed6:	688e      	ldr	r6, [r1, #8]
 8004ed8:	429e      	cmp	r6, r3
 8004eda:	4682      	mov	r10, r0
 8004edc:	460c      	mov	r4, r1
 8004ede:	4691      	mov	r9, r2
 8004ee0:	4698      	mov	r8, r3
 8004ee2:	d835      	bhi.n	8004f50 <__ssputs_r+0x7e>
 8004ee4:	898a      	ldrh	r2, [r1, #12]
 8004ee6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004eea:	d031      	beq.n	8004f50 <__ssputs_r+0x7e>
 8004eec:	6825      	ldr	r5, [r4, #0]
 8004eee:	6909      	ldr	r1, [r1, #16]
 8004ef0:	1a6f      	subs	r7, r5, r1
 8004ef2:	6965      	ldr	r5, [r4, #20]
 8004ef4:	2302      	movs	r3, #2
 8004ef6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004efa:	fb95 f5f3 	sdiv	r5, r5, r3
 8004efe:	f108 0301 	add.w	r3, r8, #1
 8004f02:	443b      	add	r3, r7
 8004f04:	429d      	cmp	r5, r3
 8004f06:	bf38      	it	cc
 8004f08:	461d      	movcc	r5, r3
 8004f0a:	0553      	lsls	r3, r2, #21
 8004f0c:	d531      	bpl.n	8004f72 <__ssputs_r+0xa0>
 8004f0e:	4629      	mov	r1, r5
 8004f10:	f7ff f838 	bl	8003f84 <__wrap__malloc_r>
 8004f14:	4606      	mov	r6, r0
 8004f16:	b950      	cbnz	r0, 8004f2e <__ssputs_r+0x5c>
 8004f18:	230c      	movs	r3, #12
 8004f1a:	f8ca 3000 	str.w	r3, [r10]
 8004f1e:	89a3      	ldrh	r3, [r4, #12]
 8004f20:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004f24:	81a3      	strh	r3, [r4, #12]
 8004f26:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004f2e:	463a      	mov	r2, r7
 8004f30:	6921      	ldr	r1, [r4, #16]
 8004f32:	f7ff fc75 	bl	8004820 <memcpy>
 8004f36:	89a3      	ldrh	r3, [r4, #12]
 8004f38:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004f3c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004f40:	81a3      	strh	r3, [r4, #12]
 8004f42:	6126      	str	r6, [r4, #16]
 8004f44:	6165      	str	r5, [r4, #20]
 8004f46:	443e      	add	r6, r7
 8004f48:	1bed      	subs	r5, r5, r7
 8004f4a:	6026      	str	r6, [r4, #0]
 8004f4c:	60a5      	str	r5, [r4, #8]
 8004f4e:	4646      	mov	r6, r8
 8004f50:	4546      	cmp	r6, r8
 8004f52:	bf28      	it	cs
 8004f54:	4646      	movcs	r6, r8
 8004f56:	4632      	mov	r2, r6
 8004f58:	4649      	mov	r1, r9
 8004f5a:	6820      	ldr	r0, [r4, #0]
 8004f5c:	f7ff fc6b 	bl	8004836 <memmove>
 8004f60:	68a3      	ldr	r3, [r4, #8]
 8004f62:	1b9b      	subs	r3, r3, r6
 8004f64:	60a3      	str	r3, [r4, #8]
 8004f66:	6823      	ldr	r3, [r4, #0]
 8004f68:	441e      	add	r6, r3
 8004f6a:	6026      	str	r6, [r4, #0]
 8004f6c:	2000      	movs	r0, #0
 8004f6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004f72:	462a      	mov	r2, r5
 8004f74:	f7ff f808 	bl	8003f88 <__wrap__realloc_r>
 8004f78:	4606      	mov	r6, r0
 8004f7a:	2800      	cmp	r0, #0
 8004f7c:	d1e1      	bne.n	8004f42 <__ssputs_r+0x70>
 8004f7e:	6921      	ldr	r1, [r4, #16]
 8004f80:	4650      	mov	r0, r10
 8004f82:	f7ff f803 	bl	8003f8c <__wrap__free_r>
 8004f86:	e7c7      	b.n	8004f18 <__ssputs_r+0x46>

08004f88 <_svfiprintf_r>:
 8004f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8004f8c:	b09d      	sub	sp, #116	; 0x74
 8004f8e:	4680      	mov	r8, r0
 8004f90:	9303      	str	r3, [sp, #12]
 8004f92:	898b      	ldrh	r3, [r1, #12]
 8004f94:	061c      	lsls	r4, r3, #24
 8004f96:	460d      	mov	r5, r1
 8004f98:	4616      	mov	r6, r2
 8004f9a:	d50f      	bpl.n	8004fbc <_svfiprintf_r+0x34>
 8004f9c:	690b      	ldr	r3, [r1, #16]
 8004f9e:	b96b      	cbnz	r3, 8004fbc <_svfiprintf_r+0x34>
 8004fa0:	2140      	movs	r1, #64	; 0x40
 8004fa2:	f7fe ffef 	bl	8003f84 <__wrap__malloc_r>
 8004fa6:	6028      	str	r0, [r5, #0]
 8004fa8:	6128      	str	r0, [r5, #16]
 8004faa:	b928      	cbnz	r0, 8004fb8 <_svfiprintf_r+0x30>
 8004fac:	230c      	movs	r3, #12
 8004fae:	f8c8 3000 	str.w	r3, [r8]
 8004fb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004fb6:	e0c5      	b.n	8005144 <_svfiprintf_r+0x1bc>
 8004fb8:	2340      	movs	r3, #64	; 0x40
 8004fba:	616b      	str	r3, [r5, #20]
 8004fbc:	2300      	movs	r3, #0
 8004fbe:	9309      	str	r3, [sp, #36]	; 0x24
 8004fc0:	2320      	movs	r3, #32
 8004fc2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004fc6:	2330      	movs	r3, #48	; 0x30
 8004fc8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004fcc:	f04f 0b01 	mov.w	r11, #1
 8004fd0:	4637      	mov	r7, r6
 8004fd2:	463c      	mov	r4, r7
 8004fd4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004fd8:	2b00      	cmp	r3, #0
 8004fda:	d13c      	bne.n	8005056 <_svfiprintf_r+0xce>
 8004fdc:	ebb7 0a06 	subs.w	r10, r7, r6
 8004fe0:	d00b      	beq.n	8004ffa <_svfiprintf_r+0x72>
 8004fe2:	4653      	mov	r3, r10
 8004fe4:	4632      	mov	r2, r6
 8004fe6:	4629      	mov	r1, r5
 8004fe8:	4640      	mov	r0, r8
 8004fea:	f7ff ff72 	bl	8004ed2 <__ssputs_r>
 8004fee:	3001      	adds	r0, #1
 8004ff0:	f000 80a3 	beq.w	800513a <_svfiprintf_r+0x1b2>
 8004ff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ff6:	4453      	add	r3, r10
 8004ff8:	9309      	str	r3, [sp, #36]	; 0x24
 8004ffa:	783b      	ldrb	r3, [r7, #0]
 8004ffc:	2b00      	cmp	r3, #0
 8004ffe:	f000 809c 	beq.w	800513a <_svfiprintf_r+0x1b2>
 8005002:	2300      	movs	r3, #0
 8005004:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005008:	9304      	str	r3, [sp, #16]
 800500a:	9307      	str	r3, [sp, #28]
 800500c:	9205      	str	r2, [sp, #20]
 800500e:	9306      	str	r3, [sp, #24]
 8005010:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005014:	931a      	str	r3, [sp, #104]	; 0x68
 8005016:	2205      	movs	r2, #5
 8005018:	7821      	ldrb	r1, [r4, #0]
 800501a:	4850      	ldr	r0, [pc, #320]	; (800515c <_svfiprintf_r+0x1d4>)
 800501c:	f7ff fbb0 	bl	8004780 <memchr>
 8005020:	1c67      	adds	r7, r4, #1
 8005022:	9b04      	ldr	r3, [sp, #16]
 8005024:	b9d8      	cbnz	r0, 800505e <_svfiprintf_r+0xd6>
 8005026:	06d9      	lsls	r1, r3, #27
 8005028:	bf44      	itt	mi
 800502a:	2220      	movmi	r2, #32
 800502c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005030:	071a      	lsls	r2, r3, #28
 8005032:	bf44      	itt	mi
 8005034:	222b      	movmi	r2, #43	; 0x2b
 8005036:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800503a:	7822      	ldrb	r2, [r4, #0]
 800503c:	2a2a      	cmp	r2, #42	; 0x2a
 800503e:	d016      	beq.n	800506e <_svfiprintf_r+0xe6>
 8005040:	9a07      	ldr	r2, [sp, #28]
 8005042:	2100      	movs	r1, #0
 8005044:	200a      	movs	r0, #10
 8005046:	4627      	mov	r7, r4
 8005048:	3401      	adds	r4, #1
 800504a:	783b      	ldrb	r3, [r7, #0]
 800504c:	3b30      	subs	r3, #48	; 0x30
 800504e:	2b09      	cmp	r3, #9
 8005050:	d951      	bls.n	80050f6 <_svfiprintf_r+0x16e>
 8005052:	b1c9      	cbz	r1, 8005088 <_svfiprintf_r+0x100>
 8005054:	e011      	b.n	800507a <_svfiprintf_r+0xf2>
 8005056:	2b25      	cmp	r3, #37	; 0x25
 8005058:	d0c0      	beq.n	8004fdc <_svfiprintf_r+0x54>
 800505a:	4627      	mov	r7, r4
 800505c:	e7b9      	b.n	8004fd2 <_svfiprintf_r+0x4a>
 800505e:	4a3f      	ldr	r2, [pc, #252]	; (800515c <_svfiprintf_r+0x1d4>)
 8005060:	1a80      	subs	r0, r0, r2
 8005062:	fa0b f000 	lsl.w	r0, r11, r0
 8005066:	4318      	orrs	r0, r3
 8005068:	9004      	str	r0, [sp, #16]
 800506a:	463c      	mov	r4, r7
 800506c:	e7d3      	b.n	8005016 <_svfiprintf_r+0x8e>
 800506e:	9a03      	ldr	r2, [sp, #12]
 8005070:	1d11      	adds	r1, r2, #4
 8005072:	6812      	ldr	r2, [r2, #0]
 8005074:	9103      	str	r1, [sp, #12]
 8005076:	2a00      	cmp	r2, #0
 8005078:	db01      	blt.n	800507e <_svfiprintf_r+0xf6>
 800507a:	9207      	str	r2, [sp, #28]
 800507c:	e004      	b.n	8005088 <_svfiprintf_r+0x100>
 800507e:	4252      	negs	r2, r2
 8005080:	f043 0302 	orr.w	r3, r3, #2
 8005084:	9207      	str	r2, [sp, #28]
 8005086:	9304      	str	r3, [sp, #16]
 8005088:	783b      	ldrb	r3, [r7, #0]
 800508a:	2b2e      	cmp	r3, #46	; 0x2e
 800508c:	d10e      	bne.n	80050ac <_svfiprintf_r+0x124>
 800508e:	787b      	ldrb	r3, [r7, #1]
 8005090:	2b2a      	cmp	r3, #42	; 0x2a
 8005092:	f107 0101 	add.w	r1, r7, #1
 8005096:	d132      	bne.n	80050fe <_svfiprintf_r+0x176>
 8005098:	9b03      	ldr	r3, [sp, #12]
 800509a:	1d1a      	adds	r2, r3, #4
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	9203      	str	r2, [sp, #12]
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	bfb8      	it	lt
 80050a4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80050a8:	3702      	adds	r7, #2
 80050aa:	9305      	str	r3, [sp, #20]
 80050ac:	4c2c      	ldr	r4, [pc, #176]	; (8005160 <_svfiprintf_r+0x1d8>)
 80050ae:	7839      	ldrb	r1, [r7, #0]
 80050b0:	2203      	movs	r2, #3
 80050b2:	4620      	mov	r0, r4
 80050b4:	f7ff fb64 	bl	8004780 <memchr>
 80050b8:	b138      	cbz	r0, 80050ca <_svfiprintf_r+0x142>
 80050ba:	2340      	movs	r3, #64	; 0x40
 80050bc:	1b00      	subs	r0, r0, r4
 80050be:	fa03 f000 	lsl.w	r0, r3, r0
 80050c2:	9b04      	ldr	r3, [sp, #16]
 80050c4:	4303      	orrs	r3, r0
 80050c6:	9304      	str	r3, [sp, #16]
 80050c8:	3701      	adds	r7, #1
 80050ca:	7839      	ldrb	r1, [r7, #0]
 80050cc:	4825      	ldr	r0, [pc, #148]	; (8005164 <_svfiprintf_r+0x1dc>)
 80050ce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80050d2:	2206      	movs	r2, #6
 80050d4:	1c7e      	adds	r6, r7, #1
 80050d6:	f7ff fb53 	bl	8004780 <memchr>
 80050da:	2800      	cmp	r0, #0
 80050dc:	d035      	beq.n	800514a <_svfiprintf_r+0x1c2>
 80050de:	4b22      	ldr	r3, [pc, #136]	; (8005168 <_svfiprintf_r+0x1e0>)
 80050e0:	b9fb      	cbnz	r3, 8005122 <_svfiprintf_r+0x19a>
 80050e2:	9b03      	ldr	r3, [sp, #12]
 80050e4:	3307      	adds	r3, #7
 80050e6:	f023 0307 	bic.w	r3, r3, #7
 80050ea:	3308      	adds	r3, #8
 80050ec:	9303      	str	r3, [sp, #12]
 80050ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80050f0:	444b      	add	r3, r9
 80050f2:	9309      	str	r3, [sp, #36]	; 0x24
 80050f4:	e76c      	b.n	8004fd0 <_svfiprintf_r+0x48>
 80050f6:	fb00 3202 	mla	r2, r0, r2, r3
 80050fa:	2101      	movs	r1, #1
 80050fc:	e7a3      	b.n	8005046 <_svfiprintf_r+0xbe>
 80050fe:	2300      	movs	r3, #0
 8005100:	9305      	str	r3, [sp, #20]
 8005102:	4618      	mov	r0, r3
 8005104:	240a      	movs	r4, #10
 8005106:	460f      	mov	r7, r1
 8005108:	3101      	adds	r1, #1
 800510a:	783a      	ldrb	r2, [r7, #0]
 800510c:	3a30      	subs	r2, #48	; 0x30
 800510e:	2a09      	cmp	r2, #9
 8005110:	d903      	bls.n	800511a <_svfiprintf_r+0x192>
 8005112:	2b00      	cmp	r3, #0
 8005114:	d0ca      	beq.n	80050ac <_svfiprintf_r+0x124>
 8005116:	9005      	str	r0, [sp, #20]
 8005118:	e7c8      	b.n	80050ac <_svfiprintf_r+0x124>
 800511a:	fb04 2000 	mla	r0, r4, r0, r2
 800511e:	2301      	movs	r3, #1
 8005120:	e7f1      	b.n	8005106 <_svfiprintf_r+0x17e>
 8005122:	ab03      	add	r3, sp, #12
 8005124:	9300      	str	r3, [sp, #0]
 8005126:	462a      	mov	r2, r5
 8005128:	4b10      	ldr	r3, [pc, #64]	; (800516c <_svfiprintf_r+0x1e4>)
 800512a:	a904      	add	r1, sp, #16
 800512c:	4640      	mov	r0, r8
 800512e:	f3af 8000 	nop.w
 8005132:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005136:	4681      	mov	r9, r0
 8005138:	d1d9      	bne.n	80050ee <_svfiprintf_r+0x166>
 800513a:	89ab      	ldrh	r3, [r5, #12]
 800513c:	065b      	lsls	r3, r3, #25
 800513e:	f53f af38 	bmi.w	8004fb2 <_svfiprintf_r+0x2a>
 8005142:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005144:	b01d      	add	sp, #116	; 0x74
 8005146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800514a:	ab03      	add	r3, sp, #12
 800514c:	9300      	str	r3, [sp, #0]
 800514e:	462a      	mov	r2, r5
 8005150:	4b06      	ldr	r3, [pc, #24]	; (800516c <_svfiprintf_r+0x1e4>)
 8005152:	a904      	add	r1, sp, #16
 8005154:	4640      	mov	r0, r8
 8005156:	f7ff fcd9 	bl	8004b0c <_printf_i>
 800515a:	e7ea      	b.n	8005132 <_svfiprintf_r+0x1aa>
 800515c:	0800573a 	.word	0x0800573a
 8005160:	08005740 	.word	0x08005740
 8005164:	08005744 	.word	0x08005744
 8005168:	00000000 	.word	0x00000000
 800516c:	08004ed3 	.word	0x08004ed3

08005170 <_read_r>:
 8005170:	b538      	push	{r3, r4, r5, lr}
 8005172:	4c07      	ldr	r4, [pc, #28]	; (8005190 <_read_r+0x20>)
 8005174:	4605      	mov	r5, r0
 8005176:	4608      	mov	r0, r1
 8005178:	4611      	mov	r1, r2
 800517a:	2200      	movs	r2, #0
 800517c:	6022      	str	r2, [r4, #0]
 800517e:	461a      	mov	r2, r3
 8005180:	f7fe ff90 	bl	80040a4 <_read>
 8005184:	1c43      	adds	r3, r0, #1
 8005186:	d102      	bne.n	800518e <_read_r+0x1e>
 8005188:	6823      	ldr	r3, [r4, #0]
 800518a:	b103      	cbz	r3, 800518e <_read_r+0x1e>
 800518c:	602b      	str	r3, [r5, #0]
 800518e:	bd38      	pop	{r3, r4, r5, pc}
 8005190:	200027c4 	.word	0x200027c4

08005194 <_init>:
 8005194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005196:	bf00      	nop
 8005198:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800519a:	bc08      	pop	{r3}
 800519c:	469e      	mov	lr, r3
 800519e:	4770      	bx	lr

080051a0 <_fini>:
 80051a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80051a2:	bf00      	nop
 80051a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80051a6:	bc08      	pop	{r3}
 80051a8:	469e      	mov	lr, r3
 80051aa:	4770      	bx	lr

080051ac <vtable for std_msgs::Time>:
	...
 80051b4:	0201 0800 0229 0800 0265 0800 026d 0800     ....)...e...m...

080051c4 <vtable for rosserial_msgs::TopicInfo>:
	...
 80051cc:	0443 0800 051d 0800 0275 0800 027d 0800     C.......u...}...

080051dc <vtable for rosserial_msgs::Log>:
	...
 80051e4:	0417 0800 04e7 0800 0285 0800 028d 0800     ................

080051f4 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80051fc:	0335 0800 05d3 0800 0295 0800 029d 0800     5...............

0800520c <vtable for std_msgs::Int32>:
	...
 8005214:	02a5 0800 02b9 0800 02c1 0800 02c9 0800     ................

08005224 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 800522c:	0c01 0800 0985 0800 02fd 0800               ............

08005238 <vtable for ros::Subscriber<std_msgs::Int32, void>>:
	...
 8005240:	02d1 0800 02e9 0800 02ed 0800 02f5 0800     ................
 8005250:	6f6d 6f74 0072 6639 6530 3839 6462 3661     motor.9f0e98bda6
 8005260:	3935 3138 3839 6436 6664 3335 6661 3761     5981986ddf53afa7
 8005270:	3461 6530 3934 3100 6131 6462 3337 6331     a40e49.11abd731c
 8005280:	3532 3339 3233 3136 6463 3136 3338 6462     25933261cd6183bd
 8005290:	3231 3664 3932 0035 6f72 7373 7265 6169     12d6295.rosseria
 80052a0:	5f6c 736d 7367 4c2f 676f 3000 6461 3135     l_msgs/Log.0ad51
 80052b0:	3866 6638 3463 3834 3239 3866 3163 3630     f88fc44892f8c106
 80052c0:	3438 3730 3637 3634 3030 0035 6f72 7373     84077646005.ross
 80052d0:	7265 6169 5f6c 736d 7367 542f 706f 6369     erial_msgs/Topic
 80052e0:	6e49 6f66 7200                                   Info.

080052e5 <rosserial_msgs::REQUESTPARAM>:
 80052e5:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 80052f5:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8005305:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8005315:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8005325:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8005335:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 8005345:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 8005355:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 8005365:	6d69 0065 6164 3935 3930 6266 3365 3837     ime.da5909fbe378
 8005375:	6561 6661 3538 3565 3734 3865 3033 6363     aeaf85e547e830cc
 8005385:	6231 3762 7300 6474 6d5f 6773 2f73 6e49     1bb7.std_msgs/In
 8005395:	3374 0032 0000 6b00                              t32....

0800539c <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 800539c:	0d6b 0800 0d5d 0800 0d69 0800 682f 6d6f     k...]...i.../hom
 80053ac:	2f65 6168 696a 656d 722f 736f 6c2f 6269     e/hajime/ros/lib
 80053bc:	722f 736f 6c5f 6269 422f 6675 6566 6572     /ros_lib/Buffere
 80053cc:	5364 7265 6169 2f6c 7542 6666 7265 6465     dSerial/Buffered
 80053dc:	6553 6972 6c61 632e 7070 2500 2073 6425     Serial.cpp.%s %d
 80053ec:	6220 6675 6566 2072 766f 7265 7277 7469      buffer overwrit
 80053fc:	2065 6d28 7861 625f 6675 735f 7a69 3a65     e (max_buf_size:
 800540c:	2520 2064 7865 6563 6465 6465 203a 6425      %d exceeded: %d
 800541c:	2129 0a0d 0000 0000                         )!......

08005424 <vtable for BufferedSerial>:
	...
 800542c:	3c65 0800 3c65 0800 0e55 0800 0ead 0800     e<..e<..U.......
 800543c:	0d1d 0800 0d2d 0800 0d31 0800 0fcd 0800     ....-...1.......
 800544c:	0fe5 0800 1061 0800 1023 0800               ....a...#...

08005458 <us_data>:
 8005458:	5460 0800 08a8 2000                         `T..... 

08005460 <us_interface>:
 8005460:	2ac9 0800 2aed 0800 2b25 0800 2b3d 0800     .*...*..%+..=+..
 8005470:	2b09 0800 6970 6d6e 7061 6d20 7369 6d2d     .+..pinmap mis-m
 8005480:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8005490:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 80054a0:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 80054b0:	6e69 756f 0074 0000                         inout...

080054b8 <mp_stk_size>:
 80054b8:	0210 0000                                   ....

080054bc <mp_tcb_size>:
 80054bc:	03cc                                        ..

080054be <mp_tmr_size>:
	...

080054c0 <os_clockrate>:
 80054c0:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 80054d0:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 80054e0:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

080054ed <os_fifo_size>:
 80054ed:	0110                                             .

080054ee <os_flags>:
 80054ee:	0001                                        ..

080054f0 <os_maxtaskrun>:
 80054f0:	000f 0000                                   ....

080054f4 <os_messageQ_def_osTimerMessageQ>:
 80054f4:	0004 0000 08cc 2000                         ....... 

080054fc <os_mutex_def_env_mutex>:
 80054fc:	08ec 2000                                   ... 

08005500 <os_mutex_def_malloc_mutex>:
 8005500:	08fc 2000                                   ... 

08005504 <os_mutex_def_singleton_mutex>:
 8005504:	090c 2000                                   ... 

08005508 <os_rrobin>:
 8005508:	0005 0001                                   ....

0800550c <os_stackinfo>:
 800550c:	0200 0100                                   ....

08005510 <os_thread_def_osTimerThread>:
 8005510:	2169 0800 0002 0000 0001 0000 0320 0000     i!.......... ...
 8005520:	1fe0 2000                                   ... 

08005524 <os_trv>:
 8005524:	481f 0001                                   .H..

08005528 <os_mutex_def_osThreadMutex>:
 8005528:	1920 2000 6950 6d6e 7061 6520 7272 726f      .. Pinmap error
 8005538:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8005548:	6562 2e72 0000 0000                         ber.....

08005550 <ll_pin_defines>:
 8005550:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8005560:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8005570:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8005580:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8005590:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 80055a0:	2065 4155 5452 000a                         e UART..

080055a8 <PinMap_UART_RX>:
 80055a8:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 80055b8:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 80055c8:	0812 0000 0017 0000 1000 4001 0712 0000     ...........@....
 80055d8:	0027 0000 1400 4001 0812 0000 ffff 0000     '......@........
 80055e8:	ffff ffff 0000 0000                         ........

080055f0 <PinMap_UART_TX>:
 80055f0:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8005600:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 8005610:	0812 0000 0016 0000 1000 4001 0712 0000     ...........@....
 8005620:	0026 0000 1400 4001 0812 0000 ffff 0000     &......@........
 8005630:	ffff ffff 0000 0000                         ........

08005638 <AHBPrescTable>:
	...
 8005640:	0201 0403 0706 0908                         ........

08005648 <APBAHBPrescTable>:
 8005648:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08005658 <vtable for mbed::RawSerial>:
	...
 8005660:	3c65 0800 3c65 0800 3c7d 0800 3c91 0800     e<..e<..}<...<..

08005670 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8005670:	3d43 0800 3d47 0800 3d4f 0800               C=..G=..O=..

0800567c <vtable for mbed::SerialBase>:
	...
 8005684:	3d77 0800 3d79 0800 0e09 0800 0e41 0800     w=..y=......A...
 8005694:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 80056a4:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

080056b4 <__sf_fake_stderr>:
	...

080056d4 <__sf_fake_stdin>:
	...

080056f4 <__sf_fake_stdout>:
	...

08005714 <_global_impure_ptr>:
 8005714:	01bc 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8005724:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8005734:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8005744:	6665 4567 4746 0000                         efgEFG..

0800574c <__EH_FRAME_BEGIN__>:
 800574c:	0000 0000                                   ....
