
NUCLEO_F303RE/rosserial_mbed.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080056b1


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 00 01 20 b1 56 00 08 e5 56 00 08 e5 56 00 08     ... .V...V...V..
 8000010:	e5 56 00 08 e5 56 00 08 e5 56 00 08 00 00 00 00     .V...V...V......
	...
 800002c:	75 55 00 08 e5 56 00 08 00 00 00 00 1b 56 00 08     uU...V.......V..
 800003c:	7b 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     {V...V...V...V..
 800004c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 800005c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 800006c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 800007c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 800008c:	c5 30 00 08 c9 30 00 08 e5 56 00 08 c5 2f 00 08     .0...0...V.../..
 800009c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 80000ac:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 80000bc:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 80000cc:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 80000dc:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 80000ec:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 80000fc:	e5 56 00 08 e5 56 00 08 00 00 00 00 00 00 00 00     .V...V..........
 800010c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 800011c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 800012c:	e5 56 00 08 e5 56 00 08 e5 56 00 08 00 00 00 00     .V...V...V......
 800013c:	00 00 00 00 e5 56 00 08 e5 56 00 08 e5 56 00 08     .....V...V...V..
	...
 8000160:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 8000170:	e5 56 00 08 e5 56 00 08 e5 56 00 08 e5 56 00 08     .V...V...V...V..
 8000180:	e5 56 00 08 e5 56 00 08 00 00 00 00 00 00 00 00     .V...V..........
 8000190:	e5 56 00 08                                         .V..

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000230 	.word	0x20000230
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08006c74 	.word	0x08006c74

080001b8 <frame_dummy>:
 80001b8:	4b0c      	ldr	r3, [pc, #48]	; (80001ec <frame_dummy+0x34>)
 80001ba:	b143      	cbz	r3, 80001ce <frame_dummy+0x16>
 80001bc:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x38>)
 80001be:	490d      	ldr	r1, [pc, #52]	; (80001f4 <frame_dummy+0x3c>)
 80001c0:	b510      	push	{r4, lr}
 80001c2:	f3af 8000 	nop.w
 80001c6:	480c      	ldr	r0, [pc, #48]	; (80001f8 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b923      	cbnz	r3, 80001d6 <frame_dummy+0x1e>
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	480a      	ldr	r0, [pc, #40]	; (80001f8 <frame_dummy+0x40>)
 80001d0:	6803      	ldr	r3, [r0, #0]
 80001d2:	b933      	cbnz	r3, 80001e2 <frame_dummy+0x2a>
 80001d4:	4770      	bx	lr
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f7      	beq.n	80001cc <frame_dummy+0x14>
 80001dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e0:	4718      	bx	r3
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <frame_dummy+0x44>)
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	d0f5      	beq.n	80001d4 <frame_dummy+0x1c>
 80001e8:	4718      	bx	r3
 80001ea:	bf00      	nop
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08006c74 	.word	0x08006c74
 80001f4:	20000234 	.word	0x20000234
 80001f8:	2000022c 	.word	0x2000022c
 80001fc:	00000000 	.word	0x00000000

08000200 <std_msgs::Time::serialize(unsigned char*) const>:
 8000200:	6843      	ldr	r3, [r0, #4]
 8000202:	700b      	strb	r3, [r1, #0]
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	0a1b      	lsrs	r3, r3, #8
 8000208:	704b      	strb	r3, [r1, #1]
 800020a:	88c3      	ldrh	r3, [r0, #6]
 800020c:	708b      	strb	r3, [r1, #2]
 800020e:	79c3      	ldrb	r3, [r0, #7]
 8000210:	70cb      	strb	r3, [r1, #3]
 8000212:	6883      	ldr	r3, [r0, #8]
 8000214:	710b      	strb	r3, [r1, #4]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	0a1b      	lsrs	r3, r3, #8
 800021a:	714b      	strb	r3, [r1, #5]
 800021c:	8943      	ldrh	r3, [r0, #10]
 800021e:	718b      	strb	r3, [r1, #6]
 8000220:	7ac3      	ldrb	r3, [r0, #11]
 8000222:	71cb      	strb	r3, [r1, #7]
 8000224:	2008      	movs	r0, #8
 8000226:	4770      	bx	lr

08000228 <std_msgs::Time::deserialize(unsigned char*)>:
 8000228:	780b      	ldrb	r3, [r1, #0]
 800022a:	6043      	str	r3, [r0, #4]
 800022c:	784a      	ldrb	r2, [r1, #1]
 800022e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000232:	6043      	str	r3, [r0, #4]
 8000234:	788a      	ldrb	r2, [r1, #2]
 8000236:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023a:	6043      	str	r3, [r0, #4]
 800023c:	78ca      	ldrb	r2, [r1, #3]
 800023e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000242:	6043      	str	r3, [r0, #4]
 8000244:	790b      	ldrb	r3, [r1, #4]
 8000246:	6083      	str	r3, [r0, #8]
 8000248:	794a      	ldrb	r2, [r1, #5]
 800024a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800024e:	6083      	str	r3, [r0, #8]
 8000250:	798a      	ldrb	r2, [r1, #6]
 8000252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000256:	6083      	str	r3, [r0, #8]
 8000258:	79ca      	ldrb	r2, [r1, #7]
 800025a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800025e:	6083      	str	r3, [r0, #8]
 8000260:	2008      	movs	r0, #8
 8000262:	4770      	bx	lr

08000264 <std_msgs::Time::getType()>:
 8000264:	4800      	ldr	r0, [pc, #0]	; (8000268 <std_msgs::Time::getType()+0x4>)
 8000266:	4770      	bx	lr
 8000268:	08006685 	.word	0x08006685

0800026c <std_msgs::Time::getMD5()>:
 800026c:	4800      	ldr	r0, [pc, #0]	; (8000270 <std_msgs::Time::getMD5()+0x4>)
 800026e:	4770      	bx	lr
 8000270:	08006664 	.word	0x08006664

08000274 <rosserial_msgs::TopicInfo::getType()>:
 8000274:	4800      	ldr	r0, [pc, #0]	; (8000278 <rosserial_msgs::TopicInfo::getType()+0x4>)
 8000276:	4770      	bx	lr
 8000278:	080065f6 	.word	0x080065f6

0800027c <rosserial_msgs::TopicInfo::getMD5()>:
 800027c:	4800      	ldr	r0, [pc, #0]	; (8000280 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 800027e:	4770      	bx	lr
 8000280:	080065d5 	.word	0x080065d5

08000284 <rosserial_msgs::Log::getType()>:
 8000284:	4800      	ldr	r0, [pc, #0]	; (8000288 <rosserial_msgs::Log::getType()+0x4>)
 8000286:	4770      	bx	lr
 8000288:	080065c2 	.word	0x080065c2

0800028c <rosserial_msgs::Log::getMD5()>:
 800028c:	4800      	ldr	r0, [pc, #0]	; (8000290 <rosserial_msgs::Log::getMD5()+0x4>)
 800028e:	4770      	bx	lr
 8000290:	080065a1 	.word	0x080065a1

08000294 <rosserial_msgs::RequestParamResponse::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	0800660f 	.word	0x0800660f

0800029c <rosserial_msgs::RequestParamResponse::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	08006580 	.word	0x08006580

080002a4 <std_msgs::Int32::serialize(unsigned char*) const>:
 80002a4:	6843      	ldr	r3, [r0, #4]
 80002a6:	700b      	strb	r3, [r1, #0]
 80002a8:	0a1a      	lsrs	r2, r3, #8
 80002aa:	704a      	strb	r2, [r1, #1]
 80002ac:	0c1a      	lsrs	r2, r3, #16
 80002ae:	0e1b      	lsrs	r3, r3, #24
 80002b0:	708a      	strb	r2, [r1, #2]
 80002b2:	70cb      	strb	r3, [r1, #3]
 80002b4:	2004      	movs	r0, #4
 80002b6:	4770      	bx	lr

080002b8 <std_msgs::Int32::deserialize(unsigned char*)>:
 80002b8:	680b      	ldr	r3, [r1, #0]
 80002ba:	6043      	str	r3, [r0, #4]
 80002bc:	2004      	movs	r0, #4
 80002be:	4770      	bx	lr

080002c0 <std_msgs::Int32::getType()>:
 80002c0:	4800      	ldr	r0, [pc, #0]	; (80002c4 <std_msgs::Int32::getType()+0x4>)
 80002c2:	4770      	bx	lr
 80002c4:	080066b4 	.word	0x080066b4

080002c8 <std_msgs::Int32::getMD5()>:
 80002c8:	4800      	ldr	r0, [pc, #0]	; (80002cc <std_msgs::Int32::getMD5()+0x4>)
 80002ca:	4770      	bx	lr
 80002cc:	08006693 	.word	0x08006693

080002d0 <message_cb_motor_0(std_msgs::Int32 const&)>:
 80002d0:	4b01      	ldr	r3, [pc, #4]	; (80002d8 <message_cb_motor_0(std_msgs::Int32 const&)+0x8>)
 80002d2:	6842      	ldr	r2, [r0, #4]
 80002d4:	601a      	str	r2, [r3, #0]
 80002d6:	4770      	bx	lr
 80002d8:	20000310 	.word	0x20000310

080002dc <message_cb_motor_1(std_msgs::Int32 const&)>:
 80002dc:	4b01      	ldr	r3, [pc, #4]	; (80002e4 <message_cb_motor_1(std_msgs::Int32 const&)+0x8>)
 80002de:	6842      	ldr	r2, [r0, #4]
 80002e0:	601a      	str	r2, [r3, #0]
 80002e2:	4770      	bx	lr
 80002e4:	20000314 	.word	0x20000314

080002e8 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 80002e8:	6803      	ldr	r3, [r0, #0]
 80002ea:	4718      	bx	r3

080002ec <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 80002ec:	b108      	cbz	r0, 80002f2 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 80002ee:	680b      	ldr	r3, [r1, #0]
 80002f0:	6003      	str	r3, [r0, #0]
 80002f2:	4770      	bx	lr

080002f4 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 80002f4:	4770      	bx	lr

080002f6 <ros::Subscriber<std_msgs::Int32, void>::callback(unsigned char*)>:
 80002f6:	b570      	push	{r4, r5, r6, lr}
 80002f8:	4605      	mov	r5, r0
 80002fa:	f100 040c 	add.w	r4, r0, #12
 80002fe:	4620      	mov	r0, r4
 8000300:	f7ff ffda 	bl	80002b8 <std_msgs::Int32::deserialize(unsigned char*)>
 8000304:	696b      	ldr	r3, [r5, #20]
 8000306:	4620      	mov	r0, r4
 8000308:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800030c:	4718      	bx	r3

0800030e <ros::Subscriber<std_msgs::Int32, void>::getEndpointType()>:
 800030e:	6980      	ldr	r0, [r0, #24]
 8000310:	4770      	bx	lr
	...

08000314 <ros::Subscriber<std_msgs::Int32, void>::getMsgType()>:
 8000314:	4800      	ldr	r0, [pc, #0]	; (8000318 <ros::Subscriber<std_msgs::Int32, void>::getMsgType()+0x4>)
 8000316:	4770      	bx	lr
 8000318:	080066b4 	.word	0x080066b4

0800031c <ros::Subscriber<std_msgs::Int32, void>::getMsgMD5()>:
 800031c:	4800      	ldr	r0, [pc, #0]	; (8000320 <ros::Subscriber<std_msgs::Int32, void>::getMsgMD5()+0x4>)
 800031e:	4770      	bx	lr
 8000320:	08006693 	.word	0x08006693

08000324 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 8000324:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 8000328:	4770      	bx	lr
	...

0800032c <send_callback()>:
 800032c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800032e:	4b13      	ldr	r3, [pc, #76]	; (800037c <send_callback()+0x50>)
 8000330:	6819      	ldr	r1, [r3, #0]
 8000332:	4b13      	ldr	r3, [pc, #76]	; (8000380 <send_callback()+0x54>)
 8000334:	f88d 100d 	strb.w	r1, [sp, #13]
 8000338:	681a      	ldr	r2, [r3, #0]
 800033a:	f88d 200e 	strb.w	r2, [sp, #14]
 800033e:	2303      	movs	r3, #3
 8000340:	f88d 3014 	strb.w	r3, [sp, #20]
 8000344:	2300      	movs	r3, #0
 8000346:	f88d 3016 	strb.w	r3, [sp, #22]
 800034a:	f88d 3015 	strb.w	r3, [sp, #21]
 800034e:	2301      	movs	r3, #1
 8000350:	9302      	str	r3, [sp, #8]
 8000352:	114b      	asrs	r3, r1, #5
 8000354:	f3c2 2002 	ubfx	r0, r2, #8, #3
 8000358:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800035c:	4303      	orrs	r3, r0
 800035e:	f063 033f 	orn	r3, r3, #63	; 0x3f
 8000362:	f88d 300c 	strb.w	r3, [sp, #12]
 8000366:	9b05      	ldr	r3, [sp, #20]
 8000368:	9300      	str	r3, [sp, #0]
 800036a:	ab02      	add	r3, sp, #8
 800036c:	cb0e      	ldmia	r3, {r1, r2, r3}
 800036e:	4805      	ldr	r0, [pc, #20]	; (8000384 <send_callback()+0x58>)
 8000370:	f004 fd6a 	bl	8004e48 <mbed::CAN::write(mbed::CANMessage)>
 8000374:	b007      	add	sp, #28
 8000376:	f85d fb04 	ldr.w	pc, [sp], #4
 800037a:	bf00      	nop
 800037c:	20000310 	.word	0x20000310
 8000380:	20000314 	.word	0x20000314
 8000384:	2000024c 	.word	0x2000024c

08000388 <ros::Publisher::publish(ros::Msg const*)>:
 8000388:	68c3      	ldr	r3, [r0, #12]
 800038a:	681a      	ldr	r2, [r3, #0]
 800038c:	b410      	push	{r4}
 800038e:	6814      	ldr	r4, [r2, #0]
 8000390:	460a      	mov	r2, r1
 8000392:	6881      	ldr	r1, [r0, #8]
 8000394:	4618      	mov	r0, r3
 8000396:	4623      	mov	r3, r4
 8000398:	f85d 4b04 	ldr.w	r4, [sp], #4
 800039c:	4718      	bx	r3

0800039e <mbed::Callback<void ()>::~Callback()>:
 800039e:	68c3      	ldr	r3, [r0, #12]
 80003a0:	b510      	push	{r4, lr}
 80003a2:	4604      	mov	r4, r0
 80003a4:	b10b      	cbz	r3, 80003aa <mbed::Callback<void ()>::~Callback()+0xc>
 80003a6:	689b      	ldr	r3, [r3, #8]
 80003a8:	4798      	blx	r3
 80003aa:	4620      	mov	r0, r4
 80003ac:	bd10      	pop	{r4, pc}
	...

080003b0 <mbed::Ticker::~Ticker()>:
 80003b0:	b538      	push	{r3, r4, r5, lr}
 80003b2:	4605      	mov	r5, r0
 80003b4:	4b06      	ldr	r3, [pc, #24]	; (80003d0 <mbed::Ticker::~Ticker()+0x20>)
 80003b6:	f845 3b18 	str.w	r3, [r5], #24
 80003ba:	4604      	mov	r4, r0
 80003bc:	f004 fc91 	bl	8004ce2 <mbed::Ticker::detach()>
 80003c0:	4628      	mov	r0, r5
 80003c2:	f7ff ffec 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 80003c6:	4620      	mov	r0, r4
 80003c8:	f004 fef8 	bl	80051bc <mbed::TimerEvent::~TimerEvent()>
 80003cc:	4620      	mov	r0, r4
 80003ce:	bd38      	pop	{r3, r4, r5, pc}
 80003d0:	08006b30 	.word	0x08006b30

080003d4 <mbed::Ticker::~Ticker()>:
 80003d4:	b510      	push	{r4, lr}
 80003d6:	4604      	mov	r4, r0
 80003d8:	f7ff ffea 	bl	80003b0 <mbed::Ticker::~Ticker()>
 80003dc:	4620      	mov	r0, r4
 80003de:	f005 f869 	bl	80054b4 <operator delete(void*)>
 80003e2:	4620      	mov	r0, r4
 80003e4:	bd10      	pop	{r4, pc}

080003e6 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>:
 80003e6:	b538      	push	{r3, r4, r5, lr}
 80003e8:	68cb      	ldr	r3, [r1, #12]
 80003ea:	4604      	mov	r4, r0
 80003ec:	460d      	mov	r5, r1
 80003ee:	b10b      	cbz	r3, 80003f4 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)+0xe>
 80003f0:	685b      	ldr	r3, [r3, #4]
 80003f2:	4798      	blx	r3
 80003f4:	68eb      	ldr	r3, [r5, #12]
 80003f6:	60e3      	str	r3, [r4, #12]
 80003f8:	4620      	mov	r0, r4
 80003fa:	bd38      	pop	{r3, r4, r5, pc}

080003fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 80003fc:	3801      	subs	r0, #1
 80003fe:	2300      	movs	r3, #0
 8000400:	fa21 f203 	lsr.w	r2, r1, r3
 8000404:	3308      	adds	r3, #8
 8000406:	2b20      	cmp	r3, #32
 8000408:	f800 2f01 	strb.w	r2, [r0, #1]!
 800040c:	d1f8      	bne.n	8000400 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800040e:	4770      	bx	lr

08000410 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000410:	6843      	ldr	r3, [r0, #4]
 8000412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000416:	700b      	strb	r3, [r1, #0]
 8000418:	6843      	ldr	r3, [r0, #4]
 800041a:	0a1b      	lsrs	r3, r3, #8
 800041c:	704b      	strb	r3, [r1, #1]
 800041e:	88c3      	ldrh	r3, [r0, #6]
 8000420:	708b      	strb	r3, [r1, #2]
 8000422:	79c3      	ldrb	r3, [r0, #7]
 8000424:	70cb      	strb	r3, [r1, #3]
 8000426:	460d      	mov	r5, r1
 8000428:	1d0a      	adds	r2, r1, #4
 800042a:	4604      	mov	r4, r0
 800042c:	2100      	movs	r1, #0
 800042e:	6860      	ldr	r0, [r4, #4]
 8000430:	4281      	cmp	r1, r0
 8000432:	eba2 0305 	sub.w	r3, r2, r5
 8000436:	f102 0204 	add.w	r2, r2, #4
 800043a:	d20f      	bcs.n	800045c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 800043c:	68e3      	ldr	r3, [r4, #12]
 800043e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000442:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000446:	0a18      	lsrs	r0, r3, #8
 8000448:	f802 0c03 	strb.w	r0, [r2, #-3]
 800044c:	0c18      	lsrs	r0, r3, #16
 800044e:	0e1b      	lsrs	r3, r3, #24
 8000450:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000454:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000458:	3101      	adds	r1, #1
 800045a:	e7e8      	b.n	800042e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 800045c:	6922      	ldr	r2, [r4, #16]
 800045e:	54ea      	strb	r2, [r5, r3]
 8000460:	6921      	ldr	r1, [r4, #16]
 8000462:	18ea      	adds	r2, r5, r3
 8000464:	0a09      	lsrs	r1, r1, #8
 8000466:	7051      	strb	r1, [r2, #1]
 8000468:	8a61      	ldrh	r1, [r4, #18]
 800046a:	7091      	strb	r1, [r2, #2]
 800046c:	7ce1      	ldrb	r1, [r4, #19]
 800046e:	70d1      	strb	r1, [r2, #3]
 8000470:	3304      	adds	r3, #4
 8000472:	442b      	add	r3, r5
 8000474:	2100      	movs	r1, #0
 8000476:	6922      	ldr	r2, [r4, #16]
 8000478:	4291      	cmp	r1, r2
 800047a:	eba3 0605 	sub.w	r6, r3, r5
 800047e:	f103 0304 	add.w	r3, r3, #4
 8000482:	d20f      	bcs.n	80004a4 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000484:	69a2      	ldr	r2, [r4, #24]
 8000486:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800048a:	f803 2c04 	strb.w	r2, [r3, #-4]
 800048e:	0a10      	lsrs	r0, r2, #8
 8000490:	f803 0c03 	strb.w	r0, [r3, #-3]
 8000494:	0c10      	lsrs	r0, r2, #16
 8000496:	0e12      	lsrs	r2, r2, #24
 8000498:	f803 0c02 	strb.w	r0, [r3, #-2]
 800049c:	f803 2c01 	strb.w	r2, [r3, #-1]
 80004a0:	3101      	adds	r1, #1
 80004a2:	e7e8      	b.n	8000476 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80004a4:	69e3      	ldr	r3, [r4, #28]
 80004a6:	55ab      	strb	r3, [r5, r6]
 80004a8:	69e2      	ldr	r2, [r4, #28]
 80004aa:	19ab      	adds	r3, r5, r6
 80004ac:	0a12      	lsrs	r2, r2, #8
 80004ae:	705a      	strb	r2, [r3, #1]
 80004b0:	8be2      	ldrh	r2, [r4, #30]
 80004b2:	709a      	strb	r2, [r3, #2]
 80004b4:	7fe2      	ldrb	r2, [r4, #31]
 80004b6:	70da      	strb	r2, [r3, #3]
 80004b8:	3604      	adds	r6, #4
 80004ba:	2700      	movs	r7, #0
 80004bc:	69e3      	ldr	r3, [r4, #28]
 80004be:	429f      	cmp	r7, r3
 80004c0:	d214      	bcs.n	80004ec <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80004c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004c4:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80004c8:	f005 fe1b 	bl	8006102 <strlen>
 80004cc:	4680      	mov	r8, r0
 80004ce:	4601      	mov	r1, r0
 80004d0:	19a8      	adds	r0, r5, r6
 80004d2:	f7ff ff93 	bl	80003fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80004d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004d8:	3604      	adds	r6, #4
 80004da:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80004de:	19a8      	adds	r0, r5, r6
 80004e0:	4642      	mov	r2, r8
 80004e2:	f005 fb1d 	bl	8005b20 <memcpy>
 80004e6:	4446      	add	r6, r8
 80004e8:	3701      	adds	r7, #1
 80004ea:	e7e7      	b.n	80004bc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 80004ec:	4630      	mov	r0, r6
 80004ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080004f2 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 80004f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004f4:	460e      	mov	r6, r1
 80004f6:	7903      	ldrb	r3, [r0, #4]
 80004f8:	f806 3b01 	strb.w	r3, [r6], #1
 80004fc:	4605      	mov	r5, r0
 80004fe:	6880      	ldr	r0, [r0, #8]
 8000500:	460f      	mov	r7, r1
 8000502:	f005 fdfe 	bl	8006102 <strlen>
 8000506:	4604      	mov	r4, r0
 8000508:	4601      	mov	r1, r0
 800050a:	4630      	mov	r0, r6
 800050c:	f7ff ff76 	bl	80003fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000510:	4622      	mov	r2, r4
 8000512:	68a9      	ldr	r1, [r5, #8]
 8000514:	1d78      	adds	r0, r7, #5
 8000516:	f005 fb03 	bl	8005b20 <memcpy>
 800051a:	1d60      	adds	r0, r4, #5
 800051c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800051e <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800051e:	8883      	ldrh	r3, [r0, #4]
 8000520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000524:	700b      	strb	r3, [r1, #0]
 8000526:	8883      	ldrh	r3, [r0, #4]
 8000528:	0a1b      	lsrs	r3, r3, #8
 800052a:	704b      	strb	r3, [r1, #1]
 800052c:	4605      	mov	r5, r0
 800052e:	6880      	ldr	r0, [r0, #8]
 8000530:	460c      	mov	r4, r1
 8000532:	f005 fde6 	bl	8006102 <strlen>
 8000536:	4607      	mov	r7, r0
 8000538:	4601      	mov	r1, r0
 800053a:	1ca0      	adds	r0, r4, #2
 800053c:	f7ff ff5e 	bl	80003fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000540:	463a      	mov	r2, r7
 8000542:	68a9      	ldr	r1, [r5, #8]
 8000544:	1da0      	adds	r0, r4, #6
 8000546:	f005 faeb 	bl	8005b20 <memcpy>
 800054a:	68e8      	ldr	r0, [r5, #12]
 800054c:	f005 fdd9 	bl	8006102 <strlen>
 8000550:	f107 0806 	add.w	r8, r7, #6
 8000554:	4606      	mov	r6, r0
 8000556:	4601      	mov	r1, r0
 8000558:	370a      	adds	r7, #10
 800055a:	eb04 0008 	add.w	r0, r4, r8
 800055e:	f7ff ff4d 	bl	80003fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000562:	4632      	mov	r2, r6
 8000564:	68e9      	ldr	r1, [r5, #12]
 8000566:	19e0      	adds	r0, r4, r7
 8000568:	f005 fada 	bl	8005b20 <memcpy>
 800056c:	6928      	ldr	r0, [r5, #16]
 800056e:	f005 fdc8 	bl	8006102 <strlen>
 8000572:	443e      	add	r6, r7
 8000574:	4601      	mov	r1, r0
 8000576:	4607      	mov	r7, r0
 8000578:	19a0      	adds	r0, r4, r6
 800057a:	3604      	adds	r6, #4
 800057c:	f7ff ff3e 	bl	80003fc <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000580:	463a      	mov	r2, r7
 8000582:	19a0      	adds	r0, r4, r6
 8000584:	6929      	ldr	r1, [r5, #16]
 8000586:	443e      	add	r6, r7
 8000588:	f005 faca 	bl	8005b20 <memcpy>
 800058c:	696b      	ldr	r3, [r5, #20]
 800058e:	55a3      	strb	r3, [r4, r6]
 8000590:	4434      	add	r4, r6
 8000592:	0a1a      	lsrs	r2, r3, #8
 8000594:	7062      	strb	r2, [r4, #1]
 8000596:	0c1a      	lsrs	r2, r3, #16
 8000598:	0e1b      	lsrs	r3, r3, #24
 800059a:	70a2      	strb	r2, [r4, #2]
 800059c:	70e3      	strb	r3, [r4, #3]
 800059e:	1d30      	adds	r0, r6, #4
 80005a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80005a4:	b510      	push	{r4, lr}
 80005a6:	2300      	movs	r3, #0
 80005a8:	6003      	str	r3, [r0, #0]
 80005aa:	3901      	subs	r1, #1
 80005ac:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80005b0:	fa02 f403 	lsl.w	r4, r2, r3
 80005b4:	6802      	ldr	r2, [r0, #0]
 80005b6:	3308      	adds	r3, #8
 80005b8:	4322      	orrs	r2, r4
 80005ba:	2b20      	cmp	r3, #32
 80005bc:	6002      	str	r2, [r0, #0]
 80005be:	d1f5      	bne.n	80005ac <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80005c0:	bd10      	pop	{r4, pc}

080005c2 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80005c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80005c4:	460c      	mov	r4, r1
 80005c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80005ca:	7103      	strb	r3, [r0, #4]
 80005cc:	4605      	mov	r5, r0
 80005ce:	a801      	add	r0, sp, #4
 80005d0:	f7ff ffe8 	bl	80005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005d4:	9b01      	ldr	r3, [sp, #4]
 80005d6:	1d62      	adds	r2, r4, #5
 80005d8:	1d58      	adds	r0, r3, #5
 80005da:	1b11      	subs	r1, r2, r4
 80005dc:	4288      	cmp	r0, r1
 80005de:	d904      	bls.n	80005ea <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80005e0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80005e4:	f802 1c02 	strb.w	r1, [r2, #-2]
 80005e8:	e7f7      	b.n	80005da <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80005ea:	4423      	add	r3, r4
 80005ec:	2200      	movs	r2, #0
 80005ee:	3404      	adds	r4, #4
 80005f0:	711a      	strb	r2, [r3, #4]
 80005f2:	60ac      	str	r4, [r5, #8]
 80005f4:	b003      	add	sp, #12
 80005f6:	bd30      	pop	{r4, r5, pc}

080005f8 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 80005f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80005fa:	780b      	ldrb	r3, [r1, #0]
 80005fc:	8083      	strh	r3, [r0, #4]
 80005fe:	784a      	ldrb	r2, [r1, #1]
 8000600:	b085      	sub	sp, #20
 8000602:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000606:	8083      	strh	r3, [r0, #4]
 8000608:	460c      	mov	r4, r1
 800060a:	4606      	mov	r6, r0
 800060c:	3102      	adds	r1, #2
 800060e:	a801      	add	r0, sp, #4
 8000610:	f7ff ffc8 	bl	80005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000614:	9f01      	ldr	r7, [sp, #4]
 8000616:	1da3      	adds	r3, r4, #6
 8000618:	1dbd      	adds	r5, r7, #6
 800061a:	1b1a      	subs	r2, r3, r4
 800061c:	4295      	cmp	r5, r2
 800061e:	d904      	bls.n	800062a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000620:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000624:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000628:	e7f7      	b.n	800061a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800062a:	19e3      	adds	r3, r4, r7
 800062c:	2200      	movs	r2, #0
 800062e:	715a      	strb	r2, [r3, #5]
 8000630:	1d63      	adds	r3, r4, #5
 8000632:	60b3      	str	r3, [r6, #8]
 8000634:	1961      	adds	r1, r4, r5
 8000636:	a802      	add	r0, sp, #8
 8000638:	f7ff ffb4 	bl	80005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800063c:	1d2b      	adds	r3, r5, #4
 800063e:	9d02      	ldr	r5, [sp, #8]
 8000640:	f107 020a 	add.w	r2, r7, #10
 8000644:	441d      	add	r5, r3
 8000646:	4422      	add	r2, r4
 8000648:	1b11      	subs	r1, r2, r4
 800064a:	428d      	cmp	r5, r1
 800064c:	d904      	bls.n	8000658 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800064e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000652:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000656:	e7f7      	b.n	8000648 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000658:	1961      	adds	r1, r4, r5
 800065a:	3b01      	subs	r3, #1
 800065c:	4423      	add	r3, r4
 800065e:	2200      	movs	r2, #0
 8000660:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000664:	a803      	add	r0, sp, #12
 8000666:	60f3      	str	r3, [r6, #12]
 8000668:	f7ff ff9c 	bl	80005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800066c:	9803      	ldr	r0, [sp, #12]
 800066e:	3504      	adds	r5, #4
 8000670:	4428      	add	r0, r5
 8000672:	1963      	adds	r3, r4, r5
 8000674:	1b1a      	subs	r2, r3, r4
 8000676:	4290      	cmp	r0, r2
 8000678:	d904      	bls.n	8000684 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 800067a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800067e:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000682:	e7f7      	b.n	8000674 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000684:	1822      	adds	r2, r4, r0
 8000686:	3d01      	subs	r5, #1
 8000688:	2300      	movs	r3, #0
 800068a:	4425      	add	r5, r4
 800068c:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000690:	6135      	str	r5, [r6, #16]
 8000692:	7893      	ldrb	r3, [r2, #2]
 8000694:	7851      	ldrb	r1, [r2, #1]
 8000696:	78d2      	ldrb	r2, [r2, #3]
 8000698:	041b      	lsls	r3, r3, #16
 800069a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800069e:	5c21      	ldrb	r1, [r4, r0]
 80006a0:	430b      	orrs	r3, r1
 80006a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80006a6:	3004      	adds	r0, #4
 80006a8:	6173      	str	r3, [r6, #20]
 80006aa:	b005      	add	sp, #20
 80006ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

080006ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80006ae:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80006b2:	6843      	ldr	r3, [r0, #4]
 80006b4:	680d      	ldr	r5, [r1, #0]
 80006b6:	429d      	cmp	r5, r3
 80006b8:	4604      	mov	r4, r0
 80006ba:	460e      	mov	r6, r1
 80006bc:	d904      	bls.n	80006c8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80006be:	00a9      	lsls	r1, r5, #2
 80006c0:	68c0      	ldr	r0, [r0, #12]
 80006c2:	f005 fcc3 	bl	800604c <realloc>
 80006c6:	60e0      	str	r0, [r4, #12]
 80006c8:	6065      	str	r5, [r4, #4]
 80006ca:	1d32      	adds	r2, r6, #4
 80006cc:	2100      	movs	r1, #0
 80006ce:	6860      	ldr	r0, [r4, #4]
 80006d0:	4281      	cmp	r1, r0
 80006d2:	eba2 0306 	sub.w	r3, r2, r6
 80006d6:	f102 0204 	add.w	r2, r2, #4
 80006da:	d213      	bcs.n	8000704 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80006dc:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80006e0:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80006e4:	041b      	lsls	r3, r3, #16
 80006e6:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80006ea:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 80006ee:	4303      	orrs	r3, r0
 80006f0:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80006f4:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 80006f8:	68e0      	ldr	r0, [r4, #12]
 80006fa:	60a3      	str	r3, [r4, #8]
 80006fc:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000700:	3101      	adds	r1, #1
 8000702:	e7e4      	b.n	80006ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000704:	18f2      	adds	r2, r6, r3
 8000706:	5cf1      	ldrb	r1, [r6, r3]
 8000708:	7895      	ldrb	r5, [r2, #2]
 800070a:	7850      	ldrb	r0, [r2, #1]
 800070c:	78d2      	ldrb	r2, [r2, #3]
 800070e:	042d      	lsls	r5, r5, #16
 8000710:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000714:	430d      	orrs	r5, r1
 8000716:	1d1f      	adds	r7, r3, #4
 8000718:	6923      	ldr	r3, [r4, #16]
 800071a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800071e:	429d      	cmp	r5, r3
 8000720:	d904      	bls.n	800072c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000722:	00a9      	lsls	r1, r5, #2
 8000724:	69a0      	ldr	r0, [r4, #24]
 8000726:	f005 fc91 	bl	800604c <realloc>
 800072a:	61a0      	str	r0, [r4, #24]
 800072c:	6125      	str	r5, [r4, #16]
 800072e:	19f3      	adds	r3, r6, r7
 8000730:	2100      	movs	r1, #0
 8000732:	6922      	ldr	r2, [r4, #16]
 8000734:	4291      	cmp	r1, r2
 8000736:	eba3 0506 	sub.w	r5, r3, r6
 800073a:	f103 0304 	add.w	r3, r3, #4
 800073e:	d213      	bcs.n	8000768 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000740:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000744:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000748:	0412      	lsls	r2, r2, #16
 800074a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800074e:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000752:	4302      	orrs	r2, r0
 8000754:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000758:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800075c:	69a0      	ldr	r0, [r4, #24]
 800075e:	6162      	str	r2, [r4, #20]
 8000760:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000764:	3101      	adds	r1, #1
 8000766:	e7e4      	b.n	8000732 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000768:	1973      	adds	r3, r6, r5
 800076a:	5d72      	ldrb	r2, [r6, r5]
 800076c:	789f      	ldrb	r7, [r3, #2]
 800076e:	7859      	ldrb	r1, [r3, #1]
 8000770:	78db      	ldrb	r3, [r3, #3]
 8000772:	043f      	lsls	r7, r7, #16
 8000774:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000778:	4317      	orrs	r7, r2
 800077a:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 800077e:	69e3      	ldr	r3, [r4, #28]
 8000780:	429f      	cmp	r7, r3
 8000782:	f105 0504 	add.w	r5, r5, #4
 8000786:	d904      	bls.n	8000792 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 8000788:	00b9      	lsls	r1, r7, #2
 800078a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800078c:	f005 fc5e 	bl	800604c <realloc>
 8000790:	6260      	str	r0, [r4, #36]	; 0x24
 8000792:	61e7      	str	r7, [r4, #28]
 8000794:	2700      	movs	r7, #0
 8000796:	46b8      	mov	r8, r7
 8000798:	69e3      	ldr	r3, [r4, #28]
 800079a:	429f      	cmp	r7, r3
 800079c:	d21a      	bcs.n	80007d4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 800079e:	1971      	adds	r1, r6, r5
 80007a0:	a801      	add	r0, sp, #4
 80007a2:	f7ff feff 	bl	80005a4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007a6:	1d2b      	adds	r3, r5, #4
 80007a8:	9d01      	ldr	r5, [sp, #4]
 80007aa:	18f2      	adds	r2, r6, r3
 80007ac:	441d      	add	r5, r3
 80007ae:	1b91      	subs	r1, r2, r6
 80007b0:	42a9      	cmp	r1, r5
 80007b2:	d204      	bcs.n	80007be <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80007b4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80007b8:	f802 1c02 	strb.w	r1, [r2, #-2]
 80007bc:	e7f7      	b.n	80007ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80007be:	1972      	adds	r2, r6, r5
 80007c0:	3b01      	subs	r3, #1
 80007c2:	f802 8c01 	strb.w	r8, [r2, #-1]
 80007c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80007c8:	4433      	add	r3, r6
 80007ca:	6223      	str	r3, [r4, #32]
 80007cc:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80007d0:	3701      	adds	r7, #1
 80007d2:	e7e1      	b.n	8000798 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80007d4:	4628      	mov	r0, r5
 80007d6:	b002      	add	sp, #8
 80007d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080007dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80007dc:	b530      	push	{r4, r5, lr}
 80007de:	b085      	sub	sp, #20
 80007e0:	4604      	mov	r4, r0
 80007e2:	4b09      	ldr	r3, [pc, #36]	; (8000808 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80007e4:	9301      	str	r3, [sp, #4]
 80007e6:	2300      	movs	r3, #0
 80007e8:	9302      	str	r3, [sp, #8]
 80007ea:	9303      	str	r3, [sp, #12]
 80007ec:	f854 3bec 	ldr.w	r3, [r4], #236
 80007f0:	aa01      	add	r2, sp, #4
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	210a      	movs	r1, #10
 80007f6:	4605      	mov	r5, r0
 80007f8:	4798      	blx	r3
 80007fa:	4620      	mov	r0, r4
 80007fc:	f004 fadd 	bl	8004dba <mbed::Timer::read_ms()>
 8000800:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000804:	b005      	add	sp, #20
 8000806:	bd30      	pop	{r4, r5, pc}
 8000808:	080064b4 	.word	0x080064b4

0800080c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 800080c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000810:	b086      	sub	sp, #24
 8000812:	4b2b      	ldr	r3, [pc, #172]	; (80008c0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000814:	9300      	str	r3, [sp, #0]
 8000816:	2200      	movs	r2, #0
 8000818:	4b2a      	ldr	r3, [pc, #168]	; (80008c4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 800081a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800081e:	4605      	mov	r5, r0
 8000820:	9302      	str	r3, [sp, #8]
 8000822:	9303      	str	r3, [sp, #12]
 8000824:	9304      	str	r3, [sp, #16]
 8000826:	9205      	str	r2, [sp, #20]
 8000828:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 800082c:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000830:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000834:	6823      	ldr	r3, [r4, #0]
 8000836:	b1bb      	cbz	r3, 8000868 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000838:	6858      	ldr	r0, [r3, #4]
 800083a:	689a      	ldr	r2, [r3, #8]
 800083c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000840:	681a      	ldr	r2, [r3, #0]
 8000842:	6803      	ldr	r3, [r0, #0]
 8000844:	9202      	str	r2, [sp, #8]
 8000846:	689b      	ldr	r3, [r3, #8]
 8000848:	4798      	blx	r3
 800084a:	6823      	ldr	r3, [r4, #0]
 800084c:	9003      	str	r0, [sp, #12]
 800084e:	6858      	ldr	r0, [r3, #4]
 8000850:	6803      	ldr	r3, [r0, #0]
 8000852:	68db      	ldr	r3, [r3, #12]
 8000854:	4798      	blx	r3
 8000856:	6821      	ldr	r1, [r4, #0]
 8000858:	682b      	ldr	r3, [r5, #0]
 800085a:	9004      	str	r0, [sp, #16]
 800085c:	9705      	str	r7, [sp, #20]
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	6909      	ldr	r1, [r1, #16]
 8000862:	466a      	mov	r2, sp
 8000864:	4628      	mov	r0, r5
 8000866:	4798      	blx	r3
 8000868:	3404      	adds	r4, #4
 800086a:	42b4      	cmp	r4, r6
 800086c:	d1e2      	bne.n	8000834 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800086e:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000872:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000876:	6820      	ldr	r0, [r4, #0]
 8000878:	b1c8      	cbz	r0, 80008ae <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800087a:	6843      	ldr	r3, [r0, #4]
 800087c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000880:	6883      	ldr	r3, [r0, #8]
 8000882:	9302      	str	r3, [sp, #8]
 8000884:	6803      	ldr	r3, [r0, #0]
 8000886:	689b      	ldr	r3, [r3, #8]
 8000888:	4798      	blx	r3
 800088a:	9003      	str	r0, [sp, #12]
 800088c:	6820      	ldr	r0, [r4, #0]
 800088e:	6803      	ldr	r3, [r0, #0]
 8000890:	68db      	ldr	r3, [r3, #12]
 8000892:	4798      	blx	r3
 8000894:	682b      	ldr	r3, [r5, #0]
 8000896:	9004      	str	r0, [sp, #16]
 8000898:	6820      	ldr	r0, [r4, #0]
 800089a:	f8d3 8000 	ldr.w	r8, [r3]
 800089e:	6803      	ldr	r3, [r0, #0]
 80008a0:	9705      	str	r7, [sp, #20]
 80008a2:	685b      	ldr	r3, [r3, #4]
 80008a4:	4798      	blx	r3
 80008a6:	466a      	mov	r2, sp
 80008a8:	4601      	mov	r1, r0
 80008aa:	4628      	mov	r0, r5
 80008ac:	47c0      	blx	r8
 80008ae:	3404      	adds	r4, #4
 80008b0:	42a6      	cmp	r6, r4
 80008b2:	d1e0      	bne.n	8000876 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 80008b4:	2301      	movs	r3, #1
 80008b6:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 80008ba:	b006      	add	sp, #24
 80008bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008c0:	080064cc 	.word	0x080064cc
 80008c4:	08006748 	.word	0x08006748

080008c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80008c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008ca:	b085      	sub	sp, #20
 80008cc:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80008d0:	4b1f      	ldr	r3, [pc, #124]	; (8000950 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80008d2:	9301      	str	r3, [sp, #4]
 80008d4:	4604      	mov	r4, r0
 80008d6:	2300      	movs	r3, #0
 80008d8:	4628      	mov	r0, r5
 80008da:	9302      	str	r3, [sp, #8]
 80008dc:	9303      	str	r3, [sp, #12]
 80008de:	460e      	mov	r6, r1
 80008e0:	f004 fa6b 	bl	8004dba <mbed::Timer::read_ms()>
 80008e4:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80008e8:	4631      	mov	r1, r6
 80008ea:	1a87      	subs	r7, r0, r2
 80008ec:	a801      	add	r0, sp, #4
 80008ee:	f7ff fc9b 	bl	8000228 <std_msgs::Time::deserialize(unsigned char*)>
 80008f2:	9b02      	ldr	r3, [sp, #8]
 80008f4:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 80008f8:	fbb7 f2f6 	udiv	r2, r7, r6
 80008fc:	4413      	add	r3, r2
 80008fe:	9302      	str	r3, [sp, #8]
 8000900:	fb06 7212 	mls	r2, r6, r2, r7
 8000904:	9b03      	ldr	r3, [sp, #12]
 8000906:	4f13      	ldr	r7, [pc, #76]	; (8000954 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000908:	4628      	mov	r0, r5
 800090a:	fb07 3202 	mla	r2, r7, r2, r3
 800090e:	9203      	str	r2, [sp, #12]
 8000910:	f004 fa53 	bl	8004dba <mbed::Timer::read_ms()>
 8000914:	9a02      	ldr	r2, [sp, #8]
 8000916:	fbb0 f3f6 	udiv	r3, r0, r6
 800091a:	3a01      	subs	r2, #1
 800091c:	1ad2      	subs	r2, r2, r3
 800091e:	9903      	ldr	r1, [sp, #12]
 8000920:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000924:	4a0c      	ldr	r2, [pc, #48]	; (8000958 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000926:	fb06 0313 	mls	r3, r6, r3, r0
 800092a:	440a      	add	r2, r1
 800092c:	fb07 2313 	mls	r3, r7, r3, r2
 8000930:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000934:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000938:	f504 7080 	add.w	r0, r4, #256	; 0x100
 800093c:	f000 fba2 	bl	8001084 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000940:	4628      	mov	r0, r5
 8000942:	f004 fa3a 	bl	8004dba <mbed::Timer::read_ms()>
 8000946:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800094a:	b005      	add	sp, #20
 800094c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800094e:	bf00      	nop
 8000950:	080064b4 	.word	0x080064b4
 8000954:	000f4240 	.word	0x000f4240
 8000958:	3b9aca00 	.word	0x3b9aca00

0800095c <_GLOBAL__sub_I_g_motor_0>:
 800095c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800095e:	4c4d      	ldr	r4, [pc, #308]	; (8000a94 <_GLOBAL__sub_I_g_motor_0+0x138>)
 8000960:	4b4d      	ldr	r3, [pc, #308]	; (8000a98 <_GLOBAL__sub_I_g_motor_0+0x13c>)
 8000962:	4620      	mov	r0, r4
 8000964:	2500      	movs	r5, #0
 8000966:	f840 3b04 	str.w	r3, [r0], #4
 800096a:	2304      	movs	r3, #4
 800096c:	2203      	movs	r2, #3
 800096e:	2102      	movs	r1, #2
 8000970:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000974:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000978:	f000 fc72 	bl	8001260 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 800097c:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 8000980:	f004 fa31 	bl	8004de6 <mbed::Timer::Timer()>
 8000984:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000988:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 800098c:	f104 00ec 	add.w	r0, r4, #236	; 0xec
 8000990:	f004 f9e7 	bl	8004d62 <mbed::Timer::start()>
 8000994:	4b41      	ldr	r3, [pc, #260]	; (8000a9c <_GLOBAL__sub_I_g_motor_0+0x140>)
 8000996:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 800099a:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 800099e:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 80009a2:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 80009a6:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 80009aa:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 80009ae:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 80009b2:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 80009b6:	462a      	mov	r2, r5
 80009b8:	1963      	adds	r3, r4, r5
 80009ba:	3504      	adds	r5, #4
 80009bc:	2d64      	cmp	r5, #100	; 0x64
 80009be:	f8c3 250c 	str.w	r2, [r3, #1292]	; 0x50c
 80009c2:	d1f9      	bne.n	80009b8 <_GLOBAL__sub_I_g_motor_0+0x5c>
 80009c4:	2300      	movs	r3, #0
 80009c6:	4619      	mov	r1, r3
 80009c8:	18e2      	adds	r2, r4, r3
 80009ca:	3304      	adds	r3, #4
 80009cc:	2b64      	cmp	r3, #100	; 0x64
 80009ce:	f8c2 1570 	str.w	r1, [r2, #1392]	; 0x570
 80009d2:	d1f9      	bne.n	80009c8 <_GLOBAL__sub_I_g_motor_0+0x6c>
 80009d4:	2300      	movs	r3, #0
 80009d6:	4619      	mov	r1, r3
 80009d8:	18e2      	adds	r2, r4, r3
 80009da:	3301      	adds	r3, #1
 80009dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80009e0:	f882 110c 	strb.w	r1, [r2, #268]	; 0x10c
 80009e4:	d1f8      	bne.n	80009d8 <_GLOBAL__sub_I_g_motor_0+0x7c>
 80009e6:	2300      	movs	r3, #0
 80009e8:	461d      	mov	r5, r3
 80009ea:	18e2      	adds	r2, r4, r3
 80009ec:	3301      	adds	r3, #1
 80009ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80009f2:	f882 530c 	strb.w	r5, [r2, #780]	; 0x30c
 80009f6:	d1f8      	bne.n	80009ea <_GLOBAL__sub_I_g_motor_0+0x8e>
 80009f8:	4a29      	ldr	r2, [pc, #164]	; (8000aa0 <_GLOBAL__sub_I_g_motor_0+0x144>)
 80009fa:	492a      	ldr	r1, [pc, #168]	; (8000aa4 <_GLOBAL__sub_I_g_motor_0+0x148>)
 80009fc:	4825      	ldr	r0, [pc, #148]	; (8000a94 <_GLOBAL__sub_I_g_motor_0+0x138>)
 80009fe:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8000a02:	f004 fd39 	bl	8005478 <__aeabi_atexit>
 8000a06:	4c28      	ldr	r4, [pc, #160]	; (8000aa8 <_GLOBAL__sub_I_g_motor_0+0x14c>)
 8000a08:	4828      	ldr	r0, [pc, #160]	; (8000aac <_GLOBAL__sub_I_g_motor_0+0x150>)
 8000a0a:	220c      	movs	r2, #12
 8000a0c:	210b      	movs	r1, #11
 8000a0e:	f004 fa9f 	bl	8004f50 <mbed::CAN::CAN(PinName, PinName)>
 8000a12:	4a23      	ldr	r2, [pc, #140]	; (8000aa0 <_GLOBAL__sub_I_g_motor_0+0x144>)
 8000a14:	4926      	ldr	r1, [pc, #152]	; (8000ab0 <_GLOBAL__sub_I_g_motor_0+0x154>)
 8000a16:	4825      	ldr	r0, [pc, #148]	; (8000aac <_GLOBAL__sub_I_g_motor_0+0x150>)
 8000a18:	f004 fd2e 	bl	8005478 <__aeabi_atexit>
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	f004 fbaf 	bl	8005180 <mbed::TimerEvent::TimerEvent()>
 8000a22:	4b24      	ldr	r3, [pc, #144]	; (8000ab4 <_GLOBAL__sub_I_g_motor_0+0x158>)
 8000a24:	6265      	str	r5, [r4, #36]	; 0x24
 8000a26:	4a1e      	ldr	r2, [pc, #120]	; (8000aa0 <_GLOBAL__sub_I_g_motor_0+0x144>)
 8000a28:	4923      	ldr	r1, [pc, #140]	; (8000ab8 <_GLOBAL__sub_I_g_motor_0+0x15c>)
 8000a2a:	6023      	str	r3, [r4, #0]
 8000a2c:	4620      	mov	r0, r4
 8000a2e:	f004 fd23 	bl	8005478 <__aeabi_atexit>
 8000a32:	221c      	movs	r2, #28
 8000a34:	2100      	movs	r1, #0
 8000a36:	4821      	ldr	r0, [pc, #132]	; (8000abc <_GLOBAL__sub_I_g_motor_0+0x160>)
 8000a38:	4c21      	ldr	r4, [pc, #132]	; (8000ac0 <_GLOBAL__sub_I_g_motor_0+0x164>)
 8000a3a:	f005 f896 	bl	8005b6a <memset>
 8000a3e:	2105      	movs	r1, #5
 8000a40:	481e      	ldr	r0, [pc, #120]	; (8000abc <_GLOBAL__sub_I_g_motor_0+0x160>)
 8000a42:	f000 fd3e 	bl	80014c2 <gpio_init_out>
 8000a46:	4b1f      	ldr	r3, [pc, #124]	; (8000ac4 <_GLOBAL__sub_I_g_motor_0+0x168>)
 8000a48:	491f      	ldr	r1, [pc, #124]	; (8000ac8 <_GLOBAL__sub_I_g_motor_0+0x16c>)
 8000a4a:	4a20      	ldr	r2, [pc, #128]	; (8000acc <_GLOBAL__sub_I_g_motor_0+0x170>)
 8000a4c:	6159      	str	r1, [r3, #20]
 8000a4e:	4820      	ldr	r0, [pc, #128]	; (8000ad0 <_GLOBAL__sub_I_g_motor_0+0x174>)
 8000a50:	6018      	str	r0, [r3, #0]
 8000a52:	2101      	movs	r1, #1
 8000a54:	611d      	str	r5, [r3, #16]
 8000a56:	60da      	str	r2, [r3, #12]
 8000a58:	6199      	str	r1, [r3, #24]
 8000a5a:	609c      	str	r4, [r3, #8]
 8000a5c:	4b1d      	ldr	r3, [pc, #116]	; (8000ad4 <_GLOBAL__sub_I_g_motor_0+0x178>)
 8000a5e:	6018      	str	r0, [r3, #0]
 8000a60:	6199      	str	r1, [r3, #24]
 8000a62:	481d      	ldr	r0, [pc, #116]	; (8000ad8 <_GLOBAL__sub_I_g_motor_0+0x17c>)
 8000a64:	491d      	ldr	r1, [pc, #116]	; (8000adc <_GLOBAL__sub_I_g_motor_0+0x180>)
 8000a66:	6158      	str	r0, [r3, #20]
 8000a68:	6099      	str	r1, [r3, #8]
 8000a6a:	481d      	ldr	r0, [pc, #116]	; (8000ae0 <_GLOBAL__sub_I_g_motor_0+0x184>)
 8000a6c:	491d      	ldr	r1, [pc, #116]	; (8000ae4 <_GLOBAL__sub_I_g_motor_0+0x188>)
 8000a6e:	611d      	str	r5, [r3, #16]
 8000a70:	60da      	str	r2, [r3, #12]
 8000a72:	4b1d      	ldr	r3, [pc, #116]	; (8000ae8 <_GLOBAL__sub_I_g_motor_0+0x18c>)
 8000a74:	e880 0024 	stmia.w	r0, {r2, r5}
 8000a78:	e881 0024 	stmia.w	r1, {r2, r5}
 8000a7c:	4a1b      	ldr	r2, [pc, #108]	; (8000aec <_GLOBAL__sub_I_g_motor_0+0x190>)
 8000a7e:	601a      	str	r2, [r3, #0]
 8000a80:	6058      	str	r0, [r3, #4]
 8000a82:	611d      	str	r5, [r3, #16]
 8000a84:	4a1a      	ldr	r2, [pc, #104]	; (8000af0 <_GLOBAL__sub_I_g_motor_0+0x194>)
 8000a86:	4b1b      	ldr	r3, [pc, #108]	; (8000af4 <_GLOBAL__sub_I_g_motor_0+0x198>)
 8000a88:	601a      	str	r2, [r3, #0]
 8000a8a:	6059      	str	r1, [r3, #4]
 8000a8c:	611d      	str	r5, [r3, #16]
 8000a8e:	b003      	add	sp, #12
 8000a90:	bd30      	pop	{r4, r5, pc}
 8000a92:	bf00      	nop
 8000a94:	20000334 	.word	0x20000334
 8000a98:	0800652c 	.word	0x0800652c
 8000a9c:	080064fc 	.word	0x080064fc
 8000aa0:	20000194 	.word	0x20000194
 8000aa4:	08001035 	.word	0x08001035
 8000aa8:	200009b8 	.word	0x200009b8
 8000aac:	2000024c 	.word	0x2000024c
 8000ab0:	08004ed9 	.word	0x08004ed9
 8000ab4:	08006b30 	.word	0x08006b30
 8000ab8:	080003b1 	.word	0x080003b1
 8000abc:	20000318 	.word	0x20000318
 8000ac0:	0800655c 	.word	0x0800655c
 8000ac4:	20000980 	.word	0x20000980
 8000ac8:	080002d1 	.word	0x080002d1
 8000acc:	08006514 	.word	0x08006514
 8000ad0:	08006540 	.word	0x08006540
 8000ad4:	2000099c 	.word	0x2000099c
 8000ad8:	080002dd 	.word	0x080002dd
 8000adc:	08006564 	.word	0x08006564
 8000ae0:	20000300 	.word	0x20000300
 8000ae4:	20000308 	.word	0x20000308
 8000ae8:	20000958 	.word	0x20000958
 8000aec:	0800656c 	.word	0x0800656c
 8000af0:	08006576 	.word	0x08006576
 8000af4:	2000096c 	.word	0x2000096c

08000af8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000af8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8000afc:	f100 08ec 	add.w	r8, r0, #236	; 0xec
 8000b00:	4604      	mov	r4, r0
 8000b02:	4640      	mov	r0, r8
 8000b04:	f004 f959 	bl	8004dba <mbed::Timer::read_ms()>
 8000b08:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000b0c:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000b10:	1ac3      	subs	r3, r0, r3
 8000b12:	4293      	cmp	r3, r2
 8000b14:	bf84      	itt	hi
 8000b16:	2300      	movhi	r3, #0
 8000b18:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000b1c:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000b20:	4605      	mov	r5, r0
 8000b22:	b133      	cbz	r3, 8000b32 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000b24:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000b28:	4283      	cmp	r3, r0
 8000b2a:	bf3c      	itt	cc
 8000b2c:	2300      	movcc	r3, #0
 8000b2e:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000b32:	f104 0904 	add.w	r9, r4, #4
 8000b36:	2600      	movs	r6, #0
 8000b38:	f504 7786 	add.w	r7, r4, #268	; 0x10c
 8000b3c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000b40:	b9ab      	cbnz	r3, 8000b6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x76>
 8000b42:	4648      	mov	r0, r9
 8000b44:	f000 faac 	bl	80010a0 <BufferedSerial::readable()>
 8000b48:	b9e8      	cbnz	r0, 8000b86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x8e>
 8000b4a:	f894 05e8 	ldrb.w	r0, [r4, #1512]	; 0x5e8
 8000b4e:	b160      	cbz	r0, 8000b6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x72>
 8000b50:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000b54:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000b58:	1aeb      	subs	r3, r5, r3
 8000b5a:	4293      	cmp	r3, r2
 8000b5c:	d904      	bls.n	8000b68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x70>
 8000b5e:	4620      	mov	r0, r4
 8000b60:	f7ff fe3c 	bl	80007dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000b64:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000b68:	2000      	movs	r0, #0
 8000b6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000b6e:	4640      	mov	r0, r8
 8000b70:	f004 f923 	bl	8004dba <mbed::Timer::read_ms()>
 8000b74:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000b78:	1b40      	subs	r0, r0, r5
 8000b7a:	4298      	cmp	r0, r3
 8000b7c:	d9e1      	bls.n	8000b42 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4a>
 8000b7e:	f06f 0001 	mvn.w	r0, #1
 8000b82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000b86:	4648      	mov	r0, r9
 8000b88:	f000 fa94 	bl	80010b4 <BufferedSerial::getc()>
 8000b8c:	2800      	cmp	r0, #0
 8000b8e:	dbdc      	blt.n	8000b4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x52>
 8000b90:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000b94:	f8d4 a5d4 	ldr.w	r10, [r4, #1492]	; 0x5d4
 8000b98:	4403      	add	r3, r0
 8000b9a:	f1ba 0f07 	cmp.w	r10, #7
 8000b9e:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000ba2:	d112      	bne.n	8000bca <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd2>
 8000ba4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000ba8:	1c5a      	adds	r2, r3, #1
 8000baa:	4423      	add	r3, r4
 8000bac:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000bb0:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000bb4:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000bb8:	3b01      	subs	r3, #1
 8000bba:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000bbe:	2b00      	cmp	r3, #0
 8000bc0:	d1bc      	bne.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000bc2:	2308      	movs	r3, #8
 8000bc4:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000bc8:	e7b8      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000bca:	f1ba 0f00 	cmp.w	r10, #0
 8000bce:	d114      	bne.n	8000bfa <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x102>
 8000bd0:	28ff      	cmp	r0, #255	; 0xff
 8000bd2:	d107      	bne.n	8000be4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xec>
 8000bd4:	2301      	movs	r3, #1
 8000bd6:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000bda:	f105 0314 	add.w	r3, r5, #20
 8000bde:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000be2:	e7ab      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000be4:	4640      	mov	r0, r8
 8000be6:	f004 f8e8 	bl	8004dba <mbed::Timer::read_ms()>
 8000bea:	f241 3388 	movw	r3, #5000	; 0x1388
 8000bee:	1b40      	subs	r0, r0, r5
 8000bf0:	4298      	cmp	r0, r3
 8000bf2:	d9a3      	bls.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000bf4:	f884 a5e8 	strb.w	r10, [r4, #1512]	; 0x5e8
 8000bf8:	e7c1      	b.n	8000b7e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x86>
 8000bfa:	f1ba 0f01 	cmp.w	r10, #1
 8000bfe:	d10d      	bne.n	8000c1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x124>
 8000c00:	28fe      	cmp	r0, #254	; 0xfe
 8000c02:	d101      	bne.n	8000c08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x110>
 8000c04:	2302      	movs	r3, #2
 8000c06:	e7dd      	b.n	8000bc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c08:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000c0c:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000c10:	2b00      	cmp	r3, #0
 8000c12:	d193      	bne.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c14:	4620      	mov	r0, r4
 8000c16:	f7ff fde1 	bl	80007dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000c1a:	e78f      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c1c:	f1ba 0f02 	cmp.w	r10, #2
 8000c20:	d109      	bne.n	8000c36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000c22:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000c26:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000c2a:	2303      	movs	r3, #3
 8000c2c:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c30:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000c34:	e782      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c36:	f1ba 0f03 	cmp.w	r10, #3
 8000c3a:	d107      	bne.n	8000c4c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x154>
 8000c3c:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000c40:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000c44:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000c48:	2304      	movs	r3, #4
 8000c4a:	e7bb      	b.n	8000bc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c4c:	f1ba 0f04 	cmp.w	r10, #4
 8000c50:	d10b      	bne.n	8000c6a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000c52:	425a      	negs	r2, r3
 8000c54:	b2d2      	uxtb	r2, r2
 8000c56:	b2db      	uxtb	r3, r3
 8000c58:	bf58      	it	pl
 8000c5a:	4253      	negpl	r3, r2
 8000c5c:	2bff      	cmp	r3, #255	; 0xff
 8000c5e:	d101      	bne.n	8000c64 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x16c>
 8000c60:	2305      	movs	r3, #5
 8000c62:	e7af      	b.n	8000bc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xcc>
 8000c64:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000c68:	e768      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c6a:	f1ba 0f05 	cmp.w	r10, #5
 8000c6e:	d103      	bne.n	8000c78 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x180>
 8000c70:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000c74:	2306      	movs	r3, #6
 8000c76:	e7d9      	b.n	8000c2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x134>
 8000c78:	f1ba 0f06 	cmp.w	r10, #6
 8000c7c:	d10b      	bne.n	8000c96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x19e>
 8000c7e:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000c82:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000c86:	2307      	movs	r3, #7
 8000c88:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c8c:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000c90:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000c94:	e793      	b.n	8000bbe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xc6>
 8000c96:	f1ba 0f08 	cmp.w	r10, #8
 8000c9a:	f47f af4f 	bne.w	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000c9e:	425a      	negs	r2, r3
 8000ca0:	b2d2      	uxtb	r2, r2
 8000ca2:	b2db      	uxtb	r3, r3
 8000ca4:	bf58      	it	pl
 8000ca6:	4253      	negpl	r3, r2
 8000ca8:	2bff      	cmp	r3, #255	; 0xff
 8000caa:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000cae:	f47f af45 	bne.w	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cb2:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000cb6:	b96b      	cbnz	r3, 8000cd4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1dc>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	f7ff fd8f 	bl	80007dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000cbe:	4620      	mov	r0, r4
 8000cc0:	f7ff fda4 	bl	800080c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000cc4:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000cc8:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000ccc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000cd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8000cd4:	2b0a      	cmp	r3, #10
 8000cd6:	d104      	bne.n	8000ce2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ea>
 8000cd8:	4639      	mov	r1, r7
 8000cda:	4620      	mov	r0, r4
 8000cdc:	f7ff fdf4 	bl	80008c8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000ce0:	e72c      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000ce2:	2b06      	cmp	r3, #6
 8000ce4:	d108      	bne.n	8000cf8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x200>
 8000ce6:	4639      	mov	r1, r7
 8000ce8:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000cec:	f7ff fcdf 	bl	80006ae <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000cf0:	2301      	movs	r3, #1
 8000cf2:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000cf6:	e721      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000cf8:	2b0b      	cmp	r3, #11
 8000cfa:	d102      	bne.n	8000d02 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x20a>
 8000cfc:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000d00:	e71c      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d02:	33f8      	adds	r3, #248	; 0xf8
 8000d04:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000d08:	2800      	cmp	r0, #0
 8000d0a:	f43f af17 	beq.w	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>
 8000d0e:	6803      	ldr	r3, [r0, #0]
 8000d10:	4639      	mov	r1, r7
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	4798      	blx	r3
 8000d16:	e711      	b.n	8000b3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x44>

08000d18 <main>:
 8000d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8000d1c:	4c86      	ldr	r4, [pc, #536]	; (8000f38 <main+0x220>)
 8000d1e:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8000d22:	f8c4 10e8 	str.w	r1, [r4, #232]	; 0xe8
 8000d26:	b08d      	sub	sp, #52	; 0x34
 8000d28:	1d20      	adds	r0, r4, #4
 8000d2a:	f004 f972 	bl	8005012 <mbed::SerialBase::baud(int)>
 8000d2e:	2300      	movs	r3, #0
 8000d30:	f204 526c 	addw	r2, r4, #1388	; 0x56c
 8000d34:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000d38:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000d3c:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000d40:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000d44:	4611      	mov	r1, r2
 8000d46:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8000d4a:	2800      	cmp	r0, #0
 8000d4c:	f040 80df 	bne.w	8000f0e <main+0x1f6>
 8000d50:	f503 70ae 	add.w	r0, r3, #348	; 0x15c
 8000d54:	4979      	ldr	r1, [pc, #484]	; (8000f3c <main+0x224>)
 8000d56:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
 8000d5a:	3364      	adds	r3, #100	; 0x64
 8000d5c:	604b      	str	r3, [r1, #4]
 8000d5e:	2300      	movs	r3, #0
 8000d60:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000d64:	2900      	cmp	r1, #0
 8000d66:	f040 80d7 	bne.w	8000f18 <main+0x200>
 8000d6a:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8000d6e:	4a74      	ldr	r2, [pc, #464]	; (8000f40 <main+0x228>)
 8000d70:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8000d74:	3364      	adds	r3, #100	; 0x64
 8000d76:	6053      	str	r3, [r2, #4]
 8000d78:	4a72      	ldr	r2, [pc, #456]	; (8000f44 <main+0x22c>)
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	4611      	mov	r1, r2
 8000d7e:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8000d82:	2800      	cmp	r0, #0
 8000d84:	f040 80cd 	bne.w	8000f22 <main+0x20a>
 8000d88:	496f      	ldr	r1, [pc, #444]	; (8000f48 <main+0x230>)
 8000d8a:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 8000d8e:	337d      	adds	r3, #125	; 0x7d
 8000d90:	f8c0 150c 	str.w	r1, [r0, #1292]	; 0x50c
 8000d94:	608b      	str	r3, [r1, #8]
 8000d96:	60cc      	str	r4, [r1, #12]
 8000d98:	2300      	movs	r3, #0
 8000d9a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000d9e:	2900      	cmp	r1, #0
 8000da0:	f040 80c4 	bne.w	8000f2c <main+0x214>
 8000da4:	4a69      	ldr	r2, [pc, #420]	; (8000f4c <main+0x234>)
 8000da6:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8000daa:	337d      	adds	r3, #125	; 0x7d
 8000dac:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8000db0:	6093      	str	r3, [r2, #8]
 8000db2:	60d4      	str	r4, [r2, #12]
 8000db4:	4966      	ldr	r1, [pc, #408]	; (8000f50 <main+0x238>)
 8000db6:	4867      	ldr	r0, [pc, #412]	; (8000f54 <main+0x23c>)
 8000db8:	f8df b17c 	ldr.w	r11, [pc, #380]	; 8000f38 <main+0x220>
 8000dbc:	f8df 8194 	ldr.w	r8, [pc, #404]	; 8000f54 <main+0x23c>
 8000dc0:	f004 f82f 	bl	8004e22 <mbed::CAN::frequency(int)>
 8000dc4:	2103      	movs	r1, #3
 8000dc6:	4863      	ldr	r0, [pc, #396]	; (8000f54 <main+0x23c>)
 8000dc8:	2400      	movs	r4, #0
 8000dca:	f004 f871 	bl	8004eb0 <mbed::CAN::mode(mbed::CAN::Mode)>
 8000dce:	2704      	movs	r7, #4
 8000dd0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000dd4:	f004 fa4e 	bl	8005274 <wait_ms>
 8000dd8:	f88d 702c 	strb.w	r7, [sp, #44]	; 0x2c
 8000ddc:	2340      	movs	r3, #64	; 0x40
 8000dde:	f88d 402e 	strb.w	r4, [sp, #46]	; 0x2e
 8000de2:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
 8000de6:	2601      	movs	r6, #1
 8000de8:	f88d 300c 	strb.w	r3, [sp, #12]
 8000dec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8000dee:	9608      	str	r6, [sp, #32]
 8000df0:	ad08      	add	r5, sp, #32
 8000df2:	9409      	str	r4, [sp, #36]	; 0x24
 8000df4:	9300      	str	r3, [sp, #0]
 8000df6:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8000dfa:	4856      	ldr	r0, [pc, #344]	; (8000f54 <main+0x23c>)
 8000dfc:	f88d 400d 	strb.w	r4, [sp, #13]
 8000e00:	f88d 400e 	strb.w	r4, [sp, #14]
 8000e04:	f88d 400f 	strb.w	r4, [sp, #15]
 8000e08:	f004 f81e 	bl	8004e48 <mbed::CAN::write(mbed::CANMessage)>
 8000e0c:	f88d 702c 	strb.w	r7, [sp, #44]	; 0x2c
 8000e10:	9b03      	ldr	r3, [sp, #12]
 8000e12:	f88d 402e 	strb.w	r4, [sp, #46]	; 0x2e
 8000e16:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
 8000e1a:	9309      	str	r3, [sp, #36]	; 0x24
 8000e1c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8000e1e:	9608      	str	r6, [sp, #32]
 8000e20:	9300      	str	r3, [sp, #0]
 8000e22:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 8000e26:	484b      	ldr	r0, [pc, #300]	; (8000f54 <main+0x23c>)
 8000e28:	4e4b      	ldr	r6, [pc, #300]	; (8000f58 <main+0x240>)
 8000e2a:	4f4c      	ldr	r7, [pc, #304]	; (8000f5c <main+0x244>)
 8000e2c:	f004 f80c 	bl	8004e48 <mbed::CAN::write(mbed::CANMessage)>
 8000e30:	4b4b      	ldr	r3, [pc, #300]	; (8000f60 <main+0x248>)
 8000e32:	9304      	str	r3, [sp, #16]
 8000e34:	a904      	add	r1, sp, #16
 8000e36:	4b4b      	ldr	r3, [pc, #300]	; (8000f64 <main+0x24c>)
 8000e38:	9307      	str	r3, [sp, #28]
 8000e3a:	4628      	mov	r0, r5
 8000e3c:	f7ff fad3 	bl	80003e6 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8000e40:	4849      	ldr	r0, [pc, #292]	; (8000f68 <main+0x250>)
 8000e42:	f7ff faac 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8000e46:	4629      	mov	r1, r5
 8000e48:	4847      	ldr	r0, [pc, #284]	; (8000f68 <main+0x250>)
 8000e4a:	f7ff facc 	bl	80003e6 <mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const&)>
 8000e4e:	f241 3188 	movw	r1, #5000	; 0x1388
 8000e52:	4846      	ldr	r0, [pc, #280]	; (8000f6c <main+0x254>)
 8000e54:	f003 ff31 	bl	8004cba <mbed::Ticker::setup(unsigned long)>
 8000e58:	4628      	mov	r0, r5
 8000e5a:	f7ff faa0 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8000e5e:	a804      	add	r0, sp, #16
 8000e60:	f7ff fa9d 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8000e64:	6074      	str	r4, [r6, #4]
 8000e66:	607c      	str	r4, [r7, #4]
 8000e68:	4658      	mov	r0, r11
 8000e6a:	f7ff fe45 	bl	8000af8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000e6e:	2210      	movs	r2, #16
 8000e70:	2100      	movs	r1, #0
 8000e72:	4628      	mov	r0, r5
 8000e74:	f004 fe79 	bl	8005b6a <memset>
 8000e78:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 8000f58 <main+0x240>
 8000e7c:	f8df a0c8 	ldr.w	r10, [pc, #200]	; 8000f48 <main+0x230>
 8000e80:	9409      	str	r4, [sp, #36]	; 0x24
 8000e82:	2308      	movs	r3, #8
 8000e84:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8000e88:	940a      	str	r4, [sp, #40]	; 0x28
 8000e8a:	2200      	movs	r2, #0
 8000e8c:	4629      	mov	r1, r5
 8000e8e:	4640      	mov	r0, r8
 8000e90:	f003 fff9 	bl	8004e86 <mbed::CAN::read(mbed::CANMessage&, int)>
 8000e94:	2800      	cmp	r0, #0
 8000e96:	d0e7      	beq.n	8000e68 <main+0x150>
 8000e98:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8000e9c:	2b03      	cmp	r3, #3
 8000e9e:	d1f4      	bne.n	8000e8a <main+0x172>
 8000ea0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8000ea4:	099a      	lsrs	r2, r3, #6
 8000ea6:	2a03      	cmp	r2, #3
 8000ea8:	d1ef      	bne.n	8000e8a <main+0x172>
 8000eaa:	f89d 1025 	ldrb.w	r1, [sp, #37]	; 0x25
 8000eae:	f013 0f20 	tst.w	r3, #32
 8000eb2:	bf18      	it	ne
 8000eb4:	ea6f 5141 	mvnne.w	r1, r1, lsl #21
 8000eb8:	ea4f 1243 	mov.w	r2, r3, lsl #5
 8000ebc:	bf18      	it	ne
 8000ebe:	ea6f 5151 	mvnne.w	r1, r1, lsr #21
 8000ec2:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8000ec6:	430a      	orrs	r2, r1
 8000ec8:	6072      	str	r2, [r6, #4]
 8000eca:	f89d 2026 	ldrb.w	r2, [sp, #38]	; 0x26
 8000ece:	f013 0f04 	tst.w	r3, #4
 8000ed2:	bf18      	it	ne
 8000ed4:	ea6f 5242 	mvnne.w	r2, r2, lsl #21
 8000ed8:	ea4f 2303 	mov.w	r3, r3, lsl #8
 8000edc:	bf18      	it	ne
 8000ede:	ea6f 5252 	mvnne.w	r2, r2, lsr #21
 8000ee2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8000ee6:	4313      	orrs	r3, r2
 8000ee8:	4649      	mov	r1, r9
 8000eea:	4650      	mov	r0, r10
 8000eec:	607b      	str	r3, [r7, #4]
 8000eee:	f7ff fa4b 	bl	8000388 <ros::Publisher::publish(ros::Msg const*)>
 8000ef2:	491a      	ldr	r1, [pc, #104]	; (8000f5c <main+0x244>)
 8000ef4:	4815      	ldr	r0, [pc, #84]	; (8000f4c <main+0x234>)
 8000ef6:	f7ff fa47 	bl	8000388 <ros::Publisher::publish(ros::Msg const*)>
 8000efa:	4b1d      	ldr	r3, [pc, #116]	; (8000f70 <main+0x258>)
 8000efc:	685a      	ldr	r2, [r3, #4]
 8000efe:	6811      	ldr	r1, [r2, #0]
 8000f00:	681a      	ldr	r2, [r3, #0]
 8000f02:	4211      	tst	r1, r2
 8000f04:	bf0c      	ite	eq
 8000f06:	689b      	ldreq	r3, [r3, #8]
 8000f08:	68db      	ldrne	r3, [r3, #12]
 8000f0a:	601a      	str	r2, [r3, #0]
 8000f0c:	e7bd      	b.n	8000e8a <main+0x172>
 8000f0e:	3301      	adds	r3, #1
 8000f10:	2b19      	cmp	r3, #25
 8000f12:	f47f af18 	bne.w	8000d46 <main+0x2e>
 8000f16:	e722      	b.n	8000d5e <main+0x46>
 8000f18:	3301      	adds	r3, #1
 8000f1a:	2b19      	cmp	r3, #25
 8000f1c:	f47f af20 	bne.w	8000d60 <main+0x48>
 8000f20:	e72a      	b.n	8000d78 <main+0x60>
 8000f22:	3301      	adds	r3, #1
 8000f24:	2b19      	cmp	r3, #25
 8000f26:	f47f af2a 	bne.w	8000d7e <main+0x66>
 8000f2a:	e735      	b.n	8000d98 <main+0x80>
 8000f2c:	3301      	adds	r3, #1
 8000f2e:	2b19      	cmp	r3, #25
 8000f30:	f47f af33 	bne.w	8000d9a <main+0x82>
 8000f34:	e73e      	b.n	8000db4 <main+0x9c>
 8000f36:	bf00      	nop
 8000f38:	20000334 	.word	0x20000334
 8000f3c:	20000980 	.word	0x20000980
 8000f40:	2000099c 	.word	0x2000099c
 8000f44:	2000083c 	.word	0x2000083c
 8000f48:	20000958 	.word	0x20000958
 8000f4c:	2000096c 	.word	0x2000096c
 8000f50:	000f4240 	.word	0x000f4240
 8000f54:	2000024c 	.word	0x2000024c
 8000f58:	20000300 	.word	0x20000300
 8000f5c:	20000308 	.word	0x20000308
 8000f60:	0800032d 	.word	0x0800032d
 8000f64:	08006550 	.word	0x08006550
 8000f68:	200009d0 	.word	0x200009d0
 8000f6c:	200009b8 	.word	0x200009b8
 8000f70:	20000318 	.word	0x20000318

08000f74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f76:	2963      	cmp	r1, #99	; 0x63
 8000f78:	b085      	sub	sp, #20
 8000f7a:	4604      	mov	r4, r0
 8000f7c:	460e      	mov	r6, r1
 8000f7e:	dd03      	ble.n	8000f88 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000f80:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000f84:	2d00      	cmp	r5, #0
 8000f86:	d04d      	beq.n	8001024 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000f88:	6813      	ldr	r3, [r2, #0]
 8000f8a:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000f8e:	681b      	ldr	r3, [r3, #0]
 8000f90:	4610      	mov	r0, r2
 8000f92:	4798      	blx	r3
 8000f94:	23ff      	movs	r3, #255	; 0xff
 8000f96:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000f9a:	23fe      	movs	r3, #254	; 0xfe
 8000f9c:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000fa0:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000fa4:	b2c3      	uxtb	r3, r0
 8000fa6:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000faa:	4413      	add	r3, r2
 8000fac:	43db      	mvns	r3, r3
 8000fae:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000fb2:	f346 2607 	sbfx	r6, r6, #8, #8
 8000fb6:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000fba:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000fbe:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000fc2:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000fc6:	2205      	movs	r2, #5
 8000fc8:	2300      	movs	r3, #0
 8000fca:	1d86      	adds	r6, r0, #6
 8000fcc:	42b2      	cmp	r2, r6
 8000fce:	dc04      	bgt.n	8000fda <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000fd0:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000fd4:	3201      	adds	r2, #1
 8000fd6:	442b      	add	r3, r5
 8000fd8:	e7f8      	b.n	8000fcc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000fda:	f100 0508 	add.w	r5, r0, #8
 8000fde:	4420      	add	r0, r4
 8000fe0:	43db      	mvns	r3, r3
 8000fe2:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000fe6:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000fea:	dc0c      	bgt.n	8001006 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000fec:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000ff0:	463e      	mov	r6, r7
 8000ff2:	3404      	adds	r4, #4
 8000ff4:	1bf3      	subs	r3, r6, r7
 8000ff6:	429d      	cmp	r5, r3
 8000ff8:	dd14      	ble.n	8001024 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000ffa:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000ffe:	4620      	mov	r0, r4
 8001000:	f000 f99e 	bl	8001340 <BufferedSerial::putc(int)>
 8001004:	e7f6      	b.n	8000ff4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8001006:	4b09      	ldr	r3, [pc, #36]	; (800102c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8001008:	9301      	str	r3, [sp, #4]
 800100a:	2303      	movs	r3, #3
 800100c:	f88d 3008 	strb.w	r3, [sp, #8]
 8001010:	4b07      	ldr	r3, [pc, #28]	; (8001030 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8001012:	9303      	str	r3, [sp, #12]
 8001014:	6823      	ldr	r3, [r4, #0]
 8001016:	aa01      	add	r2, sp, #4
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	2107      	movs	r1, #7
 800101c:	4620      	mov	r0, r4
 800101e:	4798      	blx	r3
 8001020:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001024:	4628      	mov	r0, r5
 8001026:	b005      	add	sp, #20
 8001028:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800102a:	bf00      	nop
 800102c:	080064e4 	.word	0x080064e4
 8001030:	0800662b 	.word	0x0800662b

08001034 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8001034:	b510      	push	{r4, lr}
 8001036:	4b04      	ldr	r3, [pc, #16]	; (8001048 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8001038:	4604      	mov	r4, r0
 800103a:	f840 3b04 	str.w	r3, [r0], #4
 800103e:	f000 f8c3 	bl	80011c8 <BufferedSerial::~BufferedSerial()>
 8001042:	4620      	mov	r0, r4
 8001044:	bd10      	pop	{r4, pc}
 8001046:	bf00      	nop
 8001048:	0800652c 	.word	0x0800652c

0800104c <_start>:
 800104c:	4807      	ldr	r0, [pc, #28]	; (800106c <_start+0x20>)
 800104e:	4a08      	ldr	r2, [pc, #32]	; (8001070 <_start+0x24>)
 8001050:	b508      	push	{r3, lr}
 8001052:	1a12      	subs	r2, r2, r0
 8001054:	2100      	movs	r1, #0
 8001056:	f004 fd88 	bl	8005b6a <memset>
 800105a:	f004 f9cb 	bl	80053f4 <software_init_hook>
 800105e:	f004 fcd7 	bl	8005a10 <__libc_init_array>
 8001062:	f004 f9ce 	bl	8005402 <__wrap_main>
 8001066:	f004 fa09 	bl	800547c <__wrap_exit>
 800106a:	bf00      	nop
 800106c:	20000230 	.word	0x20000230
 8001070:	20002754 	.word	0x20002754

08001074 <abort>:
 8001074:	b508      	push	{r3, lr}
 8001076:	2001      	movs	r0, #1
 8001078:	f004 fa00 	bl	800547c <__wrap_exit>

0800107c <__cxa_pure_virtual>:
 800107c:	b508      	push	{r3, lr}
 800107e:	f7ff fff9 	bl	8001074 <abort>
	...

08001084 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8001084:	b530      	push	{r4, r5, lr}
 8001086:	6802      	ldr	r2, [r0, #0]
 8001088:	680d      	ldr	r5, [r1, #0]
 800108a:	4c04      	ldr	r4, [pc, #16]	; (800109c <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 800108c:	fbb5 f3f4 	udiv	r3, r5, r4
 8001090:	441a      	add	r2, r3
 8001092:	fb04 5313 	mls	r3, r4, r3, r5
 8001096:	6002      	str	r2, [r0, #0]
 8001098:	600b      	str	r3, [r1, #0]
 800109a:	bd30      	pop	{r4, r5, pc}
 800109c:	3b9aca00 	.word	0x3b9aca00

080010a0 <BufferedSerial::readable()>:
 80010a0:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 80010a4:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 80010a8:	1a10      	subs	r0, r2, r0
 80010aa:	bf18      	it	ne
 80010ac:	2001      	movne	r0, #1
 80010ae:	4770      	bx	lr

080010b0 <BufferedSerial::writeable()>:
 80010b0:	2001      	movs	r0, #1
 80010b2:	4770      	bx	lr

080010b4 <BufferedSerial::getc()>:
 80010b4:	b510      	push	{r4, lr}
 80010b6:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 80010ba:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 80010be:	4603      	mov	r3, r0
 80010c0:	1c50      	adds	r0, r2, #1
 80010c2:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 80010c6:	5c88      	ldrb	r0, [r1, r2]
 80010c8:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 80010cc:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 80010d0:	3a01      	subs	r2, #1
 80010d2:	fbb4 f1f2 	udiv	r1, r4, r2
 80010d6:	fb02 4211 	mls	r2, r2, r1, r4
 80010da:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 80010de:	bd10      	pop	{r4, pc}

080010e0 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 80010e0:	4603      	mov	r3, r0
 80010e2:	b110      	cbz	r0, 80010ea <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 80010e4:	c907      	ldmia	r1, {r0, r1, r2}
 80010e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80010ea:	4770      	bx	lr

080010ec <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 80010ec:	4770      	bx	lr

080010ee <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 80010ee:	6842      	ldr	r2, [r0, #4]
 80010f0:	6881      	ldr	r1, [r0, #8]
 80010f2:	6803      	ldr	r3, [r0, #0]
 80010f4:	f012 0f01 	tst.w	r2, #1
 80010f8:	ea4f 0262 	mov.w	r2, r2, asr #1
 80010fc:	bf1c      	itt	ne
 80010fe:	5888      	ldrne	r0, [r1, r2]
 8001100:	58c3      	ldrne	r3, [r0, r3]
 8001102:	1888      	adds	r0, r1, r2
 8001104:	4718      	bx	r3

08001106 <BufferedSerial::txIrq()>:
 8001106:	b530      	push	{r4, r5, lr}
 8001108:	4604      	mov	r4, r0
 800110a:	b085      	sub	sp, #20
 800110c:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001110:	4628      	mov	r0, r5
 8001112:	f002 fd05 	bl	8003b20 <serial_writable>
 8001116:	b330      	cbz	r0, 8001166 <BufferedSerial::txIrq()+0x60>
 8001118:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 800111c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001120:	429a      	cmp	r2, r3
 8001122:	d016      	beq.n	8001152 <BufferedSerial::txIrq()+0x4c>
 8001124:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001128:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 800112c:	1c59      	adds	r1, r3, #1
 800112e:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 8001132:	5cd1      	ldrb	r1, [r2, r3]
 8001134:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8001138:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 800113c:	3b01      	subs	r3, #1
 800113e:	fbb0 f2f3 	udiv	r2, r0, r3
 8001142:	fb03 0312 	mls	r3, r3, r2, r0
 8001146:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800114a:	4628      	mov	r0, r5
 800114c:	f002 fcf4 	bl	8003b38 <serial_putc>
 8001150:	e7de      	b.n	8001110 <BufferedSerial::txIrq()+0xa>
 8001152:	2300      	movs	r3, #0
 8001154:	4620      	mov	r0, r4
 8001156:	2201      	movs	r2, #1
 8001158:	4669      	mov	r1, sp
 800115a:	9303      	str	r3, [sp, #12]
 800115c:	f003 ffd6 	bl	800510c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001160:	4668      	mov	r0, sp
 8001162:	f7ff f91c 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8001166:	b005      	add	sp, #20
 8001168:	bd30      	pop	{r4, r5, pc}

0800116a <mbed::Callback<void (int)>::~Callback()>:
 800116a:	68c3      	ldr	r3, [r0, #12]
 800116c:	b510      	push	{r4, lr}
 800116e:	4604      	mov	r4, r0
 8001170:	b10b      	cbz	r3, 8001176 <mbed::Callback<void (int)>::~Callback()+0xc>
 8001172:	689b      	ldr	r3, [r3, #8]
 8001174:	4798      	blx	r3
 8001176:	4620      	mov	r0, r4
 8001178:	bd10      	pop	{r4, pc}
	...

0800117c <mbed::SerialBase::~SerialBase()>:
 800117c:	b570      	push	{r4, r5, r6, lr}
 800117e:	4606      	mov	r6, r0
 8001180:	4b0b      	ldr	r3, [pc, #44]	; (80011b0 <mbed::SerialBase::~SerialBase()+0x34>)
 8001182:	f846 3b98 	str.w	r3, [r6], #152
 8001186:	4604      	mov	r4, r0
 8001188:	b146      	cbz	r6, 800119c <mbed::SerialBase::~SerialBase()+0x20>
 800118a:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 800118e:	42b5      	cmp	r5, r6
 8001190:	d004      	beq.n	800119c <mbed::SerialBase::~SerialBase()+0x20>
 8001192:	3d10      	subs	r5, #16
 8001194:	4628      	mov	r0, r5
 8001196:	f7ff f902 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 800119a:	e7f8      	b.n	800118e <mbed::SerialBase::~SerialBase()+0x12>
 800119c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80011a0:	f7ff ffe3 	bl	800116a <mbed::Callback<void (int)>::~Callback()>
 80011a4:	f104 0028 	add.w	r0, r4, #40	; 0x28
 80011a8:	f7ff ffdf 	bl	800116a <mbed::Callback<void (int)>::~Callback()>
 80011ac:	4620      	mov	r0, r4
 80011ae:	bd70      	pop	{r4, r5, r6, pc}
 80011b0:	08006b74 	.word	0x08006b74

080011b4 <mbed::SerialBase::~SerialBase()>:
 80011b4:	b510      	push	{r4, lr}
 80011b6:	4604      	mov	r4, r0
 80011b8:	f7ff ffe0 	bl	800117c <mbed::SerialBase::~SerialBase()>
 80011bc:	4620      	mov	r0, r4
 80011be:	f004 f979 	bl	80054b4 <operator delete(void*)>
 80011c2:	4620      	mov	r0, r4
 80011c4:	bd10      	pop	{r4, pc}
	...

080011c8 <BufferedSerial::~BufferedSerial()>:
 80011c8:	b530      	push	{r4, r5, lr}
 80011ca:	4b13      	ldr	r3, [pc, #76]	; (8001218 <BufferedSerial::~BufferedSerial()+0x50>)
 80011cc:	6003      	str	r3, [r0, #0]
 80011ce:	b085      	sub	sp, #20
 80011d0:	2500      	movs	r5, #0
 80011d2:	462a      	mov	r2, r5
 80011d4:	4669      	mov	r1, sp
 80011d6:	4604      	mov	r4, r0
 80011d8:	9503      	str	r5, [sp, #12]
 80011da:	f003 ff97 	bl	800510c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011de:	4668      	mov	r0, sp
 80011e0:	f7ff f8dd 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 80011e4:	2201      	movs	r2, #1
 80011e6:	4669      	mov	r1, sp
 80011e8:	4620      	mov	r0, r4
 80011ea:	9503      	str	r5, [sp, #12]
 80011ec:	f003 ff8e 	bl	800510c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011f0:	4668      	mov	r0, sp
 80011f2:	f7ff f8d4 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 80011f6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 80011fa:	f000 f923 	bl	8001444 <Buffer<char>::~Buffer()>
 80011fe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001202:	f000 f91f 	bl	8001444 <Buffer<char>::~Buffer()>
 8001206:	4b05      	ldr	r3, [pc, #20]	; (800121c <BufferedSerial::~BufferedSerial()+0x54>)
 8001208:	6023      	str	r3, [r4, #0]
 800120a:	4620      	mov	r0, r4
 800120c:	f7ff ffb6 	bl	800117c <mbed::SerialBase::~SerialBase()>
 8001210:	4620      	mov	r0, r4
 8001212:	b005      	add	sp, #20
 8001214:	bd30      	pop	{r4, r5, pc}
 8001216:	bf00      	nop
 8001218:	08006754 	.word	0x08006754
 800121c:	08006b44 	.word	0x08006b44

08001220 <BufferedSerial::~BufferedSerial()>:
 8001220:	b510      	push	{r4, lr}
 8001222:	4604      	mov	r4, r0
 8001224:	f7ff ffd0 	bl	80011c8 <BufferedSerial::~BufferedSerial()>
 8001228:	4620      	mov	r0, r4
 800122a:	f004 f943 	bl	80054b4 <operator delete(void*)>
 800122e:	4620      	mov	r0, r4
 8001230:	bd10      	pop	{r4, pc}
	...

08001234 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001234:	b510      	push	{r4, lr}
 8001236:	b086      	sub	sp, #24
 8001238:	e88d 000c 	stmia.w	sp, {r2, r3}
 800123c:	9b01      	ldr	r3, [sp, #4]
 800123e:	9202      	str	r2, [sp, #8]
 8001240:	9303      	str	r3, [sp, #12]
 8001242:	9104      	str	r1, [sp, #16]
 8001244:	4b05      	ldr	r3, [pc, #20]	; (800125c <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8001246:	f89d 2020 	ldrb.w	r2, [sp, #32]
 800124a:	9305      	str	r3, [sp, #20]
 800124c:	a902      	add	r1, sp, #8
 800124e:	f003 ff5d 	bl	800510c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001252:	a802      	add	r0, sp, #8
 8001254:	f7ff f8a3 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8001258:	b006      	add	sp, #24
 800125a:	bd10      	pop	{r4, pc}
 800125c:	080066c4 	.word	0x080066c4

08001260 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 8001260:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8001262:	4604      	mov	r4, r0
 8001264:	461d      	mov	r5, r3
 8001266:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800126a:	9e08      	ldr	r6, [sp, #32]
 800126c:	f003 fd5c 	bl	8004d28 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 8001270:	4620      	mov	r0, r4
 8001272:	4b0f      	ldr	r3, [pc, #60]	; (80012b0 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 8001274:	f840 3bbc 	str.w	r3, [r0], #188
 8001278:	4629      	mov	r1, r5
 800127a:	f000 f8f2 	bl	8001462 <Buffer<char>::Buffer(unsigned long)>
 800127e:	fb06 f105 	mul.w	r1, r6, r5
 8001282:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001286:	f000 f8ec 	bl	8001462 <Buffer<char>::Buffer(unsigned long)>
 800128a:	4b0a      	ldr	r3, [pc, #40]	; (80012b4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 800128c:	9302      	str	r3, [sp, #8]
 800128e:	2300      	movs	r3, #0
 8001290:	9303      	str	r3, [sp, #12]
 8001292:	9300      	str	r3, [sp, #0]
 8001294:	ab04      	add	r3, sp, #16
 8001296:	4620      	mov	r0, r4
 8001298:	e913 000c 	ldmdb	r3, {r2, r3}
 800129c:	4621      	mov	r1, r4
 800129e:	f7ff ffc9 	bl	8001234 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80012a2:	4620      	mov	r0, r4
 80012a4:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 80012a8:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 80012ac:	b004      	add	sp, #16
 80012ae:	bd70      	pop	{r4, r5, r6, pc}
 80012b0:	08006754 	.word	0x08006754
 80012b4:	0800131f 	.word	0x0800131f

080012b8 <BufferedSerial::prime()>:
 80012b8:	b570      	push	{r4, r5, r6, lr}
 80012ba:	4604      	mov	r4, r0
 80012bc:	b086      	sub	sp, #24
 80012be:	304c      	adds	r0, #76	; 0x4c
 80012c0:	f002 fc2e 	bl	8003b20 <serial_writable>
 80012c4:	b1c0      	cbz	r0, 80012f8 <BufferedSerial::prime()+0x40>
 80012c6:	ad02      	add	r5, sp, #8
 80012c8:	2201      	movs	r2, #1
 80012ca:	4629      	mov	r1, r5
 80012cc:	2600      	movs	r6, #0
 80012ce:	4620      	mov	r0, r4
 80012d0:	9605      	str	r6, [sp, #20]
 80012d2:	f003 ff1b 	bl	800510c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80012d6:	4628      	mov	r0, r5
 80012d8:	f7ff f861 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 80012dc:	4620      	mov	r0, r4
 80012de:	f7ff ff12 	bl	8001106 <BufferedSerial::txIrq()>
 80012e2:	4b06      	ldr	r3, [pc, #24]	; (80012fc <BufferedSerial::prime()+0x44>)
 80012e4:	9302      	str	r3, [sp, #8]
 80012e6:	2301      	movs	r3, #1
 80012e8:	9603      	str	r6, [sp, #12]
 80012ea:	9300      	str	r3, [sp, #0]
 80012ec:	e895 000c 	ldmia.w	r5, {r2, r3}
 80012f0:	4621      	mov	r1, r4
 80012f2:	4620      	mov	r0, r4
 80012f4:	f7ff ff9e 	bl	8001234 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80012f8:	b006      	add	sp, #24
 80012fa:	bd70      	pop	{r4, r5, r6, pc}
 80012fc:	08001107 	.word	0x08001107

08001300 <Buffer<char>::put(char)>:
 8001300:	6843      	ldr	r3, [r0, #4]
 8001302:	6802      	ldr	r2, [r0, #0]
 8001304:	b510      	push	{r4, lr}
 8001306:	1c5c      	adds	r4, r3, #1
 8001308:	6044      	str	r4, [r0, #4]
 800130a:	54d1      	strb	r1, [r2, r3]
 800130c:	68c3      	ldr	r3, [r0, #12]
 800130e:	6841      	ldr	r1, [r0, #4]
 8001310:	3b01      	subs	r3, #1
 8001312:	fbb1 f2f3 	udiv	r2, r1, r3
 8001316:	fb03 1312 	mls	r3, r3, r2, r1
 800131a:	6043      	str	r3, [r0, #4]
 800131c:	bd10      	pop	{r4, pc}

0800131e <BufferedSerial::rxIrq()>:
 800131e:	b538      	push	{r3, r4, r5, lr}
 8001320:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001324:	4604      	mov	r4, r0
 8001326:	4628      	mov	r0, r5
 8001328:	f002 fbd8 	bl	8003adc <serial_readable>
 800132c:	b138      	cbz	r0, 800133e <BufferedSerial::rxIrq()+0x20>
 800132e:	4628      	mov	r0, r5
 8001330:	f002 fbe0 	bl	8003af4 <serial_getc>
 8001334:	b2c1      	uxtb	r1, r0
 8001336:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800133a:	f7ff ffe1 	bl	8001300 <Buffer<char>::put(char)>
 800133e:	bd38      	pop	{r3, r4, r5, pc}

08001340 <BufferedSerial::putc(int)>:
 8001340:	b538      	push	{r3, r4, r5, lr}
 8001342:	4605      	mov	r5, r0
 8001344:	460c      	mov	r4, r1
 8001346:	30cc      	adds	r0, #204	; 0xcc
 8001348:	b2c9      	uxtb	r1, r1
 800134a:	f7ff ffd9 	bl	8001300 <Buffer<char>::put(char)>
 800134e:	4628      	mov	r0, r5
 8001350:	f7ff ffb2 	bl	80012b8 <BufferedSerial::prime()>
 8001354:	4620      	mov	r0, r4
 8001356:	bd38      	pop	{r3, r4, r5, pc}

08001358 <BufferedSerial::puts(char const*)>:
 8001358:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800135c:	4607      	mov	r7, r0
 800135e:	460c      	mov	r4, r1
 8001360:	b1b1      	cbz	r1, 8001390 <BufferedSerial::puts(char const*)+0x38>
 8001362:	460d      	mov	r5, r1
 8001364:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001368:	462e      	mov	r6, r5
 800136a:	f816 1b01 	ldrb.w	r1, [r6], #1
 800136e:	b121      	cbz	r1, 800137a <BufferedSerial::puts(char const*)+0x22>
 8001370:	4640      	mov	r0, r8
 8001372:	f7ff ffc5 	bl	8001300 <Buffer<char>::put(char)>
 8001376:	4635      	mov	r5, r6
 8001378:	e7f6      	b.n	8001368 <BufferedSerial::puts(char const*)+0x10>
 800137a:	210a      	movs	r1, #10
 800137c:	4640      	mov	r0, r8
 800137e:	f7ff ffbf 	bl	8001300 <Buffer<char>::put(char)>
 8001382:	1b2c      	subs	r4, r5, r4
 8001384:	4638      	mov	r0, r7
 8001386:	f7ff ff97 	bl	80012b8 <BufferedSerial::prime()>
 800138a:	1c60      	adds	r0, r4, #1
 800138c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001390:	4608      	mov	r0, r1
 8001392:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001396 <BufferedSerial::write(void const*, unsigned int)>:
 8001396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800139a:	4607      	mov	r7, r0
 800139c:	460d      	mov	r5, r1
 800139e:	b191      	cbz	r1, 80013c6 <BufferedSerial::write(void const*, unsigned int)+0x30>
 80013a0:	b1a2      	cbz	r2, 80013cc <BufferedSerial::write(void const*, unsigned int)+0x36>
 80013a2:	188c      	adds	r4, r1, r2
 80013a4:	460e      	mov	r6, r1
 80013a6:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 80013aa:	42b4      	cmp	r4, r6
 80013ac:	d005      	beq.n	80013ba <BufferedSerial::write(void const*, unsigned int)+0x24>
 80013ae:	f816 1b01 	ldrb.w	r1, [r6], #1
 80013b2:	4640      	mov	r0, r8
 80013b4:	f7ff ffa4 	bl	8001300 <Buffer<char>::put(char)>
 80013b8:	e7f7      	b.n	80013aa <BufferedSerial::write(void const*, unsigned int)+0x14>
 80013ba:	4638      	mov	r0, r7
 80013bc:	f7ff ff7c 	bl	80012b8 <BufferedSerial::prime()>
 80013c0:	1b60      	subs	r0, r4, r5
 80013c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013c6:	4608      	mov	r0, r1
 80013c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013cc:	4610      	mov	r0, r2
 80013ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080013d4 <BufferedSerial::printf(char const*, ...)>:
 80013d4:	b40e      	push	{r1, r2, r3}
 80013d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013da:	b085      	sub	sp, #20
 80013dc:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 80013e0:	af02      	add	r7, sp, #8
 80013e2:	1dd3      	adds	r3, r2, #7
 80013e4:	f023 0307 	bic.w	r3, r3, #7
 80013e8:	f107 0424 	add.w	r4, r7, #36	; 0x24
 80013ec:	ebad 0d03 	sub.w	sp, sp, r3
 80013f0:	f854 8b04 	ldr.w	r8, [r4], #4
 80013f4:	ae02      	add	r6, sp, #8
 80013f6:	4605      	mov	r5, r0
 80013f8:	2100      	movs	r1, #0
 80013fa:	4630      	mov	r0, r6
 80013fc:	f004 fbb5 	bl	8005b6a <memset>
 8001400:	4622      	mov	r2, r4
 8001402:	4641      	mov	r1, r8
 8001404:	4630      	mov	r0, r6
 8001406:	607c      	str	r4, [r7, #4]
 8001408:	f004 fe9c 	bl	8006144 <vsiprintf>
 800140c:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8001410:	4283      	cmp	r3, r0
 8001412:	4602      	mov	r2, r0
 8001414:	d20c      	bcs.n	8001430 <BufferedSerial::printf(char const*, ...)+0x5c>
 8001416:	9000      	str	r0, [sp, #0]
 8001418:	225d      	movs	r2, #93	; 0x5d
 800141a:	4808      	ldr	r0, [pc, #32]	; (800143c <BufferedSerial::printf(char const*, ...)+0x68>)
 800141c:	4908      	ldr	r1, [pc, #32]	; (8001440 <BufferedSerial::printf(char const*, ...)+0x6c>)
 800141e:	f000 f949 	bl	80016b4 <error>
 8001422:	2000      	movs	r0, #0
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800142c:	b003      	add	sp, #12
 800142e:	4770      	bx	lr
 8001430:	4631      	mov	r1, r6
 8001432:	4628      	mov	r0, r5
 8001434:	f7ff ffaf 	bl	8001396 <BufferedSerial::write(void const*, unsigned int)>
 8001438:	e7f4      	b.n	8001424 <BufferedSerial::printf(char const*, ...)+0x50>
 800143a:	bf00      	nop
 800143c:	0800670f 	.word	0x0800670f
 8001440:	080066d0 	.word	0x080066d0

08001444 <Buffer<char>::~Buffer()>:
 8001444:	b510      	push	{r4, lr}
 8001446:	4604      	mov	r4, r0
 8001448:	6800      	ldr	r0, [r0, #0]
 800144a:	b108      	cbz	r0, 8001450 <Buffer<char>::~Buffer()+0xc>
 800144c:	f004 f82e 	bl	80054ac <operator delete[](void*)>
 8001450:	4620      	mov	r0, r4
 8001452:	bd10      	pop	{r4, pc}

08001454 <Buffer<char>::clear()>:
 8001454:	2100      	movs	r1, #0
 8001456:	6041      	str	r1, [r0, #4]
 8001458:	68c2      	ldr	r2, [r0, #12]
 800145a:	6081      	str	r1, [r0, #8]
 800145c:	6800      	ldr	r0, [r0, #0]
 800145e:	f004 bb84 	b.w	8005b6a <memset>

08001462 <Buffer<char>::Buffer(unsigned long)>:
 8001462:	b538      	push	{r3, r4, r5, lr}
 8001464:	4604      	mov	r4, r0
 8001466:	4608      	mov	r0, r1
 8001468:	460d      	mov	r5, r1
 800146a:	f004 f813 	bl	8005494 <operator new[](unsigned int)>
 800146e:	60e5      	str	r5, [r4, #12]
 8001470:	6020      	str	r0, [r4, #0]
 8001472:	4620      	mov	r0, r4
 8001474:	f7ff ffee 	bl	8001454 <Buffer<char>::clear()>
 8001478:	4620      	mov	r0, r4
 800147a:	bd38      	pop	{r3, r4, r5, pc}

0800147c <_gpio_init_out.part.1>:
 800147c:	b538      	push	{r3, r4, r5, lr}
 800147e:	4604      	mov	r4, r0
 8001480:	460d      	mov	r5, r1
 8001482:	6803      	ldr	r3, [r0, #0]
 8001484:	b15a      	cbz	r2, 800149e <_gpio_init_out.part.1+0x22>
 8001486:	6882      	ldr	r2, [r0, #8]
 8001488:	6013      	str	r3, [r2, #0]
 800148a:	4620      	mov	r0, r4
 800148c:	2101      	movs	r1, #1
 800148e:	f001 fd65 	bl	8002f5c <gpio_dir>
 8001492:	4629      	mov	r1, r5
 8001494:	4620      	mov	r0, r4
 8001496:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800149a:	f001 bd5b 	b.w	8002f54 <gpio_mode>
 800149e:	68c2      	ldr	r2, [r0, #12]
 80014a0:	e7f2      	b.n	8001488 <_gpio_init_out.part.1+0xc>

080014a2 <gpio_init_out_ex>:
 80014a2:	b570      	push	{r4, r5, r6, lr}
 80014a4:	460e      	mov	r6, r1
 80014a6:	4604      	mov	r4, r0
 80014a8:	4615      	mov	r5, r2
 80014aa:	f001 fd31 	bl	8002f10 <gpio_init>
 80014ae:	3601      	adds	r6, #1
 80014b0:	d006      	beq.n	80014c0 <gpio_init_out_ex+0x1e>
 80014b2:	462a      	mov	r2, r5
 80014b4:	4620      	mov	r0, r4
 80014b6:	2100      	movs	r1, #0
 80014b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80014bc:	f7ff bfde 	b.w	800147c <_gpio_init_out.part.1>
 80014c0:	bd70      	pop	{r4, r5, r6, pc}

080014c2 <gpio_init_out>:
 80014c2:	2200      	movs	r2, #0
 80014c4:	f7ff bfed 	b.w	80014a2 <gpio_init_out_ex>

080014c8 <get_us_ticker_data>:
 80014c8:	4800      	ldr	r0, [pc, #0]	; (80014cc <get_us_ticker_data+0x4>)
 80014ca:	4770      	bx	lr
 80014cc:	08006780 	.word	0x08006780

080014d0 <us_ticker_irq_handler>:
 80014d0:	4801      	ldr	r0, [pc, #4]	; (80014d8 <us_ticker_irq_handler+0x8>)
 80014d2:	f000 b80c 	b.w	80014ee <ticker_irq_handler>
 80014d6:	bf00      	nop
 80014d8:	08006780 	.word	0x08006780

080014dc <ticker_set_handler>:
 80014dc:	b538      	push	{r3, r4, r5, lr}
 80014de:	6803      	ldr	r3, [r0, #0]
 80014e0:	4604      	mov	r4, r0
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	460d      	mov	r5, r1
 80014e6:	4798      	blx	r3
 80014e8:	6863      	ldr	r3, [r4, #4]
 80014ea:	601d      	str	r5, [r3, #0]
 80014ec:	bd38      	pop	{r3, r4, r5, pc}

080014ee <ticker_irq_handler>:
 80014ee:	6803      	ldr	r3, [r0, #0]
 80014f0:	b570      	push	{r4, r5, r6, lr}
 80014f2:	68db      	ldr	r3, [r3, #12]
 80014f4:	4604      	mov	r4, r0
 80014f6:	4798      	blx	r3
 80014f8:	6863      	ldr	r3, [r4, #4]
 80014fa:	685a      	ldr	r2, [r3, #4]
 80014fc:	6823      	ldr	r3, [r4, #0]
 80014fe:	b91a      	cbnz	r2, 8001508 <ticker_irq_handler+0x1a>
 8001500:	689b      	ldr	r3, [r3, #8]
 8001502:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001506:	4718      	bx	r3
 8001508:	685b      	ldr	r3, [r3, #4]
 800150a:	6815      	ldr	r5, [r2, #0]
 800150c:	4798      	blx	r3
 800150e:	6863      	ldr	r3, [r4, #4]
 8001510:	1a28      	subs	r0, r5, r0
 8001512:	2800      	cmp	r0, #0
 8001514:	685a      	ldr	r2, [r3, #4]
 8001516:	dc07      	bgt.n	8001528 <ticker_irq_handler+0x3a>
 8001518:	6891      	ldr	r1, [r2, #8]
 800151a:	6059      	str	r1, [r3, #4]
 800151c:	681b      	ldr	r3, [r3, #0]
 800151e:	2b00      	cmp	r3, #0
 8001520:	d0ea      	beq.n	80014f8 <ticker_irq_handler+0xa>
 8001522:	6850      	ldr	r0, [r2, #4]
 8001524:	4798      	blx	r3
 8001526:	e7e7      	b.n	80014f8 <ticker_irq_handler+0xa>
 8001528:	6823      	ldr	r3, [r4, #0]
 800152a:	6810      	ldr	r0, [r2, #0]
 800152c:	691b      	ldr	r3, [r3, #16]
 800152e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001532:	4718      	bx	r3

08001534 <ticker_insert_event>:
 8001534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001536:	4606      	mov	r6, r0
 8001538:	460c      	mov	r4, r1
 800153a:	461f      	mov	r7, r3
 800153c:	4615      	mov	r5, r2
 800153e:	f000 f88f 	bl	8001660 <core_util_critical_section_enter>
 8001542:	6870      	ldr	r0, [r6, #4]
 8001544:	e884 00a0 	stmia.w	r4, {r5, r7}
 8001548:	6843      	ldr	r3, [r0, #4]
 800154a:	2100      	movs	r1, #0
 800154c:	b953      	cbnz	r3, 8001564 <ticker_insert_event+0x30>
 800154e:	60a3      	str	r3, [r4, #8]
 8001550:	b979      	cbnz	r1, 8001572 <ticker_insert_event+0x3e>
 8001552:	6833      	ldr	r3, [r6, #0]
 8001554:	6044      	str	r4, [r0, #4]
 8001556:	691b      	ldr	r3, [r3, #16]
 8001558:	4628      	mov	r0, r5
 800155a:	4798      	blx	r3
 800155c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001560:	f000 b894 	b.w	800168c <core_util_critical_section_exit>
 8001564:	681a      	ldr	r2, [r3, #0]
 8001566:	1aaa      	subs	r2, r5, r2
 8001568:	2a00      	cmp	r2, #0
 800156a:	dbf0      	blt.n	800154e <ticker_insert_event+0x1a>
 800156c:	4619      	mov	r1, r3
 800156e:	689b      	ldr	r3, [r3, #8]
 8001570:	e7ec      	b.n	800154c <ticker_insert_event+0x18>
 8001572:	608c      	str	r4, [r1, #8]
 8001574:	e7f2      	b.n	800155c <ticker_insert_event+0x28>

08001576 <ticker_remove_event>:
 8001576:	b538      	push	{r3, r4, r5, lr}
 8001578:	4605      	mov	r5, r0
 800157a:	460c      	mov	r4, r1
 800157c:	f000 f870 	bl	8001660 <core_util_critical_section_enter>
 8001580:	686a      	ldr	r2, [r5, #4]
 8001582:	6853      	ldr	r3, [r2, #4]
 8001584:	42a3      	cmp	r3, r4
 8001586:	d10e      	bne.n	80015a6 <ticker_remove_event+0x30>
 8001588:	689b      	ldr	r3, [r3, #8]
 800158a:	6053      	str	r3, [r2, #4]
 800158c:	682a      	ldr	r2, [r5, #0]
 800158e:	b92b      	cbnz	r3, 800159c <ticker_remove_event+0x26>
 8001590:	6893      	ldr	r3, [r2, #8]
 8001592:	4798      	blx	r3
 8001594:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001598:	f000 b878 	b.w	800168c <core_util_critical_section_exit>
 800159c:	6912      	ldr	r2, [r2, #16]
 800159e:	6818      	ldr	r0, [r3, #0]
 80015a0:	4790      	blx	r2
 80015a2:	e7f7      	b.n	8001594 <ticker_remove_event+0x1e>
 80015a4:	4613      	mov	r3, r2
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d0f4      	beq.n	8001594 <ticker_remove_event+0x1e>
 80015aa:	689a      	ldr	r2, [r3, #8]
 80015ac:	4294      	cmp	r4, r2
 80015ae:	d1f9      	bne.n	80015a4 <ticker_remove_event+0x2e>
 80015b0:	68a2      	ldr	r2, [r4, #8]
 80015b2:	609a      	str	r2, [r3, #8]
 80015b4:	e7ee      	b.n	8001594 <ticker_remove_event+0x1e>

080015b6 <ticker_read>:
 80015b6:	6803      	ldr	r3, [r0, #0]
 80015b8:	685b      	ldr	r3, [r3, #4]
 80015ba:	4718      	bx	r3

080015bc <pinmap_pinout>:
 80015bc:	b510      	push	{r4, lr}
 80015be:	4604      	mov	r4, r0
 80015c0:	3001      	adds	r0, #1
 80015c2:	d10d      	bne.n	80015e0 <pinmap_pinout+0x24>
 80015c4:	bd10      	pop	{r4, pc}
 80015c6:	429c      	cmp	r4, r3
 80015c8:	d109      	bne.n	80015de <pinmap_pinout+0x22>
 80015ca:	4620      	mov	r0, r4
 80015cc:	6889      	ldr	r1, [r1, #8]
 80015ce:	f001 ffc5 	bl	800355c <pin_function>
 80015d2:	4620      	mov	r0, r4
 80015d4:	2100      	movs	r1, #0
 80015d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015da:	f002 b841 	b.w	8003660 <pin_mode>
 80015de:	310c      	adds	r1, #12
 80015e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80015e4:	1c5a      	adds	r2, r3, #1
 80015e6:	d1ee      	bne.n	80015c6 <pinmap_pinout+0xa>
 80015e8:	4802      	ldr	r0, [pc, #8]	; (80015f4 <pinmap_pinout+0x38>)
 80015ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015ee:	f000 b861 	b.w	80016b4 <error>
 80015f2:	bf00      	nop
 80015f4:	080067cd 	.word	0x080067cd

080015f8 <pinmap_merge>:
 80015f8:	4288      	cmp	r0, r1
 80015fa:	b508      	push	{r3, lr}
 80015fc:	d008      	beq.n	8001610 <pinmap_merge+0x18>
 80015fe:	1c43      	adds	r3, r0, #1
 8001600:	d006      	beq.n	8001610 <pinmap_merge+0x18>
 8001602:	3101      	adds	r1, #1
 8001604:	d006      	beq.n	8001614 <pinmap_merge+0x1c>
 8001606:	4804      	ldr	r0, [pc, #16]	; (8001618 <pinmap_merge+0x20>)
 8001608:	f000 f854 	bl	80016b4 <error>
 800160c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001610:	4608      	mov	r0, r1
 8001612:	bd08      	pop	{r3, pc}
 8001614:	4601      	mov	r1, r0
 8001616:	e7fb      	b.n	8001610 <pinmap_merge+0x18>
 8001618:	0800679c 	.word	0x0800679c

0800161c <pinmap_find_peripheral>:
 800161c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001620:	1c5a      	adds	r2, r3, #1
 8001622:	d101      	bne.n	8001628 <pinmap_find_peripheral+0xc>
 8001624:	4618      	mov	r0, r3
 8001626:	4770      	bx	lr
 8001628:	4283      	cmp	r3, r0
 800162a:	d101      	bne.n	8001630 <pinmap_find_peripheral+0x14>
 800162c:	6848      	ldr	r0, [r1, #4]
 800162e:	4770      	bx	lr
 8001630:	310c      	adds	r1, #12
 8001632:	e7f3      	b.n	800161c <pinmap_find_peripheral>

08001634 <pinmap_peripheral>:
 8001634:	1c42      	adds	r2, r0, #1
 8001636:	b510      	push	{r4, lr}
 8001638:	4604      	mov	r4, r0
 800163a:	d007      	beq.n	800164c <pinmap_peripheral+0x18>
 800163c:	f7ff ffee 	bl	800161c <pinmap_find_peripheral>
 8001640:	1c43      	adds	r3, r0, #1
 8001642:	4604      	mov	r4, r0
 8001644:	d102      	bne.n	800164c <pinmap_peripheral+0x18>
 8001646:	4802      	ldr	r0, [pc, #8]	; (8001650 <pinmap_peripheral+0x1c>)
 8001648:	f000 f834 	bl	80016b4 <error>
 800164c:	4620      	mov	r0, r4
 800164e:	bd10      	pop	{r4, pc}
 8001650:	080067ad 	.word	0x080067ad

08001654 <core_util_are_interrupts_enabled>:
 8001654:	f3ef 8010 	mrs	r0, PRIMASK
 8001658:	43c0      	mvns	r0, r0
 800165a:	f000 0001 	and.w	r0, r0, #1
 800165e:	4770      	bx	lr

08001660 <core_util_critical_section_enter>:
 8001660:	b508      	push	{r3, lr}
 8001662:	f7ff fff7 	bl	8001654 <core_util_are_interrupts_enabled>
 8001666:	b672      	cpsid	i
 8001668:	4b06      	ldr	r3, [pc, #24]	; (8001684 <core_util_critical_section_enter+0x24>)
 800166a:	681a      	ldr	r2, [r3, #0]
 800166c:	b922      	cbnz	r2, 8001678 <core_util_critical_section_enter+0x18>
 800166e:	f080 0001 	eor.w	r0, r0, #1
 8001672:	4a05      	ldr	r2, [pc, #20]	; (8001688 <core_util_critical_section_enter+0x28>)
 8001674:	b2c0      	uxtb	r0, r0
 8001676:	7010      	strb	r0, [r2, #0]
 8001678:	681a      	ldr	r2, [r3, #0]
 800167a:	681a      	ldr	r2, [r3, #0]
 800167c:	3201      	adds	r2, #1
 800167e:	601a      	str	r2, [r3, #0]
 8001680:	bd08      	pop	{r3, pc}
 8001682:	bf00      	nop
 8001684:	200009ec 	.word	0x200009ec
 8001688:	200009e8 	.word	0x200009e8

0800168c <core_util_critical_section_exit>:
 800168c:	b508      	push	{r3, lr}
 800168e:	4b07      	ldr	r3, [pc, #28]	; (80016ac <core_util_critical_section_exit+0x20>)
 8001690:	681a      	ldr	r2, [r3, #0]
 8001692:	b152      	cbz	r2, 80016aa <core_util_critical_section_exit+0x1e>
 8001694:	f7ff ffde 	bl	8001654 <core_util_are_interrupts_enabled>
 8001698:	681a      	ldr	r2, [r3, #0]
 800169a:	3a01      	subs	r2, #1
 800169c:	601a      	str	r2, [r3, #0]
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	b91b      	cbnz	r3, 80016aa <core_util_critical_section_exit+0x1e>
 80016a2:	4b03      	ldr	r3, [pc, #12]	; (80016b0 <core_util_critical_section_exit+0x24>)
 80016a4:	781b      	ldrb	r3, [r3, #0]
 80016a6:	b903      	cbnz	r3, 80016aa <core_util_critical_section_exit+0x1e>
 80016a8:	b662      	cpsie	i
 80016aa:	bd08      	pop	{r3, pc}
 80016ac:	200009ec 	.word	0x200009ec
 80016b0:	200009e8 	.word	0x200009e8

080016b4 <error>:
 80016b4:	b40f      	push	{r0, r1, r2, r3}
 80016b6:	2001      	movs	r0, #1
 80016b8:	b508      	push	{r3, lr}
 80016ba:	f003 fedf 	bl	800547c <__wrap_exit>

080016be <mbed_die>:
 80016be:	b508      	push	{r3, lr}
 80016c0:	f7ff ffce 	bl	8001660 <core_util_critical_section_enter>
 80016c4:	2096      	movs	r0, #150	; 0x96
 80016c6:	f003 fdd5 	bl	8005274 <wait_ms>
 80016ca:	2096      	movs	r0, #150	; 0x96
 80016cc:	f003 fdd2 	bl	8005274 <wait_ms>
 80016d0:	e7f8      	b.n	80016c4 <mbed_die+0x6>

080016d2 <default_idle_hook>:
 80016d2:	f001 bc6c 	b.w	8002fae <hal_sleep>
	...

080016d8 <rtos_idle_loop>:
 80016d8:	b508      	push	{r3, lr}
 80016da:	4c02      	ldr	r4, [pc, #8]	; (80016e4 <rtos_idle_loop+0xc>)
 80016dc:	6823      	ldr	r3, [r4, #0]
 80016de:	4798      	blx	r3
 80016e0:	e7fc      	b.n	80016dc <rtos_idle_loop+0x4>
 80016e2:	bf00      	nop
 80016e4:	20000198 	.word	0x20000198

080016e8 <rt_put_prio>:
 80016e8:	b530      	push	{r4, r5, lr}
 80016ea:	7802      	ldrb	r2, [r0, #0]
 80016ec:	788c      	ldrb	r4, [r1, #2]
 80016ee:	6843      	ldr	r3, [r0, #4]
 80016f0:	3a01      	subs	r2, #1
 80016f2:	b2d2      	uxtb	r2, r2
 80016f4:	b113      	cbz	r3, 80016fc <rt_put_prio+0x14>
 80016f6:	789d      	ldrb	r5, [r3, #2]
 80016f8:	42a5      	cmp	r5, r4
 80016fa:	d207      	bcs.n	800170c <rt_put_prio+0x24>
 80016fc:	2a02      	cmp	r2, #2
 80016fe:	604b      	str	r3, [r1, #4]
 8001700:	6041      	str	r1, [r0, #4]
 8001702:	d806      	bhi.n	8001712 <rt_put_prio+0x2a>
 8001704:	b103      	cbz	r3, 8001708 <rt_put_prio+0x20>
 8001706:	6099      	str	r1, [r3, #8]
 8001708:	6088      	str	r0, [r1, #8]
 800170a:	bd30      	pop	{r4, r5, pc}
 800170c:	4618      	mov	r0, r3
 800170e:	685b      	ldr	r3, [r3, #4]
 8001710:	e7f0      	b.n	80016f4 <rt_put_prio+0xc>
 8001712:	2300      	movs	r3, #0
 8001714:	608b      	str	r3, [r1, #8]
 8001716:	bd30      	pop	{r4, r5, pc}

08001718 <rt_get_first>:
 8001718:	7802      	ldrb	r2, [r0, #0]
 800171a:	6843      	ldr	r3, [r0, #4]
 800171c:	3a01      	subs	r2, #1
 800171e:	6859      	ldr	r1, [r3, #4]
 8001720:	6041      	str	r1, [r0, #4]
 8001722:	2a02      	cmp	r2, #2
 8001724:	f04f 0200 	mov.w	r2, #0
 8001728:	d805      	bhi.n	8001736 <rt_get_first+0x1e>
 800172a:	b109      	cbz	r1, 8001730 <rt_get_first+0x18>
 800172c:	6088      	str	r0, [r1, #8]
 800172e:	605a      	str	r2, [r3, #4]
 8001730:	609a      	str	r2, [r3, #8]
 8001732:	4618      	mov	r0, r3
 8001734:	4770      	bx	lr
 8001736:	605a      	str	r2, [r3, #4]
 8001738:	e7fb      	b.n	8001732 <rt_get_first+0x1a>
	...

0800173c <rt_put_rdy_first>:
 800173c:	4b03      	ldr	r3, [pc, #12]	; (800174c <rt_put_rdy_first+0x10>)
 800173e:	685a      	ldr	r2, [r3, #4]
 8001740:	6042      	str	r2, [r0, #4]
 8001742:	2200      	movs	r2, #0
 8001744:	6082      	str	r2, [r0, #8]
 8001746:	6058      	str	r0, [r3, #4]
 8001748:	4770      	bx	lr
 800174a:	bf00      	nop
 800174c:	20001e7c 	.word	0x20001e7c

08001750 <rt_put_dly>:
 8001750:	4b10      	ldr	r3, [pc, #64]	; (8001794 <rt_put_dly+0x44>)
 8001752:	68da      	ldr	r2, [r3, #12]
 8001754:	b510      	push	{r4, lr}
 8001756:	b18a      	cbz	r2, 800177c <rt_put_dly+0x2c>
 8001758:	8a9a      	ldrh	r2, [r3, #20]
 800175a:	68dc      	ldr	r4, [r3, #12]
 800175c:	428a      	cmp	r2, r1
 800175e:	d30c      	bcc.n	800177a <rt_put_dly+0x2a>
 8001760:	60c4      	str	r4, [r0, #12]
 8001762:	60d8      	str	r0, [r3, #12]
 8001764:	68c4      	ldr	r4, [r0, #12]
 8001766:	6103      	str	r3, [r0, #16]
 8001768:	b104      	cbz	r4, 800176c <rt_put_dly+0x1c>
 800176a:	6120      	str	r0, [r4, #16]
 800176c:	1a52      	subs	r2, r2, r1
 800176e:	b292      	uxth	r2, r2
 8001770:	8282      	strh	r2, [r0, #20]
 8001772:	8a99      	ldrh	r1, [r3, #20]
 8001774:	1a8a      	subs	r2, r1, r2
 8001776:	829a      	strh	r2, [r3, #20]
 8001778:	bd10      	pop	{r4, pc}
 800177a:	b93c      	cbnz	r4, 800178c <rt_put_dly+0x3c>
 800177c:	2400      	movs	r4, #0
 800177e:	1a8a      	subs	r2, r1, r2
 8001780:	60c4      	str	r4, [r0, #12]
 8001782:	60d8      	str	r0, [r3, #12]
 8001784:	6103      	str	r3, [r0, #16]
 8001786:	829a      	strh	r2, [r3, #20]
 8001788:	8284      	strh	r4, [r0, #20]
 800178a:	bd10      	pop	{r4, pc}
 800178c:	8aa3      	ldrh	r3, [r4, #20]
 800178e:	441a      	add	r2, r3
 8001790:	4623      	mov	r3, r4
 8001792:	e7e2      	b.n	800175a <rt_put_dly+0xa>
 8001794:	20001e94 	.word	0x20001e94

08001798 <rt_dec_dly>:
 8001798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800179c:	4d17      	ldr	r5, [pc, #92]	; (80017fc <rt_dec_dly+0x64>)
 800179e:	68eb      	ldr	r3, [r5, #12]
 80017a0:	b153      	cbz	r3, 80017b8 <rt_dec_dly+0x20>
 80017a2:	8aab      	ldrh	r3, [r5, #20]
 80017a4:	4f16      	ldr	r7, [pc, #88]	; (8001800 <rt_dec_dly+0x68>)
 80017a6:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001804 <rt_dec_dly+0x6c>
 80017aa:	3b01      	subs	r3, #1
 80017ac:	82ab      	strh	r3, [r5, #20]
 80017ae:	2600      	movs	r6, #0
 80017b0:	8aaa      	ldrh	r2, [r5, #20]
 80017b2:	b90a      	cbnz	r2, 80017b8 <rt_dec_dly+0x20>
 80017b4:	68ec      	ldr	r4, [r5, #12]
 80017b6:	b90c      	cbnz	r4, 80017bc <rt_dec_dly+0x24>
 80017b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80017bc:	68a3      	ldr	r3, [r4, #8]
 80017be:	b133      	cbz	r3, 80017ce <rt_dec_dly+0x36>
 80017c0:	6861      	ldr	r1, [r4, #4]
 80017c2:	6059      	str	r1, [r3, #4]
 80017c4:	6861      	ldr	r1, [r4, #4]
 80017c6:	b109      	cbz	r1, 80017cc <rt_dec_dly+0x34>
 80017c8:	608b      	str	r3, [r1, #8]
 80017ca:	6062      	str	r2, [r4, #4]
 80017cc:	60a6      	str	r6, [r4, #8]
 80017ce:	4621      	mov	r1, r4
 80017d0:	4638      	mov	r0, r7
 80017d2:	f7ff ff89 	bl	80016e8 <rt_put_prio>
 80017d6:	8aa3      	ldrh	r3, [r4, #20]
 80017d8:	82ab      	strh	r3, [r5, #20]
 80017da:	7863      	ldrb	r3, [r4, #1]
 80017dc:	2b04      	cmp	r3, #4
 80017de:	bf01      	itttt	eq
 80017e0:	f8d8 3000 	ldreq.w	r3, [r8]
 80017e4:	8ae2      	ldrheq	r2, [r4, #22]
 80017e6:	189b      	addeq	r3, r3, r2
 80017e8:	82a3      	strheq	r3, [r4, #20]
 80017ea:	2301      	movs	r3, #1
 80017ec:	7063      	strb	r3, [r4, #1]
 80017ee:	68e3      	ldr	r3, [r4, #12]
 80017f0:	60eb      	str	r3, [r5, #12]
 80017f2:	b10b      	cbz	r3, 80017f8 <rt_dec_dly+0x60>
 80017f4:	611d      	str	r5, [r3, #16]
 80017f6:	60e6      	str	r6, [r4, #12]
 80017f8:	6126      	str	r6, [r4, #16]
 80017fa:	e7d9      	b.n	80017b0 <rt_dec_dly+0x18>
 80017fc:	20001e94 	.word	0x20001e94
 8001800:	20001e7c 	.word	0x20001e7c
 8001804:	200026bc 	.word	0x200026bc

08001808 <rt_rmv_list>:
 8001808:	6883      	ldr	r3, [r0, #8]
 800180a:	b12b      	cbz	r3, 8001818 <rt_rmv_list+0x10>
 800180c:	6842      	ldr	r2, [r0, #4]
 800180e:	605a      	str	r2, [r3, #4]
 8001810:	6842      	ldr	r2, [r0, #4]
 8001812:	b15a      	cbz	r2, 800182c <rt_rmv_list+0x24>
 8001814:	6093      	str	r3, [r2, #8]
 8001816:	4770      	bx	lr
 8001818:	4b05      	ldr	r3, [pc, #20]	; (8001830 <rt_rmv_list+0x28>)
 800181a:	685a      	ldr	r2, [r3, #4]
 800181c:	4290      	cmp	r0, r2
 800181e:	d102      	bne.n	8001826 <rt_rmv_list+0x1e>
 8001820:	6842      	ldr	r2, [r0, #4]
 8001822:	605a      	str	r2, [r3, #4]
 8001824:	4770      	bx	lr
 8001826:	4613      	mov	r3, r2
 8001828:	2a00      	cmp	r2, #0
 800182a:	d1f6      	bne.n	800181a <rt_rmv_list+0x12>
 800182c:	4770      	bx	lr
 800182e:	bf00      	nop
 8001830:	20001e7c 	.word	0x20001e7c

08001834 <rt_resort_prio>:
 8001834:	b510      	push	{r4, lr}
 8001836:	6884      	ldr	r4, [r0, #8]
 8001838:	4601      	mov	r1, r0
 800183a:	b92c      	cbnz	r4, 8001848 <rt_resort_prio+0x14>
 800183c:	7843      	ldrb	r3, [r0, #1]
 800183e:	2b01      	cmp	r3, #1
 8001840:	d10d      	bne.n	800185e <rt_resort_prio+0x2a>
 8001842:	4c07      	ldr	r4, [pc, #28]	; (8001860 <rt_resort_prio+0x2c>)
 8001844:	e003      	b.n	800184e <rt_resort_prio+0x1a>
 8001846:	68a4      	ldr	r4, [r4, #8]
 8001848:	7823      	ldrb	r3, [r4, #0]
 800184a:	2b00      	cmp	r3, #0
 800184c:	d0fb      	beq.n	8001846 <rt_resort_prio+0x12>
 800184e:	4608      	mov	r0, r1
 8001850:	f7ff ffda 	bl	8001808 <rt_rmv_list>
 8001854:	4620      	mov	r0, r4
 8001856:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800185a:	f7ff bf45 	b.w	80016e8 <rt_put_prio>
 800185e:	bd10      	pop	{r4, pc}
 8001860:	20001e7c 	.word	0x20001e7c

08001864 <rt_rmv_dly>:
 8001864:	6903      	ldr	r3, [r0, #16]
 8001866:	b510      	push	{r4, lr}
 8001868:	b163      	cbz	r3, 8001884 <rt_rmv_dly+0x20>
 800186a:	68c2      	ldr	r2, [r0, #12]
 800186c:	60da      	str	r2, [r3, #12]
 800186e:	68c2      	ldr	r2, [r0, #12]
 8001870:	b14a      	cbz	r2, 8001886 <rt_rmv_dly+0x22>
 8001872:	8a99      	ldrh	r1, [r3, #20]
 8001874:	8a84      	ldrh	r4, [r0, #20]
 8001876:	4421      	add	r1, r4
 8001878:	8299      	strh	r1, [r3, #20]
 800187a:	6113      	str	r3, [r2, #16]
 800187c:	2300      	movs	r3, #0
 800187e:	60c3      	str	r3, [r0, #12]
 8001880:	2300      	movs	r3, #0
 8001882:	6103      	str	r3, [r0, #16]
 8001884:	bd10      	pop	{r4, pc}
 8001886:	829a      	strh	r2, [r3, #20]
 8001888:	e7fa      	b.n	8001880 <rt_rmv_dly+0x1c>
	...

0800188c <rt_psq_enq>:
 800188c:	b470      	push	{r4, r5, r6}
 800188e:	4b11      	ldr	r3, [pc, #68]	; (80018d4 <rt_psq_enq+0x48>)
 8001890:	78dd      	ldrb	r5, [r3, #3]
 8001892:	f3ef 8610 	mrs	r6, PRIMASK
 8001896:	f3ef 8210 	mrs	r2, PRIMASK
 800189a:	b672      	cpsid	i
 800189c:	789a      	ldrb	r2, [r3, #2]
 800189e:	4295      	cmp	r5, r2
 80018a0:	d911      	bls.n	80018c6 <rt_psq_enq+0x3a>
 80018a2:	3201      	adds	r2, #1
 80018a4:	709a      	strb	r2, [r3, #2]
 80018a6:	781a      	ldrb	r2, [r3, #0]
 80018a8:	1c54      	adds	r4, r2, #1
 80018aa:	42a5      	cmp	r5, r4
 80018ac:	bf08      	it	eq
 80018ae:	2400      	moveq	r4, #0
 80018b0:	701c      	strb	r4, [r3, #0]
 80018b2:	b906      	cbnz	r6, 80018b6 <rt_psq_enq+0x2a>
 80018b4:	b662      	cpsie	i
 80018b6:	4295      	cmp	r5, r2
 80018b8:	d907      	bls.n	80018ca <rt_psq_enq+0x3e>
 80018ba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80018be:	bc70      	pop	{r4, r5, r6}
 80018c0:	6058      	str	r0, [r3, #4]
 80018c2:	6099      	str	r1, [r3, #8]
 80018c4:	4770      	bx	lr
 80018c6:	2e00      	cmp	r6, #0
 80018c8:	d0f4      	beq.n	80018b4 <rt_psq_enq+0x28>
 80018ca:	2002      	movs	r0, #2
 80018cc:	bc70      	pop	{r4, r5, r6}
 80018ce:	f000 b829 	b.w	8001924 <os_error>
 80018d2:	bf00      	nop
 80018d4:	200020dc 	.word	0x200020dc

080018d8 <pre_main>:
 80018d8:	b508      	push	{r3, lr}
 80018da:	480b      	ldr	r0, [pc, #44]	; (8001908 <pre_main+0x30>)
 80018dc:	f000 fcb2 	bl	8002244 <osMutexCreate>
 80018e0:	4b0a      	ldr	r3, [pc, #40]	; (800190c <pre_main+0x34>)
 80018e2:	6018      	str	r0, [r3, #0]
 80018e4:	480a      	ldr	r0, [pc, #40]	; (8001910 <pre_main+0x38>)
 80018e6:	f000 fcad 	bl	8002244 <osMutexCreate>
 80018ea:	4b0a      	ldr	r3, [pc, #40]	; (8001914 <pre_main+0x3c>)
 80018ec:	6018      	str	r0, [r3, #0]
 80018ee:	480a      	ldr	r0, [pc, #40]	; (8001918 <pre_main+0x40>)
 80018f0:	f000 fca8 	bl	8002244 <osMutexCreate>
 80018f4:	4b09      	ldr	r3, [pc, #36]	; (800191c <pre_main+0x44>)
 80018f6:	6018      	str	r0, [r3, #0]
 80018f8:	f004 f88a 	bl	8005a10 <__libc_init_array>
 80018fc:	2100      	movs	r1, #0
 80018fe:	4608      	mov	r0, r1
 8001900:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001904:	f003 bd7d 	b.w	8005402 <__wrap_main>
 8001908:	0800682c 	.word	0x0800682c
 800190c:	20002164 	.word	0x20002164
 8001910:	08006828 	.word	0x08006828
 8001914:	200009f8 	.word	0x200009f8
 8001918:	08006824 	.word	0x08006824
 800191c:	200009f0 	.word	0x200009f0

08001920 <os_idle_demon>:
 8001920:	f7ff beda 	b.w	80016d8 <rtos_idle_loop>

08001924 <os_error>:
 8001924:	b510      	push	{r4, lr}
 8001926:	4604      	mov	r4, r0
 8001928:	f000 fbec 	bl	8002104 <svcThreadGetId>
 800192c:	4621      	mov	r1, r4
 800192e:	4602      	mov	r2, r0
 8001930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001934:	4801      	ldr	r0, [pc, #4]	; (800193c <os_error+0x18>)
 8001936:	f7ff bebd 	b.w	80016b4 <error>
 800193a:	bf00      	nop
 800193c:	080067ec 	.word	0x080067ec

08001940 <sysThreadTerminate>:
 8001940:	f003 bdba 	b.w	80054b8 <thread_terminate_hook>

08001944 <set_stack_heap>:
 8001944:	4a0b      	ldr	r2, [pc, #44]	; (8001974 <set_stack_heap+0x30>)
 8001946:	4b0c      	ldr	r3, [pc, #48]	; (8001978 <set_stack_heap+0x34>)
 8001948:	480c      	ldr	r0, [pc, #48]	; (800197c <set_stack_heap+0x38>)
 800194a:	b430      	push	{r4, r5}
 800194c:	601a      	str	r2, [r3, #0]
 800194e:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 8001952:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8001956:	f5b3 7fe0 	cmp.w	r3, #448	; 0x1c0
 800195a:	4619      	mov	r1, r3
 800195c:	bf28      	it	cs
 800195e:	f44f 71e0 	movcs.w	r1, #448	; 0x1c0
 8001962:	4d07      	ldr	r5, [pc, #28]	; (8001980 <set_stack_heap+0x3c>)
 8001964:	4c07      	ldr	r4, [pc, #28]	; (8001984 <set_stack_heap+0x40>)
 8001966:	6001      	str	r1, [r0, #0]
 8001968:	1a5b      	subs	r3, r3, r1
 800196a:	441a      	add	r2, r3
 800196c:	602a      	str	r2, [r5, #0]
 800196e:	6023      	str	r3, [r4, #0]
 8001970:	bc30      	pop	{r4, r5}
 8001972:	4770      	bx	lr
 8001974:	20002754 	.word	0x20002754
 8001978:	20001e6c 	.word	0x20001e6c
 800197c:	200009fc 	.word	0x200009fc
 8001980:	20000a00 	.word	0x20000a00
 8001984:	20001e68 	.word	0x20001e68

08001988 <software_init_hook_rtos>:
 8001988:	f000 fd40 	bl	800240c <osKernelInitialize>
 800198c:	f7ff ffda 	bl	8001944 <set_stack_heap>
 8001990:	4803      	ldr	r0, [pc, #12]	; (80019a0 <software_init_hook_rtos+0x18>)
 8001992:	2100      	movs	r1, #0
 8001994:	f000 fcde 	bl	8002354 <osThreadCreate>
 8001998:	f000 fb36 	bl	8002008 <osKernelStart>
 800199c:	e7fe      	b.n	800199c <software_init_hook_rtos+0x14>
 800199e:	0000      	.short	0x0000
 80019a0:	2000019c 	.word	0x2000019c

080019a4 <__rtos_malloc_lock>:
 80019a4:	4b02      	ldr	r3, [pc, #8]	; (80019b0 <__rtos_malloc_lock+0xc>)
 80019a6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80019aa:	6818      	ldr	r0, [r3, #0]
 80019ac:	f000 bc68 	b.w	8002280 <osMutexWait>
 80019b0:	200009f8 	.word	0x200009f8

080019b4 <__rtos_malloc_unlock>:
 80019b4:	4b01      	ldr	r3, [pc, #4]	; (80019bc <__rtos_malloc_unlock+0x8>)
 80019b6:	6818      	ldr	r0, [r3, #0]
 80019b8:	f000 bc8a 	b.w	80022d0 <osMutexRelease>
 80019bc:	200009f8 	.word	0x200009f8

080019c0 <rt_init_stack>:
 80019c0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80019c2:	089b      	lsrs	r3, r3, #2
 80019c4:	bf04      	itt	eq
 80019c6:	4b22      	ldreq	r3, [pc, #136]	; (8001a50 <rt_init_stack+0x90>)
 80019c8:	881b      	ldrheq	r3, [r3, #0]
 80019ca:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019cc:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80019ce:	bf08      	it	eq
 80019d0:	089b      	lsreq	r3, r3, #2
 80019d2:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80019d6:	0754      	lsls	r4, r2, #29
 80019d8:	bf48      	it	mi
 80019da:	3a04      	submi	r2, #4
 80019dc:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 80019e0:	e902 0042 	stmdb	r2, {r1, r6}
 80019e4:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 80019e8:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 80019ec:	f1a2 070c 	sub.w	r7, r2, #12
 80019f0:	f04f 0e00 	mov.w	lr, #0
 80019f4:	f846 ef04 	str.w	lr, [r6, #4]!
 80019f8:	42be      	cmp	r6, r7
 80019fa:	d1fb      	bne.n	80019f4 <rt_init_stack+0x34>
 80019fc:	69c6      	ldr	r6, [r0, #28]
 80019fe:	f842 6c20 	str.w	r6, [r2, #-32]
 8001a02:	6341      	str	r1, [r0, #52]	; 0x34
 8001a04:	4912      	ldr	r1, [pc, #72]	; (8001a50 <rt_init_stack+0x90>)
 8001a06:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001a08:	6809      	ldr	r1, [r1, #0]
 8001a0a:	00c9      	lsls	r1, r1, #3
 8001a0c:	d517      	bpl.n	8001a3e <rt_init_stack+0x7e>
 8001a0e:	2b11      	cmp	r3, #17
 8001a10:	d915      	bls.n	8001a3e <rt_init_stack+0x7e>
 8001a12:	3b10      	subs	r3, #16
 8001a14:	f06f 0107 	mvn.w	r1, #7
 8001a18:	085b      	lsrs	r3, r3, #1
 8001a1a:	434b      	muls	r3, r1
 8001a1c:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001a20:	440a      	add	r2, r1
 8001a22:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001a26:	4621      	mov	r1, r4
 8001a28:	4291      	cmp	r1, r2
 8001a2a:	d10b      	bne.n	8001a44 <rt_init_stack+0x84>
 8001a2c:	3308      	adds	r3, #8
 8001a2e:	441c      	add	r4, r3
 8001a30:	1f23      	subs	r3, r4, #4
 8001a32:	429d      	cmp	r5, r3
 8001a34:	bf3c      	itt	cc
 8001a36:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001a3a:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001a3e:	4b05      	ldr	r3, [pc, #20]	; (8001a54 <rt_init_stack+0x94>)
 8001a40:	602b      	str	r3, [r5, #0]
 8001a42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a44:	f841 0c04 	str.w	r0, [r1, #-4]
 8001a48:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001a4c:	e7ec      	b.n	8001a28 <rt_init_stack+0x68>
 8001a4e:	bf00      	nop
 8001a50:	08006834 	.word	0x08006834
 8001a54:	e25a2ea5 	.word	0xe25a2ea5

08001a58 <rt_ret_val>:
 8001a58:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001a5c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001a5e:	b112      	cbz	r2, 8001a66 <rt_ret_val+0xe>
 8001a60:	3360      	adds	r3, #96	; 0x60
 8001a62:	6019      	str	r1, [r3, #0]
 8001a64:	4770      	bx	lr
 8001a66:	3320      	adds	r3, #32
 8001a68:	e7fb      	b.n	8001a62 <rt_ret_val+0xa>

08001a6a <rt_ret_val2>:
 8001a6a:	b510      	push	{r4, lr}
 8001a6c:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001a70:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001a72:	b11c      	cbz	r4, 8001a7c <rt_ret_val2+0x12>
 8001a74:	3360      	adds	r3, #96	; 0x60
 8001a76:	e883 0006 	stmia.w	r3, {r1, r2}
 8001a7a:	bd10      	pop	{r4, pc}
 8001a7c:	3320      	adds	r3, #32
 8001a7e:	e7fa      	b.n	8001a76 <rt_ret_val2+0xc>

08001a80 <rt_psh_req>:
 8001a80:	4b05      	ldr	r3, [pc, #20]	; (8001a98 <rt_psh_req+0x18>)
 8001a82:	781b      	ldrb	r3, [r3, #0]
 8001a84:	b923      	cbnz	r3, 8001a90 <rt_psh_req+0x10>
 8001a86:	4b05      	ldr	r3, [pc, #20]	; (8001a9c <rt_psh_req+0x1c>)
 8001a88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001a8c:	601a      	str	r2, [r3, #0]
 8001a8e:	4770      	bx	lr
 8001a90:	4b03      	ldr	r3, [pc, #12]	; (8001aa0 <rt_psh_req+0x20>)
 8001a92:	2201      	movs	r2, #1
 8001a94:	701a      	strb	r2, [r3, #0]
 8001a96:	4770      	bx	lr
 8001a98:	20001a54 	.word	0x20001a54
 8001a9c:	e000ed04 	.word	0xe000ed04
 8001aa0:	20001a55 	.word	0x20001a55

08001aa4 <rt_pop_req>:
 8001aa4:	b538      	push	{r3, r4, r5, lr}
 8001aa6:	4b1a      	ldr	r3, [pc, #104]	; (8001b10 <rt_pop_req+0x6c>)
 8001aa8:	4c1a      	ldr	r4, [pc, #104]	; (8001b14 <rt_pop_req+0x70>)
 8001aaa:	6818      	ldr	r0, [r3, #0]
 8001aac:	2301      	movs	r3, #1
 8001aae:	7043      	strb	r3, [r0, #1]
 8001ab0:	f7ff fe44 	bl	800173c <rt_put_rdy_first>
 8001ab4:	7865      	ldrb	r5, [r4, #1]
 8001ab6:	78a3      	ldrb	r3, [r4, #2]
 8001ab8:	b93b      	cbnz	r3, 8001aca <rt_pop_req+0x26>
 8001aba:	4817      	ldr	r0, [pc, #92]	; (8001b18 <rt_pop_req+0x74>)
 8001abc:	7065      	strb	r5, [r4, #1]
 8001abe:	f7ff fe2b 	bl	8001718 <rt_get_first>
 8001ac2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001ac6:	f000 bd7b 	b.w	80025c0 <rt_switch_req>
 8001aca:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001ace:	6858      	ldr	r0, [r3, #4]
 8001ad0:	7802      	ldrb	r2, [r0, #0]
 8001ad2:	b99a      	cbnz	r2, 8001afc <rt_pop_req+0x58>
 8001ad4:	8919      	ldrh	r1, [r3, #8]
 8001ad6:	f000 f9bb 	bl	8001e50 <rt_evt_psh>
 8001ada:	78e3      	ldrb	r3, [r4, #3]
 8001adc:	3501      	adds	r5, #1
 8001ade:	429d      	cmp	r5, r3
 8001ae0:	bf08      	it	eq
 8001ae2:	2500      	moveq	r5, #0
 8001ae4:	f3ef 8310 	mrs	r3, PRIMASK
 8001ae8:	f3ef 8210 	mrs	r2, PRIMASK
 8001aec:	b672      	cpsid	i
 8001aee:	78a2      	ldrb	r2, [r4, #2]
 8001af0:	3a01      	subs	r2, #1
 8001af2:	70a2      	strb	r2, [r4, #2]
 8001af4:	2b00      	cmp	r3, #0
 8001af6:	d1de      	bne.n	8001ab6 <rt_pop_req+0x12>
 8001af8:	b662      	cpsie	i
 8001afa:	e7dc      	b.n	8001ab6 <rt_pop_req+0x12>
 8001afc:	2a01      	cmp	r2, #1
 8001afe:	d103      	bne.n	8001b08 <rt_pop_req+0x64>
 8001b00:	6899      	ldr	r1, [r3, #8]
 8001b02:	f000 f933 	bl	8001d6c <rt_mbx_psh>
 8001b06:	e7e8      	b.n	8001ada <rt_pop_req+0x36>
 8001b08:	f001 f8b8 	bl	8002c7c <rt_sem_psh>
 8001b0c:	e7e5      	b.n	8001ada <rt_pop_req+0x36>
 8001b0e:	bf00      	nop
 8001b10:	20002674 	.word	0x20002674
 8001b14:	200020dc 	.word	0x200020dc
 8001b18:	20001e7c 	.word	0x20001e7c

08001b1c <os_tick_init>:
 8001b1c:	4b08      	ldr	r3, [pc, #32]	; (8001b40 <os_tick_init+0x24>)
 8001b1e:	681a      	ldr	r2, [r3, #0]
 8001b20:	4b08      	ldr	r3, [pc, #32]	; (8001b44 <os_tick_init+0x28>)
 8001b22:	601a      	str	r2, [r3, #0]
 8001b24:	2200      	movs	r2, #0
 8001b26:	605a      	str	r2, [r3, #4]
 8001b28:	2207      	movs	r2, #7
 8001b2a:	f843 2c04 	str.w	r2, [r3, #-4]
 8001b2e:	4a06      	ldr	r2, [pc, #24]	; (8001b48 <os_tick_init+0x2c>)
 8001b30:	6813      	ldr	r3, [r2, #0]
 8001b32:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001b36:	6013      	str	r3, [r2, #0]
 8001b38:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b3c:	4770      	bx	lr
 8001b3e:	bf00      	nop
 8001b40:	0800684c 	.word	0x0800684c
 8001b44:	e000e014 	.word	0xe000e014
 8001b48:	e000ed20 	.word	0xe000ed20

08001b4c <os_tick_irqack>:
 8001b4c:	4770      	bx	lr
	...

08001b50 <rt_systick>:
 8001b50:	b508      	push	{r3, lr}
 8001b52:	4b0b      	ldr	r3, [pc, #44]	; (8001b80 <rt_systick+0x30>)
 8001b54:	6818      	ldr	r0, [r3, #0]
 8001b56:	2301      	movs	r3, #1
 8001b58:	7043      	strb	r3, [r0, #1]
 8001b5a:	f7ff fdef 	bl	800173c <rt_put_rdy_first>
 8001b5e:	f000 f9ad 	bl	8001ebc <rt_chk_robin>
 8001b62:	4a08      	ldr	r2, [pc, #32]	; (8001b84 <rt_systick+0x34>)
 8001b64:	6813      	ldr	r3, [r2, #0]
 8001b66:	3301      	adds	r3, #1
 8001b68:	6013      	str	r3, [r2, #0]
 8001b6a:	f7ff fe15 	bl	8001798 <rt_dec_dly>
 8001b6e:	f000 fcaf 	bl	80024d0 <sysTimerTick>
 8001b72:	4805      	ldr	r0, [pc, #20]	; (8001b88 <rt_systick+0x38>)
 8001b74:	f7ff fdd0 	bl	8001718 <rt_get_first>
 8001b78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001b7c:	f000 bd20 	b.w	80025c0 <rt_switch_req>
 8001b80:	20002674 	.word	0x20002674
 8001b84:	200026bc 	.word	0x200026bc
 8001b88:	20001e7c 	.word	0x20001e7c

08001b8c <rt_stk_check>:
 8001b8c:	4b06      	ldr	r3, [pc, #24]	; (8001ba8 <rt_stk_check+0x1c>)
 8001b8e:	681a      	ldr	r2, [r3, #0]
 8001b90:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001b92:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001b94:	4293      	cmp	r3, r2
 8001b96:	d803      	bhi.n	8001ba0 <rt_stk_check+0x14>
 8001b98:	681a      	ldr	r2, [r3, #0]
 8001b9a:	4b04      	ldr	r3, [pc, #16]	; (8001bac <rt_stk_check+0x20>)
 8001b9c:	429a      	cmp	r2, r3
 8001b9e:	d002      	beq.n	8001ba6 <rt_stk_check+0x1a>
 8001ba0:	2001      	movs	r0, #1
 8001ba2:	f7ff bebf 	b.w	8001924 <os_error>
 8001ba6:	4770      	bx	lr
 8001ba8:	20002674 	.word	0x20002674
 8001bac:	e25a2ea5 	.word	0xe25a2ea5

08001bb0 <_init_box>:
 8001bb0:	2a00      	cmp	r2, #0
 8001bb2:	bfbb      	ittet	lt
 8001bb4:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001bb8:	3207      	addlt	r2, #7
 8001bba:	3203      	addge	r2, #3
 8001bbc:	f022 0207 	biclt.w	r2, r2, #7
 8001bc0:	bfa8      	it	ge
 8001bc2:	f022 0203 	bicge.w	r2, r2, #3
 8001bc6:	b510      	push	{r4, lr}
 8001bc8:	bfb4      	ite	lt
 8001bca:	2310      	movlt	r3, #16
 8001bcc:	230c      	movge	r3, #12
 8001bce:	b192      	cbz	r2, 8001bf6 <_init_box+0x46>
 8001bd0:	18d4      	adds	r4, r2, r3
 8001bd2:	428c      	cmp	r4, r1
 8001bd4:	d80f      	bhi.n	8001bf6 <_init_box+0x46>
 8001bd6:	4401      	add	r1, r0
 8001bd8:	4403      	add	r3, r0
 8001bda:	4254      	negs	r4, r2
 8001bdc:	6041      	str	r1, [r0, #4]
 8001bde:	6003      	str	r3, [r0, #0]
 8001be0:	6082      	str	r2, [r0, #8]
 8001be2:	4421      	add	r1, r4
 8001be4:	1898      	adds	r0, r3, r2
 8001be6:	4281      	cmp	r1, r0
 8001be8:	d302      	bcc.n	8001bf0 <_init_box+0x40>
 8001bea:	5100      	str	r0, [r0, r4]
 8001bec:	4603      	mov	r3, r0
 8001bee:	e7f9      	b.n	8001be4 <_init_box+0x34>
 8001bf0:	2000      	movs	r0, #0
 8001bf2:	6018      	str	r0, [r3, #0]
 8001bf4:	bd10      	pop	{r4, pc}
 8001bf6:	2001      	movs	r0, #1
 8001bf8:	bd10      	pop	{r4, pc}

08001bfa <rt_alloc_box>:
 8001bfa:	f3ef 8310 	mrs	r3, PRIMASK
 8001bfe:	b672      	cpsid	i
 8001c00:	6802      	ldr	r2, [r0, #0]
 8001c02:	f003 0301 	and.w	r3, r3, #1
 8001c06:	b10a      	cbz	r2, 8001c0c <rt_alloc_box+0x12>
 8001c08:	6811      	ldr	r1, [r2, #0]
 8001c0a:	6001      	str	r1, [r0, #0]
 8001c0c:	b903      	cbnz	r3, 8001c10 <rt_alloc_box+0x16>
 8001c0e:	b662      	cpsie	i
 8001c10:	4610      	mov	r0, r2
 8001c12:	4770      	bx	lr

08001c14 <rt_free_box>:
 8001c14:	4281      	cmp	r1, r0
 8001c16:	d30d      	bcc.n	8001c34 <rt_free_box+0x20>
 8001c18:	6843      	ldr	r3, [r0, #4]
 8001c1a:	4299      	cmp	r1, r3
 8001c1c:	d20a      	bcs.n	8001c34 <rt_free_box+0x20>
 8001c1e:	f3ef 8310 	mrs	r3, PRIMASK
 8001c22:	b672      	cpsid	i
 8001c24:	6802      	ldr	r2, [r0, #0]
 8001c26:	600a      	str	r2, [r1, #0]
 8001c28:	6001      	str	r1, [r0, #0]
 8001c2a:	f013 0001 	ands.w	r0, r3, #1
 8001c2e:	d103      	bne.n	8001c38 <rt_free_box+0x24>
 8001c30:	b662      	cpsie	i
 8001c32:	4770      	bx	lr
 8001c34:	2001      	movs	r0, #1
 8001c36:	4770      	bx	lr
 8001c38:	2000      	movs	r0, #0
 8001c3a:	4770      	bx	lr

08001c3c <rt_mbx_init>:
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	3910      	subs	r1, #16
 8001c40:	7003      	strb	r3, [r0, #0]
 8001c42:	0889      	lsrs	r1, r1, #2
 8001c44:	2300      	movs	r3, #0
 8001c46:	7043      	strb	r3, [r0, #1]
 8001c48:	7083      	strb	r3, [r0, #2]
 8001c4a:	6043      	str	r3, [r0, #4]
 8001c4c:	8103      	strh	r3, [r0, #8]
 8001c4e:	8143      	strh	r3, [r0, #10]
 8001c50:	8183      	strh	r3, [r0, #12]
 8001c52:	81c1      	strh	r1, [r0, #14]
 8001c54:	4770      	bx	lr
	...

08001c58 <rt_mbx_wait>:
 8001c58:	b570      	push	{r4, r5, r6, lr}
 8001c5a:	8985      	ldrh	r5, [r0, #12]
 8001c5c:	4604      	mov	r4, r0
 8001c5e:	4616      	mov	r6, r2
 8001c60:	2d00      	cmp	r5, #0
 8001c62:	d038      	beq.n	8001cd6 <rt_mbx_wait+0x7e>
 8001c64:	8943      	ldrh	r3, [r0, #10]
 8001c66:	1d1a      	adds	r2, r3, #4
 8001c68:	3301      	adds	r3, #1
 8001c6a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001c6e:	600a      	str	r2, [r1, #0]
 8001c70:	89c2      	ldrh	r2, [r0, #14]
 8001c72:	b29b      	uxth	r3, r3
 8001c74:	429a      	cmp	r2, r3
 8001c76:	8143      	strh	r3, [r0, #10]
 8001c78:	bf04      	itt	eq
 8001c7a:	2300      	moveq	r3, #0
 8001c7c:	8143      	strheq	r3, [r0, #10]
 8001c7e:	6843      	ldr	r3, [r0, #4]
 8001c80:	b1f3      	cbz	r3, 8001cc0 <rt_mbx_wait+0x68>
 8001c82:	7843      	ldrb	r3, [r0, #1]
 8001c84:	2b02      	cmp	r3, #2
 8001c86:	d11b      	bne.n	8001cc0 <rt_mbx_wait+0x68>
 8001c88:	f7ff fd46 	bl	8001718 <rt_get_first>
 8001c8c:	2100      	movs	r1, #0
 8001c8e:	4605      	mov	r5, r0
 8001c90:	f7ff fee2 	bl	8001a58 <rt_ret_val>
 8001c94:	8923      	ldrh	r3, [r4, #8]
 8001c96:	69e9      	ldr	r1, [r5, #28]
 8001c98:	1d1a      	adds	r2, r3, #4
 8001c9a:	3301      	adds	r3, #1
 8001c9c:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001ca0:	89e2      	ldrh	r2, [r4, #14]
 8001ca2:	b29b      	uxth	r3, r3
 8001ca4:	429a      	cmp	r2, r3
 8001ca6:	8123      	strh	r3, [r4, #8]
 8001ca8:	bf08      	it	eq
 8001caa:	2300      	moveq	r3, #0
 8001cac:	4628      	mov	r0, r5
 8001cae:	bf08      	it	eq
 8001cb0:	8123      	strheq	r3, [r4, #8]
 8001cb2:	f7ff fdd7 	bl	8001864 <rt_rmv_dly>
 8001cb6:	4628      	mov	r0, r5
 8001cb8:	f000 fc9c 	bl	80025f4 <rt_dispatch>
 8001cbc:	2000      	movs	r0, #0
 8001cbe:	bd70      	pop	{r4, r5, r6, pc}
 8001cc0:	f3ef 8010 	mrs	r0, PRIMASK
 8001cc4:	f3ef 8310 	mrs	r3, PRIMASK
 8001cc8:	b672      	cpsid	i
 8001cca:	3d01      	subs	r5, #1
 8001ccc:	81a5      	strh	r5, [r4, #12]
 8001cce:	2800      	cmp	r0, #0
 8001cd0:	d1f4      	bne.n	8001cbc <rt_mbx_wait+0x64>
 8001cd2:	b662      	cpsie	i
 8001cd4:	bd70      	pop	{r4, r5, r6, pc}
 8001cd6:	b14a      	cbz	r2, 8001cec <rt_mbx_wait+0x94>
 8001cd8:	6842      	ldr	r2, [r0, #4]
 8001cda:	4b09      	ldr	r3, [pc, #36]	; (8001d00 <rt_mbx_wait+0xa8>)
 8001cdc:	b142      	cbz	r2, 8001cf0 <rt_mbx_wait+0x98>
 8001cde:	6819      	ldr	r1, [r3, #0]
 8001ce0:	f7ff fd02 	bl	80016e8 <rt_put_prio>
 8001ce4:	2108      	movs	r1, #8
 8001ce6:	4630      	mov	r0, r6
 8001ce8:	f000 fca8 	bl	800263c <rt_block>
 8001cec:	2001      	movs	r0, #1
 8001cee:	bd70      	pop	{r4, r5, r6, pc}
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	6043      	str	r3, [r0, #4]
 8001cf4:	605a      	str	r2, [r3, #4]
 8001cf6:	6098      	str	r0, [r3, #8]
 8001cf8:	2301      	movs	r3, #1
 8001cfa:	7043      	strb	r3, [r0, #1]
 8001cfc:	e7f2      	b.n	8001ce4 <rt_mbx_wait+0x8c>
 8001cfe:	bf00      	nop
 8001d00:	20002674 	.word	0x20002674

08001d04 <rt_mbx_check>:
 8001d04:	89c2      	ldrh	r2, [r0, #14]
 8001d06:	8980      	ldrh	r0, [r0, #12]
 8001d08:	1a10      	subs	r0, r2, r0
 8001d0a:	4770      	bx	lr

08001d0c <isr_mbx_send>:
 8001d0c:	b508      	push	{r3, lr}
 8001d0e:	f7ff fdbd 	bl	800188c <rt_psq_enq>
 8001d12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d16:	f7ff beb3 	b.w	8001a80 <rt_psh_req>

08001d1a <isr_mbx_receive>:
 8001d1a:	8983      	ldrh	r3, [r0, #12]
 8001d1c:	b510      	push	{r4, lr}
 8001d1e:	4604      	mov	r4, r0
 8001d20:	b30b      	cbz	r3, 8001d66 <isr_mbx_receive+0x4c>
 8001d22:	8943      	ldrh	r3, [r0, #10]
 8001d24:	3304      	adds	r3, #4
 8001d26:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001d2a:	600b      	str	r3, [r1, #0]
 8001d2c:	7843      	ldrb	r3, [r0, #1]
 8001d2e:	2b02      	cmp	r3, #2
 8001d30:	d104      	bne.n	8001d3c <isr_mbx_receive+0x22>
 8001d32:	2100      	movs	r1, #0
 8001d34:	f7ff fdaa 	bl	800188c <rt_psq_enq>
 8001d38:	f7ff fea2 	bl	8001a80 <rt_psh_req>
 8001d3c:	f3ef 8310 	mrs	r3, PRIMASK
 8001d40:	f3ef 8210 	mrs	r2, PRIMASK
 8001d44:	b672      	cpsid	i
 8001d46:	89a2      	ldrh	r2, [r4, #12]
 8001d48:	3a01      	subs	r2, #1
 8001d4a:	81a2      	strh	r2, [r4, #12]
 8001d4c:	b903      	cbnz	r3, 8001d50 <isr_mbx_receive+0x36>
 8001d4e:	b662      	cpsie	i
 8001d50:	8963      	ldrh	r3, [r4, #10]
 8001d52:	89e2      	ldrh	r2, [r4, #14]
 8001d54:	3301      	adds	r3, #1
 8001d56:	b29b      	uxth	r3, r3
 8001d58:	429a      	cmp	r2, r3
 8001d5a:	8163      	strh	r3, [r4, #10]
 8001d5c:	d101      	bne.n	8001d62 <isr_mbx_receive+0x48>
 8001d5e:	2300      	movs	r3, #0
 8001d60:	8163      	strh	r3, [r4, #10]
 8001d62:	2004      	movs	r0, #4
 8001d64:	bd10      	pop	{r4, pc}
 8001d66:	4618      	mov	r0, r3
 8001d68:	bd10      	pop	{r4, pc}
	...

08001d6c <rt_mbx_psh>:
 8001d6c:	6843      	ldr	r3, [r0, #4]
 8001d6e:	b570      	push	{r4, r5, r6, lr}
 8001d70:	4604      	mov	r4, r0
 8001d72:	460e      	mov	r6, r1
 8001d74:	2b00      	cmp	r3, #0
 8001d76:	d04b      	beq.n	8001e10 <rt_mbx_psh+0xa4>
 8001d78:	7845      	ldrb	r5, [r0, #1]
 8001d7a:	2d02      	cmp	r5, #2
 8001d7c:	d020      	beq.n	8001dc0 <rt_mbx_psh+0x54>
 8001d7e:	2d03      	cmp	r5, #3
 8001d80:	d00a      	beq.n	8001d98 <rt_mbx_psh+0x2c>
 8001d82:	2d01      	cmp	r5, #1
 8001d84:	d161      	bne.n	8001e4a <rt_mbx_psh+0xde>
 8001d86:	f7ff fcc7 	bl	8001718 <rt_get_first>
 8001d8a:	4604      	mov	r4, r0
 8001d8c:	4632      	mov	r2, r6
 8001d8e:	2110      	movs	r1, #16
 8001d90:	f7ff fe6b 	bl	8001a6a <rt_ret_val2>
 8001d94:	7065      	strb	r5, [r4, #1]
 8001d96:	e00e      	b.n	8001db6 <rt_mbx_psh+0x4a>
 8001d98:	4608      	mov	r0, r1
 8001d9a:	f7ff ff2e 	bl	8001bfa <rt_alloc_box>
 8001d9e:	4605      	mov	r5, r0
 8001da0:	2800      	cmp	r0, #0
 8001da2:	d052      	beq.n	8001e4a <rt_mbx_psh+0xde>
 8001da4:	4620      	mov	r0, r4
 8001da6:	f7ff fcb7 	bl	8001718 <rt_get_first>
 8001daa:	4629      	mov	r1, r5
 8001dac:	4604      	mov	r4, r0
 8001dae:	f7ff fe53 	bl	8001a58 <rt_ret_val>
 8001db2:	2301      	movs	r3, #1
 8001db4:	7063      	strb	r3, [r4, #1]
 8001db6:	4620      	mov	r0, r4
 8001db8:	f7ff fd54 	bl	8001864 <rt_rmv_dly>
 8001dbc:	4621      	mov	r1, r4
 8001dbe:	e022      	b.n	8001e06 <rt_mbx_psh+0x9a>
 8001dc0:	f7ff fcaa 	bl	8001718 <rt_get_first>
 8001dc4:	2100      	movs	r1, #0
 8001dc6:	4605      	mov	r5, r0
 8001dc8:	f7ff fe46 	bl	8001a58 <rt_ret_val>
 8001dcc:	8923      	ldrh	r3, [r4, #8]
 8001dce:	69e9      	ldr	r1, [r5, #28]
 8001dd0:	1d1a      	adds	r2, r3, #4
 8001dd2:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001dd6:	f3ef 8210 	mrs	r2, PRIMASK
 8001dda:	f3ef 8110 	mrs	r1, PRIMASK
 8001dde:	b672      	cpsid	i
 8001de0:	89a1      	ldrh	r1, [r4, #12]
 8001de2:	3101      	adds	r1, #1
 8001de4:	81a1      	strh	r1, [r4, #12]
 8001de6:	b902      	cbnz	r2, 8001dea <rt_mbx_psh+0x7e>
 8001de8:	b662      	cpsie	i
 8001dea:	89e2      	ldrh	r2, [r4, #14]
 8001dec:	3301      	adds	r3, #1
 8001dee:	b29b      	uxth	r3, r3
 8001df0:	429a      	cmp	r2, r3
 8001df2:	8123      	strh	r3, [r4, #8]
 8001df4:	bf04      	itt	eq
 8001df6:	2300      	moveq	r3, #0
 8001df8:	8123      	strheq	r3, [r4, #8]
 8001dfa:	2301      	movs	r3, #1
 8001dfc:	706b      	strb	r3, [r5, #1]
 8001dfe:	4628      	mov	r0, r5
 8001e00:	f7ff fd30 	bl	8001864 <rt_rmv_dly>
 8001e04:	4629      	mov	r1, r5
 8001e06:	4811      	ldr	r0, [pc, #68]	; (8001e4c <rt_mbx_psh+0xe0>)
 8001e08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e0c:	f7ff bc6c 	b.w	80016e8 <rt_put_prio>
 8001e10:	8980      	ldrh	r0, [r0, #12]
 8001e12:	89e1      	ldrh	r1, [r4, #14]
 8001e14:	4288      	cmp	r0, r1
 8001e16:	d213      	bcs.n	8001e40 <rt_mbx_psh+0xd4>
 8001e18:	8923      	ldrh	r3, [r4, #8]
 8001e1a:	1d1a      	adds	r2, r3, #4
 8001e1c:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001e20:	f3ef 8210 	mrs	r2, PRIMASK
 8001e24:	f3ef 8510 	mrs	r5, PRIMASK
 8001e28:	b672      	cpsid	i
 8001e2a:	3001      	adds	r0, #1
 8001e2c:	81a0      	strh	r0, [r4, #12]
 8001e2e:	b902      	cbnz	r2, 8001e32 <rt_mbx_psh+0xc6>
 8001e30:	b662      	cpsie	i
 8001e32:	3301      	adds	r3, #1
 8001e34:	b29b      	uxth	r3, r3
 8001e36:	4299      	cmp	r1, r3
 8001e38:	bf08      	it	eq
 8001e3a:	2300      	moveq	r3, #0
 8001e3c:	8123      	strh	r3, [r4, #8]
 8001e3e:	bd70      	pop	{r4, r5, r6, pc}
 8001e40:	2003      	movs	r0, #3
 8001e42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e46:	f7ff bd6d 	b.w	8001924 <os_error>
 8001e4a:	bd70      	pop	{r4, r5, r6, pc}
 8001e4c:	20001e7c 	.word	0x20001e7c

08001e50 <rt_evt_psh>:
 8001e50:	b510      	push	{r4, lr}
 8001e52:	8b03      	ldrh	r3, [r0, #24]
 8001e54:	7842      	ldrb	r2, [r0, #1]
 8001e56:	4319      	orrs	r1, r3
 8001e58:	2a06      	cmp	r2, #6
 8001e5a:	4604      	mov	r4, r0
 8001e5c:	8301      	strh	r1, [r0, #24]
 8001e5e:	8b43      	ldrh	r3, [r0, #26]
 8001e60:	d115      	bne.n	8001e8e <rt_evt_psh+0x3e>
 8001e62:	ea33 0201 	bics.w	r2, r3, r1
 8001e66:	d119      	bne.n	8001e9c <rt_evt_psh+0x4c>
 8001e68:	ea21 0103 	bic.w	r1, r1, r3
 8001e6c:	8321      	strh	r1, [r4, #24]
 8001e6e:	4620      	mov	r0, r4
 8001e70:	f7ff fcf8 	bl	8001864 <rt_rmv_dly>
 8001e74:	2301      	movs	r3, #1
 8001e76:	4620      	mov	r0, r4
 8001e78:	7063      	strb	r3, [r4, #1]
 8001e7a:	8b62      	ldrh	r2, [r4, #26]
 8001e7c:	2108      	movs	r1, #8
 8001e7e:	f7ff fdf4 	bl	8001a6a <rt_ret_val2>
 8001e82:	4621      	mov	r1, r4
 8001e84:	4806      	ldr	r0, [pc, #24]	; (8001ea0 <rt_evt_psh+0x50>)
 8001e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001e8a:	f7ff bc2d 	b.w	80016e8 <rt_put_prio>
 8001e8e:	2a05      	cmp	r2, #5
 8001e90:	d104      	bne.n	8001e9c <rt_evt_psh+0x4c>
 8001e92:	ea11 0203 	ands.w	r2, r1, r3
 8001e96:	d001      	beq.n	8001e9c <rt_evt_psh+0x4c>
 8001e98:	8342      	strh	r2, [r0, #26]
 8001e9a:	e7e5      	b.n	8001e68 <rt_evt_psh+0x18>
 8001e9c:	bd10      	pop	{r4, pc}
 8001e9e:	bf00      	nop
 8001ea0:	20001e7c 	.word	0x20001e7c

08001ea4 <rt_init_robin>:
 8001ea4:	4b03      	ldr	r3, [pc, #12]	; (8001eb4 <rt_init_robin+0x10>)
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	601a      	str	r2, [r3, #0]
 8001eaa:	4a03      	ldr	r2, [pc, #12]	; (8001eb8 <rt_init_robin+0x14>)
 8001eac:	6812      	ldr	r2, [r2, #0]
 8001eae:	80da      	strh	r2, [r3, #6]
 8001eb0:	4770      	bx	lr
 8001eb2:	bf00      	nop
 8001eb4:	20002660 	.word	0x20002660
 8001eb8:	08006830 	.word	0x08006830

08001ebc <rt_chk_robin>:
 8001ebc:	b508      	push	{r3, lr}
 8001ebe:	4b0e      	ldr	r3, [pc, #56]	; (8001ef8 <rt_chk_robin+0x3c>)
 8001ec0:	685a      	ldr	r2, [r3, #4]
 8001ec2:	4b0e      	ldr	r3, [pc, #56]	; (8001efc <rt_chk_robin+0x40>)
 8001ec4:	6819      	ldr	r1, [r3, #0]
 8001ec6:	4291      	cmp	r1, r2
 8001ec8:	490d      	ldr	r1, [pc, #52]	; (8001f00 <rt_chk_robin+0x44>)
 8001eca:	d005      	beq.n	8001ed8 <rt_chk_robin+0x1c>
 8001ecc:	601a      	str	r2, [r3, #0]
 8001ece:	88da      	ldrh	r2, [r3, #6]
 8001ed0:	6808      	ldr	r0, [r1, #0]
 8001ed2:	3a01      	subs	r2, #1
 8001ed4:	4402      	add	r2, r0
 8001ed6:	809a      	strh	r2, [r3, #4]
 8001ed8:	8898      	ldrh	r0, [r3, #4]
 8001eda:	880a      	ldrh	r2, [r1, #0]
 8001edc:	4290      	cmp	r0, r2
 8001ede:	d10a      	bne.n	8001ef6 <rt_chk_robin+0x3a>
 8001ee0:	2200      	movs	r2, #0
 8001ee2:	4805      	ldr	r0, [pc, #20]	; (8001ef8 <rt_chk_robin+0x3c>)
 8001ee4:	601a      	str	r2, [r3, #0]
 8001ee6:	f7ff fc17 	bl	8001718 <rt_get_first>
 8001eea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001eee:	4601      	mov	r1, r0
 8001ef0:	4801      	ldr	r0, [pc, #4]	; (8001ef8 <rt_chk_robin+0x3c>)
 8001ef2:	f7ff bbf9 	b.w	80016e8 <rt_put_prio>
 8001ef6:	bd08      	pop	{r3, pc}
 8001ef8:	20001e7c 	.word	0x20001e7c
 8001efc:	20002660 	.word	0x20002660
 8001f00:	200026bc 	.word	0x200026bc

08001f04 <rt_timer_insert>:
 8001f04:	4a0b      	ldr	r2, [pc, #44]	; (8001f34 <rt_timer_insert+0x30>)
 8001f06:	6813      	ldr	r3, [r2, #0]
 8001f08:	b530      	push	{r4, r5, lr}
 8001f0a:	2400      	movs	r4, #0
 8001f0c:	b943      	cbnz	r3, 8001f20 <rt_timer_insert+0x1c>
 8001f0e:	6003      	str	r3, [r0, #0]
 8001f10:	6081      	str	r1, [r0, #8]
 8001f12:	b113      	cbz	r3, 8001f1a <rt_timer_insert+0x16>
 8001f14:	689d      	ldr	r5, [r3, #8]
 8001f16:	1a69      	subs	r1, r5, r1
 8001f18:	6099      	str	r1, [r3, #8]
 8001f1a:	b144      	cbz	r4, 8001f2e <rt_timer_insert+0x2a>
 8001f1c:	6020      	str	r0, [r4, #0]
 8001f1e:	bd30      	pop	{r4, r5, pc}
 8001f20:	689d      	ldr	r5, [r3, #8]
 8001f22:	42a9      	cmp	r1, r5
 8001f24:	d3f3      	bcc.n	8001f0e <rt_timer_insert+0xa>
 8001f26:	461c      	mov	r4, r3
 8001f28:	1b49      	subs	r1, r1, r5
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	e7ee      	b.n	8001f0c <rt_timer_insert+0x8>
 8001f2e:	6010      	str	r0, [r2, #0]
 8001f30:	bd30      	pop	{r4, r5, pc}
 8001f32:	bf00      	nop
 8001f34:	20002670 	.word	0x20002670

08001f38 <rt_ms2tick>:
 8001f38:	b1c0      	cbz	r0, 8001f6c <rt_ms2tick+0x34>
 8001f3a:	1c43      	adds	r3, r0, #1
 8001f3c:	d011      	beq.n	8001f62 <rt_ms2tick+0x2a>
 8001f3e:	4b0c      	ldr	r3, [pc, #48]	; (8001f70 <rt_ms2tick+0x38>)
 8001f40:	4298      	cmp	r0, r3
 8001f42:	d811      	bhi.n	8001f68 <rt_ms2tick+0x30>
 8001f44:	4b0b      	ldr	r3, [pc, #44]	; (8001f74 <rt_ms2tick+0x3c>)
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001f4c:	1e5a      	subs	r2, r3, #1
 8001f4e:	fb01 2000 	mla	r0, r1, r0, r2
 8001f52:	fbb0 f3f3 	udiv	r3, r0, r3
 8001f56:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001f5a:	4283      	cmp	r3, r0
 8001f5c:	d806      	bhi.n	8001f6c <rt_ms2tick+0x34>
 8001f5e:	b298      	uxth	r0, r3
 8001f60:	4770      	bx	lr
 8001f62:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001f66:	4770      	bx	lr
 8001f68:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001f6c:	4770      	bx	lr
 8001f6e:	bf00      	nop
 8001f70:	003d0900 	.word	0x003d0900
 8001f74:	080067e8 	.word	0x080067e8

08001f78 <rt_tid2ptcb>:
 8001f78:	b138      	cbz	r0, 8001f8a <rt_tid2ptcb+0x12>
 8001f7a:	0783      	lsls	r3, r0, #30
 8001f7c:	d104      	bne.n	8001f88 <rt_tid2ptcb+0x10>
 8001f7e:	7803      	ldrb	r3, [r0, #0]
 8001f80:	2b00      	cmp	r3, #0
 8001f82:	bf18      	it	ne
 8001f84:	2000      	movne	r0, #0
 8001f86:	4770      	bx	lr
 8001f88:	2000      	movs	r0, #0
 8001f8a:	4770      	bx	lr

08001f8c <svcKernelStart>:
 8001f8c:	b5b0      	push	{r4, r5, r7, lr}
 8001f8e:	4d0e      	ldr	r5, [pc, #56]	; (8001fc8 <svcKernelStart+0x3c>)
 8001f90:	7828      	ldrb	r0, [r5, #0]
 8001f92:	af00      	add	r7, sp, #0
 8001f94:	b9a8      	cbnz	r0, 8001fc2 <svcKernelStart+0x36>
 8001f96:	4c0d      	ldr	r4, [pc, #52]	; (8001fcc <svcKernelStart+0x40>)
 8001f98:	6823      	ldr	r3, [r4, #0]
 8001f9a:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001f9e:	f000 fb6f 	bl	8002680 <rt_tsk_prio>
 8001fa2:	6823      	ldr	r3, [r4, #0]
 8001fa4:	78da      	ldrb	r2, [r3, #3]
 8001fa6:	2aff      	cmp	r2, #255	; 0xff
 8001fa8:	d103      	bne.n	8001fb2 <svcKernelStart+0x26>
 8001faa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001fac:	3220      	adds	r2, #32
 8001fae:	f382 8809 	msr	PSP, r2
 8001fb2:	6862      	ldr	r2, [r4, #4]
 8001fb4:	b90a      	cbnz	r2, 8001fba <svcKernelStart+0x2e>
 8001fb6:	e884 000c 	stmia.w	r4, {r2, r3}
 8001fba:	f000 fd19 	bl	80029f0 <rt_sys_start>
 8001fbe:	2301      	movs	r3, #1
 8001fc0:	702b      	strb	r3, [r5, #0]
 8001fc2:	2000      	movs	r0, #0
 8001fc4:	bdb0      	pop	{r4, r5, r7, pc}
 8001fc6:	bf00      	nop
 8001fc8:	2000266d 	.word	0x2000266d
 8001fcc:	20002674 	.word	0x20002674

08001fd0 <svcKernelRunning>:
 8001fd0:	4b01      	ldr	r3, [pc, #4]	; (8001fd8 <svcKernelRunning+0x8>)
 8001fd2:	7818      	ldrb	r0, [r3, #0]
 8001fd4:	4770      	bx	lr
 8001fd6:	bf00      	nop
 8001fd8:	2000266d 	.word	0x2000266d

08001fdc <osKernelRunning>:
 8001fdc:	b510      	push	{r4, lr}
 8001fde:	f3ef 8410 	mrs	r4, PRIMASK
 8001fe2:	b934      	cbnz	r4, 8001ff2 <osKernelRunning+0x16>
 8001fe4:	f3ef 8405 	mrs	r4, IPSR
 8001fe8:	b91c      	cbnz	r4, 8001ff2 <osKernelRunning+0x16>
 8001fea:	f3ef 8414 	mrs	r4, CONTROL
 8001fee:	07e4      	lsls	r4, r4, #31
 8001ff0:	d402      	bmi.n	8001ff8 <osKernelRunning+0x1c>
 8001ff2:	4b03      	ldr	r3, [pc, #12]	; (8002000 <osKernelRunning+0x24>)
 8001ff4:	7818      	ldrb	r0, [r3, #0]
 8001ff6:	bd10      	pop	{r4, pc}
 8001ff8:	f8df c008 	ldr.w	r12, [pc, #8]	; 8002004 <osKernelRunning+0x28>
 8001ffc:	df00      	svc	0
 8001ffe:	bd10      	pop	{r4, pc}
 8002000:	2000266d 	.word	0x2000266d
 8002004:	08001fd1 	.word	0x08001fd1

08002008 <osKernelStart>:
 8002008:	b590      	push	{r4, r7, lr}
 800200a:	b089      	sub	sp, #36	; 0x24
 800200c:	af00      	add	r7, sp, #0
 800200e:	f3ef 8310 	mrs	r3, PRIMASK
 8002012:	2b00      	cmp	r3, #0
 8002014:	d137      	bne.n	8002086 <osKernelStart+0x7e>
 8002016:	f3ef 8305 	mrs	r3, IPSR
 800201a:	2b00      	cmp	r3, #0
 800201c:	d133      	bne.n	8002086 <osKernelStart+0x7e>
 800201e:	f7ff ffdd 	bl	8001fdc <osKernelRunning>
 8002022:	b928      	cbnz	r0, 8002030 <osKernelStart+0x28>
 8002024:	4c19      	ldr	r4, [pc, #100]	; (800208c <osKernelStart+0x84>)
 8002026:	6824      	ldr	r4, [r4, #0]
 8002028:	b114      	cbz	r4, 8002030 <osKernelStart+0x28>
 800202a:	6864      	ldr	r4, [r4, #4]
 800202c:	b104      	cbz	r4, 8002030 <osKernelStart+0x28>
 800202e:	47a0      	blx	r4
 8002030:	f3ef 8414 	mrs	r4, CONTROL
 8002034:	f004 0403 	and.w	r4, r4, #3
 8002038:	2c02      	cmp	r4, #2
 800203a:	d018      	beq.n	800206e <osKernelStart+0x66>
 800203c:	2c03      	cmp	r4, #3
 800203e:	d01c      	beq.n	800207a <osKernelStart+0x72>
 8002040:	2c01      	cmp	r4, #1
 8002042:	d01e      	beq.n	8002082 <osKernelStart+0x7a>
 8002044:	f107 0420 	add.w	r4, r7, #32
 8002048:	f384 8809 	msr	PSP, r4
 800204c:	4c10      	ldr	r4, [pc, #64]	; (8002090 <osKernelStart+0x88>)
 800204e:	7824      	ldrb	r4, [r4, #0]
 8002050:	07e4      	lsls	r4, r4, #31
 8002052:	d510      	bpl.n	8002076 <osKernelStart+0x6e>
 8002054:	2402      	movs	r4, #2
 8002056:	f384 8814 	msr	CONTROL, r4
 800205a:	f3bf 8f4f 	dsb	sy
 800205e:	f3bf 8f6f 	isb	sy
 8002062:	f8df c030 	ldr.w	r12, [pc, #48]	; 8002094 <osKernelStart+0x8c>
 8002066:	df00      	svc	0
 8002068:	3724      	adds	r7, #36	; 0x24
 800206a:	46bd      	mov	sp, r7
 800206c:	bd90      	pop	{r4, r7, pc}
 800206e:	4c08      	ldr	r4, [pc, #32]	; (8002090 <osKernelStart+0x88>)
 8002070:	7824      	ldrb	r4, [r4, #0]
 8002072:	07e4      	lsls	r4, r4, #31
 8002074:	d4f5      	bmi.n	8002062 <osKernelStart+0x5a>
 8002076:	2403      	movs	r4, #3
 8002078:	e7ed      	b.n	8002056 <osKernelStart+0x4e>
 800207a:	4c05      	ldr	r4, [pc, #20]	; (8002090 <osKernelStart+0x88>)
 800207c:	7824      	ldrb	r4, [r4, #0]
 800207e:	07e4      	lsls	r4, r4, #31
 8002080:	d5ef      	bpl.n	8002062 <osKernelStart+0x5a>
 8002082:	20ff      	movs	r0, #255	; 0xff
 8002084:	e7f0      	b.n	8002068 <osKernelStart+0x60>
 8002086:	2082      	movs	r0, #130	; 0x82
 8002088:	e7ee      	b.n	8002068 <osKernelStart+0x60>
 800208a:	bf00      	nop
 800208c:	2000265c 	.word	0x2000265c
 8002090:	08006816 	.word	0x08006816
 8002094:	08001f8d 	.word	0x08001f8d

08002098 <svcThreadCreate>:
 8002098:	b570      	push	{r4, r5, r6, lr}
 800209a:	460b      	mov	r3, r1
 800209c:	4616      	mov	r6, r2
 800209e:	4602      	mov	r2, r0
 80020a0:	b910      	cbnz	r0, 80020a8 <svcThreadCreate+0x10>
 80020a2:	2400      	movs	r4, #0
 80020a4:	4620      	mov	r0, r4
 80020a6:	bd70      	pop	{r4, r5, r6, pc}
 80020a8:	6800      	ldr	r0, [r0, #0]
 80020aa:	2800      	cmp	r0, #0
 80020ac:	d0f9      	beq.n	80020a2 <svcThreadCreate+0xa>
 80020ae:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 80020b2:	1ce5      	adds	r5, r4, #3
 80020b4:	b2ad      	uxth	r5, r5
 80020b6:	2d06      	cmp	r5, #6
 80020b8:	d8f3      	bhi.n	80020a2 <svcThreadCreate+0xa>
 80020ba:	68d1      	ldr	r1, [r2, #12]
 80020bc:	b1c1      	cbz	r1, 80020f0 <svcThreadCreate+0x58>
 80020be:	6912      	ldr	r2, [r2, #16]
 80020c0:	3404      	adds	r4, #4
 80020c2:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 80020c6:	f000 fb19 	bl	80026fc <rt_tsk_create>
 80020ca:	2800      	cmp	r0, #0
 80020cc:	d0e9      	beq.n	80020a2 <svcThreadCreate+0xa>
 80020ce:	4b0a      	ldr	r3, [pc, #40]	; (80020f8 <svcThreadCreate+0x60>)
 80020d0:	4a0a      	ldr	r2, [pc, #40]	; (80020fc <svcThreadCreate+0x64>)
 80020d2:	3801      	subs	r0, #1
 80020d4:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80020d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80020da:	635a      	str	r2, [r3, #52]	; 0x34
 80020dc:	4b08      	ldr	r3, [pc, #32]	; (8002100 <svcThreadCreate+0x68>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	b143      	cbz	r3, 80020f4 <svcThreadCreate+0x5c>
 80020e2:	689b      	ldr	r3, [r3, #8]
 80020e4:	b133      	cbz	r3, 80020f4 <svcThreadCreate+0x5c>
 80020e6:	4631      	mov	r1, r6
 80020e8:	78e0      	ldrb	r0, [r4, #3]
 80020ea:	4798      	blx	r3
 80020ec:	63e0      	str	r0, [r4, #60]	; 0x3c
 80020ee:	e7d9      	b.n	80020a4 <svcThreadCreate+0xc>
 80020f0:	460a      	mov	r2, r1
 80020f2:	e7e5      	b.n	80020c0 <svcThreadCreate+0x28>
 80020f4:	63e6      	str	r6, [r4, #60]	; 0x3c
 80020f6:	e7d5      	b.n	80020a4 <svcThreadCreate+0xc>
 80020f8:	200020c0 	.word	0x200020c0
 80020fc:	080022a1 	.word	0x080022a1
 8002100:	2000265c 	.word	0x2000265c

08002104 <svcThreadGetId>:
 8002104:	b508      	push	{r3, lr}
 8002106:	f000 fab3 	bl	8002670 <rt_tsk_self>
 800210a:	b118      	cbz	r0, 8002114 <svcThreadGetId+0x10>
 800210c:	3801      	subs	r0, #1
 800210e:	4b02      	ldr	r3, [pc, #8]	; (8002118 <svcThreadGetId+0x14>)
 8002110:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002114:	bd08      	pop	{r3, pc}
 8002116:	bf00      	nop
 8002118:	200020c0 	.word	0x200020c0

0800211c <svcThreadTerminate>:
 800211c:	b510      	push	{r4, lr}
 800211e:	f7ff ff2b 	bl	8001f78 <rt_tid2ptcb>
 8002122:	4604      	mov	r4, r0
 8002124:	b170      	cbz	r0, 8002144 <svcThreadTerminate+0x28>
 8002126:	4b08      	ldr	r3, [pc, #32]	; (8002148 <svcThreadTerminate+0x2c>)
 8002128:	681b      	ldr	r3, [r3, #0]
 800212a:	b11b      	cbz	r3, 8002134 <svcThreadTerminate+0x18>
 800212c:	68db      	ldr	r3, [r3, #12]
 800212e:	b10b      	cbz	r3, 8002134 <svcThreadTerminate+0x18>
 8002130:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002132:	4798      	blx	r3
 8002134:	78e0      	ldrb	r0, [r4, #3]
 8002136:	f000 fb37 	bl	80027a8 <rt_tsk_delete>
 800213a:	28ff      	cmp	r0, #255	; 0xff
 800213c:	bf0c      	ite	eq
 800213e:	2081      	moveq	r0, #129	; 0x81
 8002140:	2000      	movne	r0, #0
 8002142:	bd10      	pop	{r4, pc}
 8002144:	2080      	movs	r0, #128	; 0x80
 8002146:	bd10      	pop	{r4, pc}
 8002148:	2000265c 	.word	0x2000265c

0800214c <svcDelay>:
 800214c:	b508      	push	{r3, lr}
 800214e:	b128      	cbz	r0, 800215c <svcDelay+0x10>
 8002150:	f7ff fef2 	bl	8001f38 <rt_ms2tick>
 8002154:	f000 fd8e 	bl	8002c74 <rt_dly_wait>
 8002158:	2040      	movs	r0, #64	; 0x40
 800215a:	bd08      	pop	{r3, pc}
 800215c:	bd08      	pop	{r3, pc}
	...

08002160 <osDelay>:
 8002160:	b510      	push	{r4, lr}
 8002162:	f3ef 8410 	mrs	r4, PRIMASK
 8002166:	b934      	cbnz	r4, 8002176 <osDelay+0x16>
 8002168:	f3ef 8405 	mrs	r4, IPSR
 800216c:	b91c      	cbnz	r4, 8002176 <osDelay+0x16>
 800216e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800217c <osDelay+0x1c>
 8002172:	df00      	svc	0
 8002174:	bd10      	pop	{r4, pc}
 8002176:	2082      	movs	r0, #130	; 0x82
 8002178:	bd10      	pop	{r4, pc}
 800217a:	0000      	.short	0x0000
 800217c:	0800214d 	.word	0x0800214d

08002180 <svcTimerCall>:
 8002180:	0783      	lsls	r3, r0, #30
 8002182:	d105      	bne.n	8002190 <svcTimerCall+0x10>
 8002184:	b138      	cbz	r0, 8002196 <svcTimerCall+0x16>
 8002186:	6943      	ldr	r3, [r0, #20]
 8002188:	6901      	ldr	r1, [r0, #16]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	4618      	mov	r0, r3
 800218e:	4770      	bx	lr
 8002190:	2300      	movs	r3, #0
 8002192:	4619      	mov	r1, r3
 8002194:	e7fa      	b.n	800218c <svcTimerCall+0xc>
 8002196:	4603      	mov	r3, r0
 8002198:	e7fb      	b.n	8002192 <svcTimerCall+0x12>
	...

0800219c <osTimerCall>:
 800219c:	b510      	push	{r4, lr}
 800219e:	4604      	mov	r4, r0
 80021a0:	4608      	mov	r0, r1
 80021a2:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80021b0 <osTimerCall+0x14>
 80021a6:	df00      	svc	0
 80021a8:	e884 0003 	stmia.w	r4, {r0, r1}
 80021ac:	4620      	mov	r0, r4
 80021ae:	bd10      	pop	{r4, pc}
 80021b0:	08002181 	.word	0x08002181

080021b4 <svcMutexCreate>:
 80021b4:	b510      	push	{r4, lr}
 80021b6:	b148      	cbz	r0, 80021cc <svcMutexCreate+0x18>
 80021b8:	6804      	ldr	r4, [r0, #0]
 80021ba:	b124      	cbz	r4, 80021c6 <svcMutexCreate+0x12>
 80021bc:	7823      	ldrb	r3, [r4, #0]
 80021be:	b923      	cbnz	r3, 80021ca <svcMutexCreate+0x16>
 80021c0:	4620      	mov	r0, r4
 80021c2:	f000 fc5b 	bl	8002a7c <rt_mut_init>
 80021c6:	4620      	mov	r0, r4
 80021c8:	bd10      	pop	{r4, pc}
 80021ca:	2000      	movs	r0, #0
 80021cc:	bd10      	pop	{r4, pc}

080021ce <svcMutexWait>:
 80021ce:	b570      	push	{r4, r5, r6, lr}
 80021d0:	f010 0403 	ands.w	r4, r0, #3
 80021d4:	4605      	mov	r5, r0
 80021d6:	460e      	mov	r6, r1
 80021d8:	d111      	bne.n	80021fe <svcMutexWait+0x30>
 80021da:	b180      	cbz	r0, 80021fe <svcMutexWait+0x30>
 80021dc:	7803      	ldrb	r3, [r0, #0]
 80021de:	2b03      	cmp	r3, #3
 80021e0:	d10d      	bne.n	80021fe <svcMutexWait+0x30>
 80021e2:	4608      	mov	r0, r1
 80021e4:	f7ff fea8 	bl	8001f38 <rt_ms2tick>
 80021e8:	4601      	mov	r1, r0
 80021ea:	4628      	mov	r0, r5
 80021ec:	f000 fd14 	bl	8002c18 <rt_mut_wait>
 80021f0:	2801      	cmp	r0, #1
 80021f2:	d106      	bne.n	8002202 <svcMutexWait+0x34>
 80021f4:	2e00      	cmp	r6, #0
 80021f6:	bf14      	ite	ne
 80021f8:	20c1      	movne	r0, #193	; 0xc1
 80021fa:	2081      	moveq	r0, #129	; 0x81
 80021fc:	bd70      	pop	{r4, r5, r6, pc}
 80021fe:	2080      	movs	r0, #128	; 0x80
 8002200:	bd70      	pop	{r4, r5, r6, pc}
 8002202:	4620      	mov	r0, r4
 8002204:	bd70      	pop	{r4, r5, r6, pc}

08002206 <svcMutexRelease>:
 8002206:	0782      	lsls	r2, r0, #30
 8002208:	b508      	push	{r3, lr}
 800220a:	d10a      	bne.n	8002222 <svcMutexRelease+0x1c>
 800220c:	b148      	cbz	r0, 8002222 <svcMutexRelease+0x1c>
 800220e:	7803      	ldrb	r3, [r0, #0]
 8002210:	2b03      	cmp	r3, #3
 8002212:	d106      	bne.n	8002222 <svcMutexRelease+0x1c>
 8002214:	f000 fc90 	bl	8002b38 <rt_mut_release>
 8002218:	28ff      	cmp	r0, #255	; 0xff
 800221a:	bf0c      	ite	eq
 800221c:	2081      	moveq	r0, #129	; 0x81
 800221e:	2000      	movne	r0, #0
 8002220:	bd08      	pop	{r3, pc}
 8002222:	2080      	movs	r0, #128	; 0x80
 8002224:	bd08      	pop	{r3, pc}

08002226 <svcMutexDelete>:
 8002226:	b510      	push	{r4, lr}
 8002228:	f010 0403 	ands.w	r4, r0, #3
 800222c:	d107      	bne.n	800223e <svcMutexDelete+0x18>
 800222e:	b130      	cbz	r0, 800223e <svcMutexDelete+0x18>
 8002230:	7803      	ldrb	r3, [r0, #0]
 8002232:	2b03      	cmp	r3, #3
 8002234:	d103      	bne.n	800223e <svcMutexDelete+0x18>
 8002236:	f000 fc29 	bl	8002a8c <rt_mut_delete>
 800223a:	4620      	mov	r0, r4
 800223c:	bd10      	pop	{r4, pc}
 800223e:	2080      	movs	r0, #128	; 0x80
 8002240:	bd10      	pop	{r4, pc}
	...

08002244 <osMutexCreate>:
 8002244:	b570      	push	{r4, r5, r6, lr}
 8002246:	4605      	mov	r5, r0
 8002248:	f3ef 8410 	mrs	r4, PRIMASK
 800224c:	b994      	cbnz	r4, 8002274 <osMutexCreate+0x30>
 800224e:	f3ef 8605 	mrs	r6, IPSR
 8002252:	b97e      	cbnz	r6, 8002274 <osMutexCreate+0x30>
 8002254:	f3ef 8414 	mrs	r4, CONTROL
 8002258:	07e4      	lsls	r4, r4, #31
 800225a:	d406      	bmi.n	800226a <osMutexCreate+0x26>
 800225c:	4c06      	ldr	r4, [pc, #24]	; (8002278 <osMutexCreate+0x34>)
 800225e:	7824      	ldrb	r4, [r4, #0]
 8002260:	b91c      	cbnz	r4, 800226a <osMutexCreate+0x26>
 8002262:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002266:	f7ff bfa5 	b.w	80021b4 <svcMutexCreate>
 800226a:	4628      	mov	r0, r5
 800226c:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800227c <osMutexCreate+0x38>
 8002270:	df00      	svc	0
 8002272:	bd70      	pop	{r4, r5, r6, pc}
 8002274:	2000      	movs	r0, #0
 8002276:	bd70      	pop	{r4, r5, r6, pc}
 8002278:	2000266d 	.word	0x2000266d
 800227c:	080021b5 	.word	0x080021b5

08002280 <osMutexWait>:
 8002280:	b510      	push	{r4, lr}
 8002282:	f3ef 8410 	mrs	r4, PRIMASK
 8002286:	b934      	cbnz	r4, 8002296 <osMutexWait+0x16>
 8002288:	f3ef 8405 	mrs	r4, IPSR
 800228c:	b91c      	cbnz	r4, 8002296 <osMutexWait+0x16>
 800228e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800229c <osMutexWait+0x1c>
 8002292:	df00      	svc	0
 8002294:	bd10      	pop	{r4, pc}
 8002296:	2082      	movs	r0, #130	; 0x82
 8002298:	bd10      	pop	{r4, pc}
 800229a:	0000      	.short	0x0000
 800229c:	080021cf 	.word	0x080021cf

080022a0 <osThreadExit>:
 80022a0:	4808      	ldr	r0, [pc, #32]	; (80022c4 <osThreadExit+0x24>)
 80022a2:	b508      	push	{r3, lr}
 80022a4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80022a8:	6800      	ldr	r0, [r0, #0]
 80022aa:	f7ff ffe9 	bl	8002280 <osMutexWait>
 80022ae:	f8df c018 	ldr.w	r12, [pc, #24]	; 80022c8 <osThreadExit+0x28>
 80022b2:	df00      	svc	0
 80022b4:	4604      	mov	r4, r0
 80022b6:	f7ff fb43 	bl	8001940 <sysThreadTerminate>
 80022ba:	4620      	mov	r0, r4
 80022bc:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022cc <osThreadExit+0x2c>
 80022c0:	df00      	svc	0
 80022c2:	e7fe      	b.n	80022c2 <osThreadExit+0x22>
 80022c4:	20002668 	.word	0x20002668
 80022c8:	08002105 	.word	0x08002105
 80022cc:	0800211d 	.word	0x0800211d

080022d0 <osMutexRelease>:
 80022d0:	b510      	push	{r4, lr}
 80022d2:	f3ef 8410 	mrs	r4, PRIMASK
 80022d6:	b934      	cbnz	r4, 80022e6 <osMutexRelease+0x16>
 80022d8:	f3ef 8405 	mrs	r4, IPSR
 80022dc:	b91c      	cbnz	r4, 80022e6 <osMutexRelease+0x16>
 80022de:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022ec <osMutexRelease+0x1c>
 80022e2:	df00      	svc	0
 80022e4:	bd10      	pop	{r4, pc}
 80022e6:	2082      	movs	r0, #130	; 0x82
 80022e8:	bd10      	pop	{r4, pc}
 80022ea:	0000      	.short	0x0000
 80022ec:	08002207 	.word	0x08002207

080022f0 <osThreadContextCreate>:
 80022f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80022f4:	4680      	mov	r8, r0
 80022f6:	460f      	mov	r7, r1
 80022f8:	4616      	mov	r6, r2
 80022fa:	f3ef 8410 	mrs	r4, PRIMASK
 80022fe:	bb04      	cbnz	r4, 8002342 <osThreadContextCreate+0x52>
 8002300:	f3ef 8305 	mrs	r3, IPSR
 8002304:	b9d3      	cbnz	r3, 800233c <osThreadContextCreate+0x4c>
 8002306:	f3ef 8314 	mrs	r3, CONTROL
 800230a:	07db      	lsls	r3, r3, #31
 800230c:	d406      	bmi.n	800231c <osThreadContextCreate+0x2c>
 800230e:	4b0e      	ldr	r3, [pc, #56]	; (8002348 <osThreadContextCreate+0x58>)
 8002310:	781b      	ldrb	r3, [r3, #0]
 8002312:	b91b      	cbnz	r3, 800231c <osThreadContextCreate+0x2c>
 8002314:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002318:	f7ff bebe 	b.w	8002098 <svcThreadCreate>
 800231c:	4d0b      	ldr	r5, [pc, #44]	; (800234c <osThreadContextCreate+0x5c>)
 800231e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002322:	6828      	ldr	r0, [r5, #0]
 8002324:	f7ff ffac 	bl	8002280 <osMutexWait>
 8002328:	4640      	mov	r0, r8
 800232a:	4639      	mov	r1, r7
 800232c:	4632      	mov	r2, r6
 800232e:	f8df c020 	ldr.w	r12, [pc, #32]	; 8002350 <osThreadContextCreate+0x60>
 8002332:	df00      	svc	0
 8002334:	4604      	mov	r4, r0
 8002336:	6828      	ldr	r0, [r5, #0]
 8002338:	f7ff ffca 	bl	80022d0 <osMutexRelease>
 800233c:	4620      	mov	r0, r4
 800233e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002342:	2400      	movs	r4, #0
 8002344:	e7fa      	b.n	800233c <osThreadContextCreate+0x4c>
 8002346:	bf00      	nop
 8002348:	2000266d 	.word	0x2000266d
 800234c:	20002668 	.word	0x20002668
 8002350:	08002099 	.word	0x08002099

08002354 <osThreadCreate>:
 8002354:	2200      	movs	r2, #0
 8002356:	f7ff bfcb 	b.w	80022f0 <osThreadContextCreate>
	...

0800235c <osMutexDelete>:
 800235c:	b510      	push	{r4, lr}
 800235e:	f3ef 8410 	mrs	r4, PRIMASK
 8002362:	b934      	cbnz	r4, 8002372 <osMutexDelete+0x16>
 8002364:	f3ef 8405 	mrs	r4, IPSR
 8002368:	b91c      	cbnz	r4, 8002372 <osMutexDelete+0x16>
 800236a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002378 <osMutexDelete+0x1c>
 800236e:	df00      	svc	0
 8002370:	bd10      	pop	{r4, pc}
 8002372:	2082      	movs	r0, #130	; 0x82
 8002374:	bd10      	pop	{r4, pc}
 8002376:	0000      	.short	0x0000
 8002378:	08002227 	.word	0x08002227

0800237c <svcMessageCreate>:
 800237c:	b510      	push	{r4, lr}
 800237e:	4604      	mov	r4, r0
 8002380:	b160      	cbz	r0, 800239c <svcMessageCreate+0x20>
 8002382:	6801      	ldr	r1, [r0, #0]
 8002384:	b151      	cbz	r1, 800239c <svcMessageCreate+0x20>
 8002386:	6840      	ldr	r0, [r0, #4]
 8002388:	b148      	cbz	r0, 800239e <svcMessageCreate+0x22>
 800238a:	7803      	ldrb	r3, [r0, #0]
 800238c:	b933      	cbnz	r3, 800239c <svcMessageCreate+0x20>
 800238e:	3104      	adds	r1, #4
 8002390:	0089      	lsls	r1, r1, #2
 8002392:	b289      	uxth	r1, r1
 8002394:	f7ff fc52 	bl	8001c3c <rt_mbx_init>
 8002398:	6860      	ldr	r0, [r4, #4]
 800239a:	bd10      	pop	{r4, pc}
 800239c:	2000      	movs	r0, #0
 800239e:	bd10      	pop	{r4, pc}

080023a0 <svcKernelInitialize>:
 80023a0:	b538      	push	{r3, r4, r5, lr}
 80023a2:	4c11      	ldr	r4, [pc, #68]	; (80023e8 <svcKernelInitialize+0x48>)
 80023a4:	7823      	ldrb	r3, [r4, #0]
 80023a6:	b90b      	cbnz	r3, 80023ac <svcKernelInitialize+0xc>
 80023a8:	f000 faa8 	bl	80028fc <rt_sys_init>
 80023ac:	4b0f      	ldr	r3, [pc, #60]	; (80023ec <svcKernelInitialize+0x4c>)
 80023ae:	7825      	ldrb	r5, [r4, #0]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	22ff      	movs	r2, #255	; 0xff
 80023b4:	709a      	strb	r2, [r3, #2]
 80023b6:	b98d      	cbnz	r5, 80023dc <svcKernelInitialize+0x3c>
 80023b8:	4629      	mov	r1, r5
 80023ba:	480d      	ldr	r0, [pc, #52]	; (80023f0 <svcKernelInitialize+0x50>)
 80023bc:	f7ff ffde 	bl	800237c <svcMessageCreate>
 80023c0:	4b0c      	ldr	r3, [pc, #48]	; (80023f4 <svcKernelInitialize+0x54>)
 80023c2:	462a      	mov	r2, r5
 80023c4:	6018      	str	r0, [r3, #0]
 80023c6:	4629      	mov	r1, r5
 80023c8:	480b      	ldr	r0, [pc, #44]	; (80023f8 <svcKernelInitialize+0x58>)
 80023ca:	f7ff fe65 	bl	8002098 <svcThreadCreate>
 80023ce:	4b0b      	ldr	r3, [pc, #44]	; (80023fc <svcKernelInitialize+0x5c>)
 80023d0:	6018      	str	r0, [r3, #0]
 80023d2:	480b      	ldr	r0, [pc, #44]	; (8002400 <svcKernelInitialize+0x60>)
 80023d4:	f7ff ff36 	bl	8002244 <osMutexCreate>
 80023d8:	4b0a      	ldr	r3, [pc, #40]	; (8002404 <svcKernelInitialize+0x64>)
 80023da:	6018      	str	r0, [r3, #0]
 80023dc:	2301      	movs	r3, #1
 80023de:	7023      	strb	r3, [r4, #0]
 80023e0:	4b09      	ldr	r3, [pc, #36]	; (8002408 <svcKernelInitialize+0x68>)
 80023e2:	2000      	movs	r0, #0
 80023e4:	7018      	strb	r0, [r3, #0]
 80023e6:	bd38      	pop	{r3, r4, r5, pc}
 80023e8:	2000266c 	.word	0x2000266c
 80023ec:	20002674 	.word	0x20002674
 80023f0:	0800681c 	.word	0x0800681c
 80023f4:	20002160 	.word	0x20002160
 80023f8:	08006838 	.word	0x08006838
 80023fc:	20002654 	.word	0x20002654
 8002400:	08006850 	.word	0x08006850
 8002404:	20002668 	.word	0x20002668
 8002408:	2000266d 	.word	0x2000266d

0800240c <osKernelInitialize>:
 800240c:	b510      	push	{r4, lr}
 800240e:	f3ef 8410 	mrs	r4, PRIMASK
 8002412:	b974      	cbnz	r4, 8002432 <osKernelInitialize+0x26>
 8002414:	f3ef 8405 	mrs	r4, IPSR
 8002418:	b95c      	cbnz	r4, 8002432 <osKernelInitialize+0x26>
 800241a:	f3ef 8414 	mrs	r4, CONTROL
 800241e:	07e4      	lsls	r4, r4, #31
 8002420:	d403      	bmi.n	800242a <osKernelInitialize+0x1e>
 8002422:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002426:	f7ff bfbb 	b.w	80023a0 <svcKernelInitialize>
 800242a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002438 <osKernelInitialize+0x2c>
 800242e:	df00      	svc	0
 8002430:	bd10      	pop	{r4, pc}
 8002432:	2082      	movs	r0, #130	; 0x82
 8002434:	bd10      	pop	{r4, pc}
 8002436:	0000      	.short	0x0000
 8002438:	080023a1 	.word	0x080023a1

0800243c <svcMessageGet>:
 800243c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8002440:	460c      	mov	r4, r1
 8002442:	4680      	mov	r8, r0
 8002444:	b318      	cbz	r0, 800248e <svcMessageGet+0x52>
 8002446:	7803      	ldrb	r3, [r0, #0]
 8002448:	2b01      	cmp	r3, #1
 800244a:	d125      	bne.n	8002498 <svcMessageGet+0x5c>
 800244c:	4608      	mov	r0, r1
 800244e:	f7ff fd73 	bl	8001f38 <rt_ms2tick>
 8002452:	a902      	add	r1, sp, #8
 8002454:	4602      	mov	r2, r0
 8002456:	4640      	mov	r0, r8
 8002458:	f7ff fbfe 	bl	8001c58 <rt_mbx_wait>
 800245c:	2801      	cmp	r0, #1
 800245e:	d111      	bne.n	8002484 <svcMessageGet+0x48>
 8002460:	2000      	movs	r0, #0
 8002462:	2c00      	cmp	r4, #0
 8002464:	4602      	mov	r2, r0
 8002466:	4603      	mov	r3, r0
 8002468:	bf18      	it	ne
 800246a:	2040      	movne	r0, #64	; 0x40
 800246c:	9902      	ldr	r1, [sp, #8]
 800246e:	4604      	mov	r4, r0
 8002470:	460d      	mov	r5, r1
 8002472:	4616      	mov	r6, r2
 8002474:	461f      	mov	r7, r3
 8002476:	4620      	mov	r0, r4
 8002478:	4629      	mov	r1, r5
 800247a:	4632      	mov	r2, r6
 800247c:	463b      	mov	r3, r7
 800247e:	b004      	add	sp, #16
 8002480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002484:	2000      	movs	r0, #0
 8002486:	4602      	mov	r2, r0
 8002488:	4603      	mov	r3, r0
 800248a:	2010      	movs	r0, #16
 800248c:	e7ee      	b.n	800246c <svcMessageGet+0x30>
 800248e:	2480      	movs	r4, #128	; 0x80
 8002490:	4605      	mov	r5, r0
 8002492:	4606      	mov	r6, r0
 8002494:	4607      	mov	r7, r0
 8002496:	e7ee      	b.n	8002476 <svcMessageGet+0x3a>
 8002498:	2500      	movs	r5, #0
 800249a:	2480      	movs	r4, #128	; 0x80
 800249c:	462e      	mov	r6, r5
 800249e:	462f      	mov	r7, r5
 80024a0:	e7e9      	b.n	8002476 <svcMessageGet+0x3a>

080024a2 <isrMessagePut>:
 80024a2:	b570      	push	{r4, r5, r6, lr}
 80024a4:	460e      	mov	r6, r1
 80024a6:	4614      	mov	r4, r2
 80024a8:	4605      	mov	r5, r0
 80024aa:	b160      	cbz	r0, 80024c6 <isrMessagePut+0x24>
 80024ac:	b95a      	cbnz	r2, 80024c6 <isrMessagePut+0x24>
 80024ae:	7803      	ldrb	r3, [r0, #0]
 80024b0:	2b01      	cmp	r3, #1
 80024b2:	d108      	bne.n	80024c6 <isrMessagePut+0x24>
 80024b4:	f7ff fc26 	bl	8001d04 <rt_mbx_check>
 80024b8:	b138      	cbz	r0, 80024ca <isrMessagePut+0x28>
 80024ba:	4628      	mov	r0, r5
 80024bc:	4631      	mov	r1, r6
 80024be:	f7ff fc25 	bl	8001d0c <isr_mbx_send>
 80024c2:	4620      	mov	r0, r4
 80024c4:	bd70      	pop	{r4, r5, r6, pc}
 80024c6:	2080      	movs	r0, #128	; 0x80
 80024c8:	bd70      	pop	{r4, r5, r6, pc}
 80024ca:	2081      	movs	r0, #129	; 0x81
 80024cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080024d0 <sysTimerTick>:
 80024d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024d2:	4e11      	ldr	r6, [pc, #68]	; (8002518 <sysTimerTick+0x48>)
 80024d4:	6834      	ldr	r4, [r6, #0]
 80024d6:	b12c      	cbz	r4, 80024e4 <sysTimerTick+0x14>
 80024d8:	68a3      	ldr	r3, [r4, #8]
 80024da:	4f10      	ldr	r7, [pc, #64]	; (800251c <sysTimerTick+0x4c>)
 80024dc:	3b01      	subs	r3, #1
 80024de:	60a3      	str	r3, [r4, #8]
 80024e0:	68a2      	ldr	r2, [r4, #8]
 80024e2:	b102      	cbz	r2, 80024e6 <sysTimerTick+0x16>
 80024e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024e6:	6825      	ldr	r5, [r4, #0]
 80024e8:	6838      	ldr	r0, [r7, #0]
 80024ea:	6035      	str	r5, [r6, #0]
 80024ec:	4621      	mov	r1, r4
 80024ee:	f7ff ffd8 	bl	80024a2 <isrMessagePut>
 80024f2:	b110      	cbz	r0, 80024fa <sysTimerTick+0x2a>
 80024f4:	2004      	movs	r0, #4
 80024f6:	f7ff fa15 	bl	8001924 <os_error>
 80024fa:	7963      	ldrb	r3, [r4, #5]
 80024fc:	2b01      	cmp	r3, #1
 80024fe:	d107      	bne.n	8002510 <sysTimerTick+0x40>
 8002500:	68e1      	ldr	r1, [r4, #12]
 8002502:	4620      	mov	r0, r4
 8002504:	f7ff fcfe 	bl	8001f04 <rt_timer_insert>
 8002508:	2d00      	cmp	r5, #0
 800250a:	d0eb      	beq.n	80024e4 <sysTimerTick+0x14>
 800250c:	462c      	mov	r4, r5
 800250e:	e7e7      	b.n	80024e0 <sysTimerTick+0x10>
 8002510:	2301      	movs	r3, #1
 8002512:	7123      	strb	r3, [r4, #4]
 8002514:	e7f8      	b.n	8002508 <sysTimerTick+0x38>
 8002516:	bf00      	nop
 8002518:	20002670 	.word	0x20002670
 800251c:	20002160 	.word	0x20002160

08002520 <isrMessageGet>:
 8002520:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002522:	4604      	mov	r4, r0
 8002524:	4616      	mov	r6, r2
 8002526:	4608      	mov	r0, r1
 8002528:	b101      	cbz	r1, 800252c <isrMessageGet+0xc>
 800252a:	b122      	cbz	r2, 8002536 <isrMessageGet+0x16>
 800252c:	2380      	movs	r3, #128	; 0x80
 800252e:	6023      	str	r3, [r4, #0]
 8002530:	4620      	mov	r0, r4
 8002532:	b004      	add	sp, #16
 8002534:	bd70      	pop	{r4, r5, r6, pc}
 8002536:	780b      	ldrb	r3, [r1, #0]
 8002538:	2b01      	cmp	r3, #1
 800253a:	d1f7      	bne.n	800252c <isrMessageGet+0xc>
 800253c:	a902      	add	r1, sp, #8
 800253e:	f7ff fbec 	bl	8001d1a <isr_mbx_receive>
 8002542:	2804      	cmp	r0, #4
 8002544:	bf08      	it	eq
 8002546:	2310      	moveq	r3, #16
 8002548:	ad01      	add	r5, sp, #4
 800254a:	bf14      	ite	ne
 800254c:	9601      	strne	r6, [sp, #4]
 800254e:	9301      	streq	r3, [sp, #4]
 8002550:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002554:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002558:	e7ea      	b.n	8002530 <isrMessageGet+0x10>
	...

0800255c <osMessageGet>:
 800255c:	b538      	push	{r3, r4, r5, lr}
 800255e:	4604      	mov	r4, r0
 8002560:	4615      	mov	r5, r2
 8002562:	f3ef 8010 	mrs	r0, PRIMASK
 8002566:	b910      	cbnz	r0, 800256e <osMessageGet+0x12>
 8002568:	f3ef 8005 	mrs	r0, IPSR
 800256c:	b128      	cbz	r0, 800257a <osMessageGet+0x1e>
 800256e:	462a      	mov	r2, r5
 8002570:	4620      	mov	r0, r4
 8002572:	f7ff ffd5 	bl	8002520 <isrMessageGet>
 8002576:	4620      	mov	r0, r4
 8002578:	bd38      	pop	{r3, r4, r5, pc}
 800257a:	4608      	mov	r0, r1
 800257c:	4611      	mov	r1, r2
 800257e:	f8df c00c 	ldr.w	r12, [pc, #12]	; 800258c <osMessageGet+0x30>
 8002582:	df00      	svc	0
 8002584:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002588:	e7f5      	b.n	8002576 <osMessageGet+0x1a>
 800258a:	0000      	.short	0x0000
 800258c:	0800243d 	.word	0x0800243d

08002590 <osTimerThread>:
 8002590:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002592:	4c0a      	ldr	r4, [pc, #40]	; (80025bc <osTimerThread+0x2c>)
 8002594:	6821      	ldr	r1, [r4, #0]
 8002596:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800259a:	a803      	add	r0, sp, #12
 800259c:	f7ff ffde 	bl	800255c <osMessageGet>
 80025a0:	9b03      	ldr	r3, [sp, #12]
 80025a2:	2b10      	cmp	r3, #16
 80025a4:	d1f6      	bne.n	8002594 <osTimerThread+0x4>
 80025a6:	9904      	ldr	r1, [sp, #16]
 80025a8:	a801      	add	r0, sp, #4
 80025aa:	f7ff fdf7 	bl	800219c <osTimerCall>
 80025ae:	9b01      	ldr	r3, [sp, #4]
 80025b0:	2b00      	cmp	r3, #0
 80025b2:	d0ef      	beq.n	8002594 <osTimerThread+0x4>
 80025b4:	9802      	ldr	r0, [sp, #8]
 80025b6:	4798      	blx	r3
 80025b8:	e7ec      	b.n	8002594 <osTimerThread+0x4>
 80025ba:	bf00      	nop
 80025bc:	20002160 	.word	0x20002160

080025c0 <rt_switch_req>:
 80025c0:	4b05      	ldr	r3, [pc, #20]	; (80025d8 <rt_switch_req+0x18>)
 80025c2:	6058      	str	r0, [r3, #4]
 80025c4:	2302      	movs	r3, #2
 80025c6:	7043      	strb	r3, [r0, #1]
 80025c8:	4b04      	ldr	r3, [pc, #16]	; (80025dc <rt_switch_req+0x1c>)
 80025ca:	681b      	ldr	r3, [r3, #0]
 80025cc:	b11b      	cbz	r3, 80025d6 <rt_switch_req+0x16>
 80025ce:	691b      	ldr	r3, [r3, #16]
 80025d0:	b10b      	cbz	r3, 80025d6 <rt_switch_req+0x16>
 80025d2:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80025d4:	4718      	bx	r3
 80025d6:	4770      	bx	lr
 80025d8:	20002674 	.word	0x20002674
 80025dc:	2000265c 	.word	0x2000265c

080025e0 <rt_dispatch.part.0>:
 80025e0:	b508      	push	{r3, lr}
 80025e2:	4803      	ldr	r0, [pc, #12]	; (80025f0 <rt_dispatch.part.0+0x10>)
 80025e4:	f7ff f898 	bl	8001718 <rt_get_first>
 80025e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80025ec:	f7ff bfe8 	b.w	80025c0 <rt_switch_req>
 80025f0:	20001e7c 	.word	0x20001e7c

080025f4 <rt_dispatch>:
 80025f4:	b570      	push	{r4, r5, r6, lr}
 80025f6:	4604      	mov	r4, r0
 80025f8:	b918      	cbnz	r0, 8002602 <rt_dispatch+0xe>
 80025fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80025fe:	f7ff bfef 	b.w	80025e0 <rt_dispatch.part.0>
 8002602:	4e0c      	ldr	r6, [pc, #48]	; (8002634 <rt_dispatch+0x40>)
 8002604:	78a2      	ldrb	r2, [r4, #2]
 8002606:	6830      	ldr	r0, [r6, #0]
 8002608:	7883      	ldrb	r3, [r0, #2]
 800260a:	429a      	cmp	r2, r3
 800260c:	f04f 0501 	mov.w	r5, #1
 8002610:	d908      	bls.n	8002624 <rt_dispatch+0x30>
 8002612:	f7ff f893 	bl	800173c <rt_put_rdy_first>
 8002616:	6833      	ldr	r3, [r6, #0]
 8002618:	705d      	strb	r5, [r3, #1]
 800261a:	4620      	mov	r0, r4
 800261c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002620:	f7ff bfce 	b.w	80025c0 <rt_switch_req>
 8002624:	7065      	strb	r5, [r4, #1]
 8002626:	4621      	mov	r1, r4
 8002628:	4803      	ldr	r0, [pc, #12]	; (8002638 <rt_dispatch+0x44>)
 800262a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800262e:	f7ff b85b 	b.w	80016e8 <rt_put_prio>
 8002632:	bf00      	nop
 8002634:	20002674 	.word	0x20002674
 8002638:	20001e7c 	.word	0x20001e7c

0800263c <rt_block>:
 800263c:	b538      	push	{r3, r4, r5, lr}
 800263e:	460d      	mov	r5, r1
 8002640:	4601      	mov	r1, r0
 8002642:	b180      	cbz	r0, 8002666 <rt_block+0x2a>
 8002644:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002648:	4298      	cmp	r0, r3
 800264a:	4c07      	ldr	r4, [pc, #28]	; (8002668 <rt_block+0x2c>)
 800264c:	d002      	beq.n	8002654 <rt_block+0x18>
 800264e:	6820      	ldr	r0, [r4, #0]
 8002650:	f7ff f87e 	bl	8001750 <rt_put_dly>
 8002654:	6823      	ldr	r3, [r4, #0]
 8002656:	4805      	ldr	r0, [pc, #20]	; (800266c <rt_block+0x30>)
 8002658:	705d      	strb	r5, [r3, #1]
 800265a:	f7ff f85d 	bl	8001718 <rt_get_first>
 800265e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002662:	f7ff bfad 	b.w	80025c0 <rt_switch_req>
 8002666:	bd38      	pop	{r3, r4, r5, pc}
 8002668:	20002674 	.word	0x20002674
 800266c:	20001e7c 	.word	0x20001e7c

08002670 <rt_tsk_self>:
 8002670:	4b02      	ldr	r3, [pc, #8]	; (800267c <rt_tsk_self+0xc>)
 8002672:	6818      	ldr	r0, [r3, #0]
 8002674:	b100      	cbz	r0, 8002678 <rt_tsk_self+0x8>
 8002676:	78c0      	ldrb	r0, [r0, #3]
 8002678:	4770      	bx	lr
 800267a:	bf00      	nop
 800267c:	20002674 	.word	0x20002674

08002680 <rt_tsk_prio>:
 8002680:	b510      	push	{r4, lr}
 8002682:	b9a8      	cbnz	r0, 80026b0 <rt_tsk_prio+0x30>
 8002684:	4b19      	ldr	r3, [pc, #100]	; (80026ec <rt_tsk_prio+0x6c>)
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	7099      	strb	r1, [r3, #2]
 800268a:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800268e:	4818      	ldr	r0, [pc, #96]	; (80026f0 <rt_tsk_prio+0x70>)
 8002690:	6843      	ldr	r3, [r0, #4]
 8002692:	789b      	ldrb	r3, [r3, #2]
 8002694:	428b      	cmp	r3, r1
 8002696:	d801      	bhi.n	800269c <rt_tsk_prio+0x1c>
 8002698:	2000      	movs	r0, #0
 800269a:	bd10      	pop	{r4, pc}
 800269c:	4c13      	ldr	r4, [pc, #76]	; (80026ec <rt_tsk_prio+0x6c>)
 800269e:	6821      	ldr	r1, [r4, #0]
 80026a0:	f7ff f822 	bl	80016e8 <rt_put_prio>
 80026a4:	6823      	ldr	r3, [r4, #0]
 80026a6:	2201      	movs	r2, #1
 80026a8:	705a      	strb	r2, [r3, #1]
 80026aa:	f7ff ff99 	bl	80025e0 <rt_dispatch.part.0>
 80026ae:	e7f3      	b.n	8002698 <rt_tsk_prio+0x18>
 80026b0:	4b10      	ldr	r3, [pc, #64]	; (80026f4 <rt_tsk_prio+0x74>)
 80026b2:	881b      	ldrh	r3, [r3, #0]
 80026b4:	4298      	cmp	r0, r3
 80026b6:	d817      	bhi.n	80026e8 <rt_tsk_prio+0x68>
 80026b8:	3801      	subs	r0, #1
 80026ba:	4b0f      	ldr	r3, [pc, #60]	; (80026f8 <rt_tsk_prio+0x78>)
 80026bc:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80026c0:	b194      	cbz	r4, 80026e8 <rt_tsk_prio+0x68>
 80026c2:	4b0a      	ldr	r3, [pc, #40]	; (80026ec <rt_tsk_prio+0x6c>)
 80026c4:	70a1      	strb	r1, [r4, #2]
 80026c6:	681b      	ldr	r3, [r3, #0]
 80026c8:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80026cc:	429c      	cmp	r4, r3
 80026ce:	d0de      	beq.n	800268e <rt_tsk_prio+0xe>
 80026d0:	4620      	mov	r0, r4
 80026d2:	f7ff f8af 	bl	8001834 <rt_resort_prio>
 80026d6:	7863      	ldrb	r3, [r4, #1]
 80026d8:	2b01      	cmp	r3, #1
 80026da:	d1dd      	bne.n	8002698 <rt_tsk_prio+0x18>
 80026dc:	4804      	ldr	r0, [pc, #16]	; (80026f0 <rt_tsk_prio+0x70>)
 80026de:	f7ff f81b 	bl	8001718 <rt_get_first>
 80026e2:	f7ff ff87 	bl	80025f4 <rt_dispatch>
 80026e6:	e7d7      	b.n	8002698 <rt_tsk_prio+0x18>
 80026e8:	20ff      	movs	r0, #255	; 0xff
 80026ea:	bd10      	pop	{r4, pc}
 80026ec:	20002674 	.word	0x20002674
 80026f0:	20001e7c 	.word	0x20001e7c
 80026f4:	08006818 	.word	0x08006818
 80026f8:	200020c0 	.word	0x200020c0

080026fc <rt_tsk_create>:
 80026fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8002700:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002704:	460d      	mov	r5, r1
 8002706:	4680      	mov	r8, r0
 8002708:	4823      	ldr	r0, [pc, #140]	; (8002798 <rt_tsk_create+0x9c>)
 800270a:	4616      	mov	r6, r2
 800270c:	469a      	mov	r10, r3
 800270e:	bf08      	it	eq
 8002710:	3501      	addeq	r5, #1
 8002712:	f7ff fa72 	bl	8001bfa <rt_alloc_box>
 8002716:	4604      	mov	r4, r0
 8002718:	b920      	cbnz	r0, 8002724 <rt_tsk_create+0x28>
 800271a:	f04f 0900 	mov.w	r9, #0
 800271e:	4648      	mov	r0, r9
 8002720:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002724:	4b1d      	ldr	r3, [pc, #116]	; (800279c <rt_tsk_create+0xa0>)
 8002726:	6306      	str	r6, [r0, #48]	; 0x30
 8002728:	881b      	ldrh	r3, [r3, #0]
 800272a:	4e1d      	ldr	r6, [pc, #116]	; (80027a0 <rt_tsk_create+0xa4>)
 800272c:	0a28      	lsrs	r0, r5, #8
 800272e:	62a0      	str	r0, [r4, #40]	; 0x28
 8002730:	2100      	movs	r1, #0
 8002732:	428b      	cmp	r3, r1
 8002734:	f101 0901 	add.w	r9, r1, #1
 8002738:	d0ef      	beq.n	800271a <rt_tsk_create+0x1e>
 800273a:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 800273e:	460f      	mov	r7, r1
 8002740:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002744:	4649      	mov	r1, r9
 8002746:	2a00      	cmp	r2, #0
 8002748:	d1f3      	bne.n	8002732 <rt_tsk_create+0x36>
 800274a:	b2ed      	uxtb	r5, r5
 800274c:	2301      	movs	r3, #1
 800274e:	f884 9003 	strb.w	r9, [r4, #3]
 8002752:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002756:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 800275a:	7022      	strb	r2, [r4, #0]
 800275c:	7063      	strb	r3, [r4, #1]
 800275e:	70a5      	strb	r5, [r4, #2]
 8002760:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002764:	6062      	str	r2, [r4, #4]
 8002766:	60a2      	str	r2, [r4, #8]
 8002768:	60e2      	str	r2, [r4, #12]
 800276a:	6122      	str	r2, [r4, #16]
 800276c:	6222      	str	r2, [r4, #32]
 800276e:	82a2      	strh	r2, [r4, #20]
 8002770:	82e2      	strh	r2, [r4, #22]
 8002772:	8322      	strh	r2, [r4, #24]
 8002774:	8362      	strh	r2, [r4, #26]
 8002776:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800277a:	b918      	cbnz	r0, 8002784 <rt_tsk_create+0x88>
 800277c:	4809      	ldr	r0, [pc, #36]	; (80027a4 <rt_tsk_create+0xa8>)
 800277e:	f7ff fa3c 	bl	8001bfa <rt_alloc_box>
 8002782:	6320      	str	r0, [r4, #48]	; 0x30
 8002784:	4620      	mov	r0, r4
 8002786:	4641      	mov	r1, r8
 8002788:	f7ff f91a 	bl	80019c0 <rt_init_stack>
 800278c:	4620      	mov	r0, r4
 800278e:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 8002792:	f7ff ff2f 	bl	80025f4 <rt_dispatch>
 8002796:	e7c2      	b.n	800271e <rt_tsk_create+0x22>
 8002798:	20002488 	.word	0x20002488
 800279c:	08006818 	.word	0x08006818
 80027a0:	200020c0 	.word	0x200020c0
 80027a4:	20001eb0 	.word	0x20001eb0

080027a8 <rt_tsk_delete>:
 80027a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 80027ac:	4d4d      	ldr	r5, [pc, #308]	; (80028e4 <rt_tsk_delete+0x13c>)
 80027ae:	b118      	cbz	r0, 80027b8 <rt_tsk_delete+0x10>
 80027b0:	682b      	ldr	r3, [r5, #0]
 80027b2:	78db      	ldrb	r3, [r3, #3]
 80027b4:	4298      	cmp	r0, r3
 80027b6:	d141      	bne.n	800283c <rt_tsk_delete+0x94>
 80027b8:	682c      	ldr	r4, [r5, #0]
 80027ba:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80028f8 <rt_tsk_delete+0x150>
 80027be:	2300      	movs	r3, #0
 80027c0:	7063      	strb	r3, [r4, #1]
 80027c2:	f002 feac 	bl	800551e <rt_get_PSP>
 80027c6:	62e0      	str	r0, [r4, #44]	; 0x2c
 80027c8:	f7ff f9e0 	bl	8001b8c <rt_stk_check>
 80027cc:	682b      	ldr	r3, [r5, #0]
 80027ce:	6a1c      	ldr	r4, [r3, #32]
 80027d0:	2701      	movs	r7, #1
 80027d2:	b9a4      	cbnz	r4, 80027fe <rt_tsk_delete+0x56>
 80027d4:	682a      	ldr	r2, [r5, #0]
 80027d6:	4944      	ldr	r1, [pc, #272]	; (80028e8 <rt_tsk_delete+0x140>)
 80027d8:	78d3      	ldrb	r3, [r2, #3]
 80027da:	4844      	ldr	r0, [pc, #272]	; (80028ec <rt_tsk_delete+0x144>)
 80027dc:	3b01      	subs	r3, #1
 80027de:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80027e2:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80027e4:	f7ff fa16 	bl	8001c14 <rt_free_box>
 80027e8:	6829      	ldr	r1, [r5, #0]
 80027ea:	4841      	ldr	r0, [pc, #260]	; (80028f0 <rt_tsk_delete+0x148>)
 80027ec:	630c      	str	r4, [r1, #48]	; 0x30
 80027ee:	f7ff fa11 	bl	8001c14 <rt_free_box>
 80027f2:	602c      	str	r4, [r5, #0]
 80027f4:	f7ff fef4 	bl	80025e0 <rt_dispatch.part.0>
 80027f8:	4620      	mov	r0, r4
 80027fa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80027fe:	6863      	ldr	r3, [r4, #4]
 8002800:	b1b3      	cbz	r3, 8002830 <rt_tsk_delete+0x88>
 8002802:	4620      	mov	r0, r4
 8002804:	f7fe ff88 	bl	8001718 <rt_get_first>
 8002808:	2100      	movs	r1, #0
 800280a:	4606      	mov	r6, r0
 800280c:	f7ff f924 	bl	8001a58 <rt_ret_val>
 8002810:	4630      	mov	r0, r6
 8002812:	f7ff f827 	bl	8001864 <rt_rmv_dly>
 8002816:	7077      	strb	r7, [r6, #1]
 8002818:	4631      	mov	r1, r6
 800281a:	4640      	mov	r0, r8
 800281c:	f7fe ff64 	bl	80016e8 <rt_put_prio>
 8002820:	68e3      	ldr	r3, [r4, #12]
 8002822:	6a32      	ldr	r2, [r6, #32]
 8002824:	8067      	strh	r7, [r4, #2]
 8002826:	60a6      	str	r6, [r4, #8]
 8002828:	60e2      	str	r2, [r4, #12]
 800282a:	6234      	str	r4, [r6, #32]
 800282c:	461c      	mov	r4, r3
 800282e:	e7d0      	b.n	80027d2 <rt_tsk_delete+0x2a>
 8002830:	68e2      	ldr	r2, [r4, #12]
 8002832:	8063      	strh	r3, [r4, #2]
 8002834:	60a3      	str	r3, [r4, #8]
 8002836:	60e3      	str	r3, [r4, #12]
 8002838:	4614      	mov	r4, r2
 800283a:	e7ca      	b.n	80027d2 <rt_tsk_delete+0x2a>
 800283c:	4b2d      	ldr	r3, [pc, #180]	; (80028f4 <rt_tsk_delete+0x14c>)
 800283e:	881b      	ldrh	r3, [r3, #0]
 8002840:	4298      	cmp	r0, r3
 8002842:	d84d      	bhi.n	80028e0 <rt_tsk_delete+0x138>
 8002844:	4b28      	ldr	r3, [pc, #160]	; (80028e8 <rt_tsk_delete+0x140>)
 8002846:	1e47      	subs	r7, r0, #1
 8002848:	4699      	mov	r9, r3
 800284a:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800284e:	2e00      	cmp	r6, #0
 8002850:	d046      	beq.n	80028e0 <rt_tsk_delete+0x138>
 8002852:	4630      	mov	r0, r6
 8002854:	f7fe ffd8 	bl	8001808 <rt_rmv_list>
 8002858:	4630      	mov	r0, r6
 800285a:	f7ff f803 	bl	8001864 <rt_rmv_dly>
 800285e:	f8df b098 	ldr.w	r11, [pc, #152]	; 80028f8 <rt_tsk_delete+0x150>
 8002862:	6a34      	ldr	r4, [r6, #32]
 8002864:	f04f 0a01 	mov.w	r10, #1
 8002868:	b9b4      	cbnz	r4, 8002898 <rt_tsk_delete+0xf0>
 800286a:	6b31      	ldr	r1, [r6, #48]	; 0x30
 800286c:	481f      	ldr	r0, [pc, #124]	; (80028ec <rt_tsk_delete+0x144>)
 800286e:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 8002872:	f7ff f9cf 	bl	8001c14 <rt_free_box>
 8002876:	4631      	mov	r1, r6
 8002878:	6334      	str	r4, [r6, #48]	; 0x30
 800287a:	481d      	ldr	r0, [pc, #116]	; (80028f0 <rt_tsk_delete+0x148>)
 800287c:	f7ff f9ca 	bl	8001c14 <rt_free_box>
 8002880:	481d      	ldr	r0, [pc, #116]	; (80028f8 <rt_tsk_delete+0x150>)
 8002882:	6829      	ldr	r1, [r5, #0]
 8002884:	6843      	ldr	r3, [r0, #4]
 8002886:	789a      	ldrb	r2, [r3, #2]
 8002888:	788b      	ldrb	r3, [r1, #2]
 800288a:	429a      	cmp	r2, r3
 800288c:	d9b4      	bls.n	80027f8 <rt_tsk_delete+0x50>
 800288e:	2301      	movs	r3, #1
 8002890:	704b      	strb	r3, [r1, #1]
 8002892:	f7fe ff29 	bl	80016e8 <rt_put_prio>
 8002896:	e7ad      	b.n	80027f4 <rt_tsk_delete+0x4c>
 8002898:	6863      	ldr	r3, [r4, #4]
 800289a:	b1db      	cbz	r3, 80028d4 <rt_tsk_delete+0x12c>
 800289c:	4620      	mov	r0, r4
 800289e:	f7fe ff3b 	bl	8001718 <rt_get_first>
 80028a2:	2100      	movs	r1, #0
 80028a4:	4680      	mov	r8, r0
 80028a6:	f7ff f8d7 	bl	8001a58 <rt_ret_val>
 80028aa:	4640      	mov	r0, r8
 80028ac:	f7fe ffda 	bl	8001864 <rt_rmv_dly>
 80028b0:	f888 a001 	strb.w	r10, [r8, #1]
 80028b4:	4641      	mov	r1, r8
 80028b6:	4658      	mov	r0, r11
 80028b8:	f7fe ff16 	bl	80016e8 <rt_put_prio>
 80028bc:	68e3      	ldr	r3, [r4, #12]
 80028be:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80028c2:	f8a4 a002 	strh.w	r10, [r4, #2]
 80028c6:	f8c4 8008 	str.w	r8, [r4, #8]
 80028ca:	60e2      	str	r2, [r4, #12]
 80028cc:	f8c8 4020 	str.w	r4, [r8, #32]
 80028d0:	461c      	mov	r4, r3
 80028d2:	e7c9      	b.n	8002868 <rt_tsk_delete+0xc0>
 80028d4:	68e2      	ldr	r2, [r4, #12]
 80028d6:	8063      	strh	r3, [r4, #2]
 80028d8:	60a3      	str	r3, [r4, #8]
 80028da:	60e3      	str	r3, [r4, #12]
 80028dc:	4614      	mov	r4, r2
 80028de:	e7c3      	b.n	8002868 <rt_tsk_delete+0xc0>
 80028e0:	24ff      	movs	r4, #255	; 0xff
 80028e2:	e789      	b.n	80027f8 <rt_tsk_delete+0x50>
 80028e4:	20002674 	.word	0x20002674
 80028e8:	200020c0 	.word	0x200020c0
 80028ec:	20001eb0 	.word	0x20001eb0
 80028f0:	20002488 	.word	0x20002488
 80028f4:	08006818 	.word	0x08006818
 80028f8:	20001e7c 	.word	0x20001e7c

080028fc <rt_sys_init>:
 80028fc:	b538      	push	{r3, r4, r5, lr}
 80028fe:	4b2c      	ldr	r3, [pc, #176]	; (80029b0 <rt_sys_init+0xb4>)
 8002900:	492c      	ldr	r1, [pc, #176]	; (80029b4 <rt_sys_init+0xb8>)
 8002902:	881a      	ldrh	r2, [r3, #0]
 8002904:	2300      	movs	r3, #0
 8002906:	4618      	mov	r0, r3
 8002908:	4293      	cmp	r3, r2
 800290a:	d34d      	bcc.n	80029a8 <rt_sys_init+0xac>
 800290c:	4b2a      	ldr	r3, [pc, #168]	; (80029b8 <rt_sys_init+0xbc>)
 800290e:	482b      	ldr	r0, [pc, #172]	; (80029bc <rt_sys_init+0xc0>)
 8002910:	8819      	ldrh	r1, [r3, #0]
 8002912:	4c2b      	ldr	r4, [pc, #172]	; (80029c0 <rt_sys_init+0xc4>)
 8002914:	2240      	movs	r2, #64	; 0x40
 8002916:	f7ff f94b 	bl	8001bb0 <_init_box>
 800291a:	4b2a      	ldr	r3, [pc, #168]	; (80029c4 <rt_sys_init+0xc8>)
 800291c:	482a      	ldr	r0, [pc, #168]	; (80029c8 <rt_sys_init+0xcc>)
 800291e:	881a      	ldrh	r2, [r3, #0]
 8002920:	4b2a      	ldr	r3, [pc, #168]	; (80029cc <rt_sys_init+0xd0>)
 8002922:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002926:	6819      	ldr	r1, [r3, #0]
 8002928:	f7ff f942 	bl	8001bb0 <_init_box>
 800292c:	4b28      	ldr	r3, [pc, #160]	; (80029d0 <rt_sys_init+0xd4>)
 800292e:	8819      	ldrh	r1, [r3, #0]
 8002930:	4b28      	ldr	r3, [pc, #160]	; (80029d4 <rt_sys_init+0xd8>)
 8002932:	2208      	movs	r2, #8
 8002934:	6818      	ldr	r0, [r3, #0]
 8002936:	f7ff f93b 	bl	8001bb0 <_init_box>
 800293a:	23ff      	movs	r3, #255	; 0xff
 800293c:	2500      	movs	r5, #0
 800293e:	70e3      	strb	r3, [r4, #3]
 8002940:	4821      	ldr	r0, [pc, #132]	; (80029c8 <rt_sys_init+0xcc>)
 8002942:	62a5      	str	r5, [r4, #40]	; 0x28
 8002944:	2301      	movs	r3, #1
 8002946:	7063      	strb	r3, [r4, #1]
 8002948:	7025      	strb	r5, [r4, #0]
 800294a:	70a5      	strb	r5, [r4, #2]
 800294c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002950:	6065      	str	r5, [r4, #4]
 8002952:	60a5      	str	r5, [r4, #8]
 8002954:	60e5      	str	r5, [r4, #12]
 8002956:	6125      	str	r5, [r4, #16]
 8002958:	6225      	str	r5, [r4, #32]
 800295a:	82a5      	strh	r5, [r4, #20]
 800295c:	82e5      	strh	r5, [r4, #22]
 800295e:	8325      	strh	r5, [r4, #24]
 8002960:	8365      	strh	r5, [r4, #26]
 8002962:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002966:	f7ff f948 	bl	8001bfa <rt_alloc_box>
 800296a:	491b      	ldr	r1, [pc, #108]	; (80029d8 <rt_sys_init+0xdc>)
 800296c:	6320      	str	r0, [r4, #48]	; 0x30
 800296e:	4620      	mov	r0, r4
 8002970:	f7ff f826 	bl	80019c0 <rt_init_stack>
 8002974:	4b19      	ldr	r3, [pc, #100]	; (80029dc <rt_sys_init+0xe0>)
 8002976:	2204      	movs	r2, #4
 8002978:	701a      	strb	r2, [r3, #0]
 800297a:	605d      	str	r5, [r3, #4]
 800297c:	4b18      	ldr	r3, [pc, #96]	; (80029e0 <rt_sys_init+0xe4>)
 800297e:	701a      	strb	r2, [r3, #0]
 8002980:	60dd      	str	r5, [r3, #12]
 8002982:	611d      	str	r5, [r3, #16]
 8002984:	829d      	strh	r5, [r3, #20]
 8002986:	4b17      	ldr	r3, [pc, #92]	; (80029e4 <rt_sys_init+0xe8>)
 8002988:	4620      	mov	r0, r4
 800298a:	601c      	str	r4, [r3, #0]
 800298c:	2302      	movs	r3, #2
 800298e:	7063      	strb	r3, [r4, #1]
 8002990:	f7ff fe16 	bl	80025c0 <rt_switch_req>
 8002994:	4a14      	ldr	r2, [pc, #80]	; (80029e8 <rt_sys_init+0xec>)
 8002996:	4b15      	ldr	r3, [pc, #84]	; (80029ec <rt_sys_init+0xf0>)
 8002998:	7812      	ldrb	r2, [r2, #0]
 800299a:	701d      	strb	r5, [r3, #0]
 800299c:	705d      	strb	r5, [r3, #1]
 800299e:	70da      	strb	r2, [r3, #3]
 80029a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80029a4:	f7ff ba7e 	b.w	8001ea4 <rt_init_robin>
 80029a8:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80029ac:	3301      	adds	r3, #1
 80029ae:	e7ab      	b.n	8002908 <rt_sys_init+0xc>
 80029b0:	08006818 	.word	0x08006818
 80029b4:	200020c0 	.word	0x200020c0
 80029b8:	080067e4 	.word	0x080067e4
 80029bc:	20002488 	.word	0x20002488
 80029c0:	2000267c 	.word	0x2000267c
 80029c4:	08006834 	.word	0x08006834
 80029c8:	20001eb0 	.word	0x20001eb0
 80029cc:	080067e0 	.word	0x080067e0
 80029d0:	080067e6 	.word	0x080067e6
 80029d4:	200009f4 	.word	0x200009f4
 80029d8:	08001921 	.word	0x08001921
 80029dc:	20001e7c 	.word	0x20001e7c
 80029e0:	20001e94 	.word	0x20001e94
 80029e4:	20002674 	.word	0x20002674
 80029e8:	08006815 	.word	0x08006815
 80029ec:	200020dc 	.word	0x200020dc

080029f0 <rt_sys_start>:
 80029f0:	b508      	push	{r3, lr}
 80029f2:	4b1e      	ldr	r3, [pc, #120]	; (8002a6c <rt_sys_start+0x7c>)
 80029f4:	681a      	ldr	r2, [r3, #0]
 80029f6:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80029fa:	601a      	str	r2, [r3, #0]
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	021b      	lsls	r3, r3, #8
 8002a00:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002a04:	43db      	mvns	r3, r3
 8002a06:	fab3 f383 	clz	r3, r3
 8002a0a:	4a19      	ldr	r2, [pc, #100]	; (8002a70 <rt_sys_start+0x80>)
 8002a0c:	4819      	ldr	r0, [pc, #100]	; (8002a74 <rt_sys_start+0x84>)
 8002a0e:	6812      	ldr	r2, [r2, #0]
 8002a10:	6801      	ldr	r1, [r0, #0]
 8002a12:	b2db      	uxtb	r3, r3
 8002a14:	f1c3 0308 	rsb	r3, r3, #8
 8002a18:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002a1c:	4293      	cmp	r3, r2
 8002a1e:	bf98      	it	ls
 8002a20:	1c53      	addls	r3, r2, #1
 8002a22:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002a26:	fa02 f303 	lsl.w	r3, r2, r3
 8002a2a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002a2e:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002a32:	4313      	orrs	r3, r2
 8002a34:	6003      	str	r3, [r0, #0]
 8002a36:	f7ff f871 	bl	8001b1c <os_tick_init>
 8002a3a:	4b0f      	ldr	r3, [pc, #60]	; (8002a78 <rt_sys_start+0x88>)
 8002a3c:	2800      	cmp	r0, #0
 8002a3e:	6018      	str	r0, [r3, #0]
 8002a40:	db12      	blt.n	8002a68 <rt_sys_start+0x78>
 8002a42:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002a46:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002a4a:	22ff      	movs	r2, #255	; 0xff
 8002a4c:	7002      	strb	r2, [r0, #0]
 8002a4e:	681a      	ldr	r2, [r3, #0]
 8002a50:	0953      	lsrs	r3, r2, #5
 8002a52:	009b      	lsls	r3, r3, #2
 8002a54:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002a58:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002a5c:	f002 021f 	and.w	r2, r2, #31
 8002a60:	2101      	movs	r1, #1
 8002a62:	fa01 f202 	lsl.w	r2, r1, r2
 8002a66:	601a      	str	r2, [r3, #0]
 8002a68:	bd08      	pop	{r3, pc}
 8002a6a:	bf00      	nop
 8002a6c:	e000ed20 	.word	0xe000ed20
 8002a70:	e000ed0c 	.word	0xe000ed0c
 8002a74:	e000ed1c 	.word	0xe000ed1c
 8002a78:	20002658 	.word	0x20002658

08002a7c <rt_mut_init>:
 8002a7c:	2303      	movs	r3, #3
 8002a7e:	7003      	strb	r3, [r0, #0]
 8002a80:	2300      	movs	r3, #0
 8002a82:	8043      	strh	r3, [r0, #2]
 8002a84:	6043      	str	r3, [r0, #4]
 8002a86:	6083      	str	r3, [r0, #8]
 8002a88:	60c3      	str	r3, [r0, #12]
 8002a8a:	4770      	bx	lr

08002a8c <rt_mut_delete>:
 8002a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a8e:	8843      	ldrh	r3, [r0, #2]
 8002a90:	4604      	mov	r4, r0
 8002a92:	b19b      	cbz	r3, 8002abc <rt_mut_delete+0x30>
 8002a94:	6880      	ldr	r0, [r0, #8]
 8002a96:	6a03      	ldr	r3, [r0, #32]
 8002a98:	429c      	cmp	r4, r3
 8002a9a:	d128      	bne.n	8002aee <rt_mut_delete+0x62>
 8002a9c:	68e3      	ldr	r3, [r4, #12]
 8002a9e:	6203      	str	r3, [r0, #32]
 8002aa0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002aa4:	6a02      	ldr	r2, [r0, #32]
 8002aa6:	bb52      	cbnz	r2, 8002afe <rt_mut_delete+0x72>
 8002aa8:	7882      	ldrb	r2, [r0, #2]
 8002aaa:	429a      	cmp	r2, r3
 8002aac:	d006      	beq.n	8002abc <rt_mut_delete+0x30>
 8002aae:	7083      	strb	r3, [r0, #2]
 8002ab0:	4b1f      	ldr	r3, [pc, #124]	; (8002b30 <rt_mut_delete+0xa4>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	4298      	cmp	r0, r3
 8002ab6:	d001      	beq.n	8002abc <rt_mut_delete+0x30>
 8002ab8:	f7fe febc 	bl	8001834 <rt_resort_prio>
 8002abc:	4f1d      	ldr	r7, [pc, #116]	; (8002b34 <rt_mut_delete+0xa8>)
 8002abe:	2601      	movs	r6, #1
 8002ac0:	6865      	ldr	r5, [r4, #4]
 8002ac2:	bb25      	cbnz	r5, 8002b0e <rt_mut_delete+0x82>
 8002ac4:	481b      	ldr	r0, [pc, #108]	; (8002b34 <rt_mut_delete+0xa8>)
 8002ac6:	6843      	ldr	r3, [r0, #4]
 8002ac8:	b16b      	cbz	r3, 8002ae6 <rt_mut_delete+0x5a>
 8002aca:	4e19      	ldr	r6, [pc, #100]	; (8002b30 <rt_mut_delete+0xa4>)
 8002acc:	789a      	ldrb	r2, [r3, #2]
 8002ace:	6831      	ldr	r1, [r6, #0]
 8002ad0:	788b      	ldrb	r3, [r1, #2]
 8002ad2:	429a      	cmp	r2, r3
 8002ad4:	d907      	bls.n	8002ae6 <rt_mut_delete+0x5a>
 8002ad6:	f7fe fe07 	bl	80016e8 <rt_put_prio>
 8002ada:	6833      	ldr	r3, [r6, #0]
 8002adc:	2201      	movs	r2, #1
 8002ade:	705a      	strb	r2, [r3, #1]
 8002ae0:	4628      	mov	r0, r5
 8002ae2:	f7ff fd87 	bl	80025f4 <rt_dispatch>
 8002ae6:	2000      	movs	r0, #0
 8002ae8:	7020      	strb	r0, [r4, #0]
 8002aea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002aec:	4613      	mov	r3, r2
 8002aee:	2b00      	cmp	r3, #0
 8002af0:	d0d6      	beq.n	8002aa0 <rt_mut_delete+0x14>
 8002af2:	68da      	ldr	r2, [r3, #12]
 8002af4:	4294      	cmp	r4, r2
 8002af6:	d1f9      	bne.n	8002aec <rt_mut_delete+0x60>
 8002af8:	68e2      	ldr	r2, [r4, #12]
 8002afa:	60da      	str	r2, [r3, #12]
 8002afc:	e7d0      	b.n	8002aa0 <rt_mut_delete+0x14>
 8002afe:	6851      	ldr	r1, [r2, #4]
 8002b00:	b119      	cbz	r1, 8002b0a <rt_mut_delete+0x7e>
 8002b02:	7889      	ldrb	r1, [r1, #2]
 8002b04:	428b      	cmp	r3, r1
 8002b06:	bf38      	it	cc
 8002b08:	460b      	movcc	r3, r1
 8002b0a:	68d2      	ldr	r2, [r2, #12]
 8002b0c:	e7cb      	b.n	8002aa6 <rt_mut_delete+0x1a>
 8002b0e:	4620      	mov	r0, r4
 8002b10:	f7fe fe02 	bl	8001718 <rt_get_first>
 8002b14:	2100      	movs	r1, #0
 8002b16:	4605      	mov	r5, r0
 8002b18:	f7fe ff9e 	bl	8001a58 <rt_ret_val>
 8002b1c:	4628      	mov	r0, r5
 8002b1e:	f7fe fea1 	bl	8001864 <rt_rmv_dly>
 8002b22:	706e      	strb	r6, [r5, #1]
 8002b24:	4629      	mov	r1, r5
 8002b26:	4638      	mov	r0, r7
 8002b28:	f7fe fdde 	bl	80016e8 <rt_put_prio>
 8002b2c:	e7c8      	b.n	8002ac0 <rt_mut_delete+0x34>
 8002b2e:	bf00      	nop
 8002b30:	20002674 	.word	0x20002674
 8002b34:	20001e7c 	.word	0x20001e7c

08002b38 <rt_mut_release>:
 8002b38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002b3c:	8843      	ldrh	r3, [r0, #2]
 8002b3e:	4605      	mov	r5, r0
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d063      	beq.n	8002c0c <rt_mut_release+0xd4>
 8002b44:	4f32      	ldr	r7, [pc, #200]	; (8002c10 <rt_mut_release+0xd8>)
 8002b46:	6881      	ldr	r1, [r0, #8]
 8002b48:	683a      	ldr	r2, [r7, #0]
 8002b4a:	4291      	cmp	r1, r2
 8002b4c:	d15e      	bne.n	8002c0c <rt_mut_release+0xd4>
 8002b4e:	3b01      	subs	r3, #1
 8002b50:	b29b      	uxth	r3, r3
 8002b52:	8043      	strh	r3, [r0, #2]
 8002b54:	b11b      	cbz	r3, 8002b5e <rt_mut_release+0x26>
 8002b56:	2400      	movs	r4, #0
 8002b58:	4620      	mov	r0, r4
 8002b5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002b5e:	6a0b      	ldr	r3, [r1, #32]
 8002b60:	4298      	cmp	r0, r3
 8002b62:	d129      	bne.n	8002bb8 <rt_mut_release+0x80>
 8002b64:	68c3      	ldr	r3, [r0, #12]
 8002b66:	620b      	str	r3, [r1, #32]
 8002b68:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8002b6c:	6a0c      	ldr	r4, [r1, #32]
 8002b6e:	bb5c      	cbnz	r4, 8002bc8 <rt_mut_release+0x90>
 8002b70:	708b      	strb	r3, [r1, #2]
 8002b72:	686a      	ldr	r2, [r5, #4]
 8002b74:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002c14 <rt_mut_release+0xdc>
 8002b78:	2a00      	cmp	r2, #0
 8002b7a:	d03b      	beq.n	8002bf4 <rt_mut_release+0xbc>
 8002b7c:	4628      	mov	r0, r5
 8002b7e:	f7fe fdcb 	bl	8001718 <rt_get_first>
 8002b82:	4621      	mov	r1, r4
 8002b84:	4606      	mov	r6, r0
 8002b86:	f7fe ff67 	bl	8001a58 <rt_ret_val>
 8002b8a:	4630      	mov	r0, r6
 8002b8c:	f7fe fe6a 	bl	8001864 <rt_rmv_dly>
 8002b90:	6a33      	ldr	r3, [r6, #32]
 8002b92:	60eb      	str	r3, [r5, #12]
 8002b94:	f04f 0901 	mov.w	r9, #1
 8002b98:	6839      	ldr	r1, [r7, #0]
 8002b9a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8002b9e:	f8a5 9002 	strh.w	r9, [r5, #2]
 8002ba2:	60ae      	str	r6, [r5, #8]
 8002ba4:	6235      	str	r5, [r6, #32]
 8002ba6:	788a      	ldrb	r2, [r1, #2]
 8002ba8:	789b      	ldrb	r3, [r3, #2]
 8002baa:	429a      	cmp	r2, r3
 8002bac:	d314      	bcc.n	8002bd8 <rt_mut_release+0xa0>
 8002bae:	4630      	mov	r0, r6
 8002bb0:	f7ff fd20 	bl	80025f4 <rt_dispatch>
 8002bb4:	e7d0      	b.n	8002b58 <rt_mut_release+0x20>
 8002bb6:	4613      	mov	r3, r2
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d0d5      	beq.n	8002b68 <rt_mut_release+0x30>
 8002bbc:	68da      	ldr	r2, [r3, #12]
 8002bbe:	4295      	cmp	r5, r2
 8002bc0:	d1f9      	bne.n	8002bb6 <rt_mut_release+0x7e>
 8002bc2:	68ea      	ldr	r2, [r5, #12]
 8002bc4:	60da      	str	r2, [r3, #12]
 8002bc6:	e7cf      	b.n	8002b68 <rt_mut_release+0x30>
 8002bc8:	6862      	ldr	r2, [r4, #4]
 8002bca:	b11a      	cbz	r2, 8002bd4 <rt_mut_release+0x9c>
 8002bcc:	7892      	ldrb	r2, [r2, #2]
 8002bce:	4293      	cmp	r3, r2
 8002bd0:	bf38      	it	cc
 8002bd2:	4613      	movcc	r3, r2
 8002bd4:	68e4      	ldr	r4, [r4, #12]
 8002bd6:	e7ca      	b.n	8002b6e <rt_mut_release+0x36>
 8002bd8:	4640      	mov	r0, r8
 8002bda:	f7fe fd85 	bl	80016e8 <rt_put_prio>
 8002bde:	4631      	mov	r1, r6
 8002be0:	4640      	mov	r0, r8
 8002be2:	f7fe fd81 	bl	80016e8 <rt_put_prio>
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	f883 9001 	strb.w	r9, [r3, #1]
 8002bec:	f886 9001 	strb.w	r9, [r6, #1]
 8002bf0:	4620      	mov	r0, r4
 8002bf2:	e7dd      	b.n	8002bb0 <rt_mut_release+0x78>
 8002bf4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8002bf8:	7892      	ldrb	r2, [r2, #2]
 8002bfa:	429a      	cmp	r2, r3
 8002bfc:	d9ab      	bls.n	8002b56 <rt_mut_release+0x1e>
 8002bfe:	4640      	mov	r0, r8
 8002c00:	f7fe fd72 	bl	80016e8 <rt_put_prio>
 8002c04:	683b      	ldr	r3, [r7, #0]
 8002c06:	2201      	movs	r2, #1
 8002c08:	705a      	strb	r2, [r3, #1]
 8002c0a:	e7f1      	b.n	8002bf0 <rt_mut_release+0xb8>
 8002c0c:	24ff      	movs	r4, #255	; 0xff
 8002c0e:	e7a3      	b.n	8002b58 <rt_mut_release+0x20>
 8002c10:	20002674 	.word	0x20002674
 8002c14:	20001e7c 	.word	0x20001e7c

08002c18 <rt_mut_wait>:
 8002c18:	8843      	ldrh	r3, [r0, #2]
 8002c1a:	b570      	push	{r4, r5, r6, lr}
 8002c1c:	4604      	mov	r4, r0
 8002c1e:	460e      	mov	r6, r1
 8002c20:	4d13      	ldr	r5, [pc, #76]	; (8002c70 <rt_mut_wait+0x58>)
 8002c22:	b943      	cbnz	r3, 8002c36 <rt_mut_wait+0x1e>
 8002c24:	682a      	ldr	r2, [r5, #0]
 8002c26:	6082      	str	r2, [r0, #8]
 8002c28:	6a11      	ldr	r1, [r2, #32]
 8002c2a:	60c1      	str	r1, [r0, #12]
 8002c2c:	6210      	str	r0, [r2, #32]
 8002c2e:	3301      	adds	r3, #1
 8002c30:	8063      	strh	r3, [r4, #2]
 8002c32:	2000      	movs	r0, #0
 8002c34:	bd70      	pop	{r4, r5, r6, pc}
 8002c36:	6880      	ldr	r0, [r0, #8]
 8002c38:	682a      	ldr	r2, [r5, #0]
 8002c3a:	4290      	cmp	r0, r2
 8002c3c:	d0f7      	beq.n	8002c2e <rt_mut_wait+0x16>
 8002c3e:	b181      	cbz	r1, 8002c62 <rt_mut_wait+0x4a>
 8002c40:	7893      	ldrb	r3, [r2, #2]
 8002c42:	7882      	ldrb	r2, [r0, #2]
 8002c44:	429a      	cmp	r2, r3
 8002c46:	d202      	bcs.n	8002c4e <rt_mut_wait+0x36>
 8002c48:	7083      	strb	r3, [r0, #2]
 8002c4a:	f7fe fdf3 	bl	8001834 <rt_resort_prio>
 8002c4e:	6862      	ldr	r2, [r4, #4]
 8002c50:	b14a      	cbz	r2, 8002c66 <rt_mut_wait+0x4e>
 8002c52:	6829      	ldr	r1, [r5, #0]
 8002c54:	4620      	mov	r0, r4
 8002c56:	f7fe fd47 	bl	80016e8 <rt_put_prio>
 8002c5a:	2109      	movs	r1, #9
 8002c5c:	4630      	mov	r0, r6
 8002c5e:	f7ff fced 	bl	800263c <rt_block>
 8002c62:	2001      	movs	r0, #1
 8002c64:	bd70      	pop	{r4, r5, r6, pc}
 8002c66:	682b      	ldr	r3, [r5, #0]
 8002c68:	6063      	str	r3, [r4, #4]
 8002c6a:	605a      	str	r2, [r3, #4]
 8002c6c:	609c      	str	r4, [r3, #8]
 8002c6e:	e7f4      	b.n	8002c5a <rt_mut_wait+0x42>
 8002c70:	20002674 	.word	0x20002674

08002c74 <rt_dly_wait>:
 8002c74:	2103      	movs	r1, #3
 8002c76:	f7ff bce1 	b.w	800263c <rt_block>
	...

08002c7c <rt_sem_psh>:
 8002c7c:	6842      	ldr	r2, [r0, #4]
 8002c7e:	b510      	push	{r4, lr}
 8002c80:	b17a      	cbz	r2, 8002ca2 <rt_sem_psh+0x26>
 8002c82:	f7fe fd49 	bl	8001718 <rt_get_first>
 8002c86:	4604      	mov	r4, r0
 8002c88:	f7fe fdec 	bl	8001864 <rt_rmv_dly>
 8002c8c:	2101      	movs	r1, #1
 8002c8e:	7061      	strb	r1, [r4, #1]
 8002c90:	4620      	mov	r0, r4
 8002c92:	f7fe fee1 	bl	8001a58 <rt_ret_val>
 8002c96:	4621      	mov	r1, r4
 8002c98:	4804      	ldr	r0, [pc, #16]	; (8002cac <rt_sem_psh+0x30>)
 8002c9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c9e:	f7fe bd23 	b.w	80016e8 <rt_put_prio>
 8002ca2:	8842      	ldrh	r2, [r0, #2]
 8002ca4:	3201      	adds	r2, #1
 8002ca6:	8042      	strh	r2, [r0, #2]
 8002ca8:	bd10      	pop	{r4, pc}
 8002caa:	bf00      	nop
 8002cac:	20001e7c 	.word	0x20001e7c

08002cb0 <timer_irq_handler>:
 8002cb0:	b570      	push	{r4, r5, r6, lr}
 8002cb2:	4c13      	ldr	r4, [pc, #76]	; (8002d00 <timer_irq_handler+0x50>)
 8002cb4:	6823      	ldr	r3, [r4, #0]
 8002cb6:	691a      	ldr	r2, [r3, #16]
 8002cb8:	0795      	lsls	r5, r2, #30
 8002cba:	d507      	bpl.n	8002ccc <timer_irq_handler+0x1c>
 8002cbc:	68da      	ldr	r2, [r3, #12]
 8002cbe:	0790      	lsls	r0, r2, #30
 8002cc0:	d504      	bpl.n	8002ccc <timer_irq_handler+0x1c>
 8002cc2:	f06f 0202 	mvn.w	r2, #2
 8002cc6:	611a      	str	r2, [r3, #16]
 8002cc8:	f7fe fc02 	bl	80014d0 <us_ticker_irq_handler>
 8002ccc:	6823      	ldr	r3, [r4, #0]
 8002cce:	691a      	ldr	r2, [r3, #16]
 8002cd0:	0751      	lsls	r1, r2, #29
 8002cd2:	d513      	bpl.n	8002cfc <timer_irq_handler+0x4c>
 8002cd4:	68da      	ldr	r2, [r3, #12]
 8002cd6:	0752      	lsls	r2, r2, #29
 8002cd8:	d510      	bpl.n	8002cfc <timer_irq_handler+0x4c>
 8002cda:	f06f 0204 	mvn.w	r2, #4
 8002cde:	4e09      	ldr	r6, [pc, #36]	; (8002d04 <timer_irq_handler+0x54>)
 8002ce0:	611a      	str	r2, [r3, #16]
 8002ce2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002ce4:	6833      	ldr	r3, [r6, #0]
 8002ce6:	1aeb      	subs	r3, r5, r3
 8002ce8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002cec:	d306      	bcc.n	8002cfc <timer_irq_handler+0x4c>
 8002cee:	f001 fd17 	bl	8004720 <HAL_IncTick>
 8002cf2:	6823      	ldr	r3, [r4, #0]
 8002cf4:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002cf8:	639a      	str	r2, [r3, #56]	; 0x38
 8002cfa:	6035      	str	r5, [r6, #0]
 8002cfc:	bd70      	pop	{r4, r5, r6, pc}
 8002cfe:	bf00      	nop
 8002d00:	200026c0 	.word	0x200026c0
 8002d04:	20001a68 	.word	0x20001a68

08002d08 <HAL_InitTick>:
 8002d08:	b530      	push	{r4, r5, lr}
 8002d0a:	b089      	sub	sp, #36	; 0x24
 8002d0c:	a901      	add	r1, sp, #4
 8002d0e:	a803      	add	r0, sp, #12
 8002d10:	f001 fbcc 	bl	80044ac <HAL_RCC_GetClockConfig>
 8002d14:	f001 fb9a 	bl	800444c <HAL_RCC_GetPCLK1Freq>
 8002d18:	4b24      	ldr	r3, [pc, #144]	; (8002dac <HAL_InitTick+0xa4>)
 8002d1a:	9001      	str	r0, [sp, #4]
 8002d1c:	69da      	ldr	r2, [r3, #28]
 8002d1e:	4c24      	ldr	r4, [pc, #144]	; (8002db0 <HAL_InitTick+0xa8>)
 8002d20:	f042 0201 	orr.w	r2, r2, #1
 8002d24:	61da      	str	r2, [r3, #28]
 8002d26:	69da      	ldr	r2, [r3, #28]
 8002d28:	f002 0201 	and.w	r2, r2, #1
 8002d2c:	9202      	str	r2, [sp, #8]
 8002d2e:	9a02      	ldr	r2, [sp, #8]
 8002d30:	691a      	ldr	r2, [r3, #16]
 8002d32:	f042 0201 	orr.w	r2, r2, #1
 8002d36:	611a      	str	r2, [r3, #16]
 8002d38:	691a      	ldr	r2, [r3, #16]
 8002d3a:	f022 0201 	bic.w	r2, r2, #1
 8002d3e:	611a      	str	r2, [r3, #16]
 8002d40:	9a06      	ldr	r2, [sp, #24]
 8002d42:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002d46:	6023      	str	r3, [r4, #0]
 8002d48:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d4c:	60e3      	str	r3, [r4, #12]
 8002d4e:	4b19      	ldr	r3, [pc, #100]	; (8002db4 <HAL_InitTick+0xac>)
 8002d50:	bb4a      	cbnz	r2, 8002da6 <HAL_InitTick+0x9e>
 8002d52:	fbb0 f0f3 	udiv	r0, r0, r3
 8002d56:	3801      	subs	r0, #1
 8002d58:	2500      	movs	r5, #0
 8002d5a:	6060      	str	r0, [r4, #4]
 8002d5c:	4814      	ldr	r0, [pc, #80]	; (8002db0 <HAL_InitTick+0xa8>)
 8002d5e:	6125      	str	r5, [r4, #16]
 8002d60:	60a5      	str	r5, [r4, #8]
 8002d62:	6165      	str	r5, [r4, #20]
 8002d64:	f001 fd56 	bl	8004814 <HAL_TIM_OC_Init>
 8002d68:	4913      	ldr	r1, [pc, #76]	; (8002db8 <HAL_InitTick+0xb0>)
 8002d6a:	201c      	movs	r0, #28
 8002d6c:	f000 ffd2 	bl	8003d14 <__NVIC_SetVector>
 8002d70:	4b12      	ldr	r3, [pc, #72]	; (8002dbc <HAL_InitTick+0xb4>)
 8002d72:	480f      	ldr	r0, [pc, #60]	; (8002db0 <HAL_InitTick+0xa8>)
 8002d74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002d78:	601a      	str	r2, [r3, #0]
 8002d7a:	4629      	mov	r1, r5
 8002d7c:	f001 fd9a 	bl	80048b4 <HAL_TIM_OC_Start>
 8002d80:	2104      	movs	r1, #4
 8002d82:	480b      	ldr	r0, [pc, #44]	; (8002db0 <HAL_InitTick+0xa8>)
 8002d84:	f001 fd96 	bl	80048b4 <HAL_TIM_OC_Start>
 8002d88:	6823      	ldr	r3, [r4, #0]
 8002d8a:	4a0d      	ldr	r2, [pc, #52]	; (8002dc0 <HAL_InitTick+0xb8>)
 8002d8c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002d8e:	6011      	str	r1, [r2, #0]
 8002d90:	6812      	ldr	r2, [r2, #0]
 8002d92:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8002d96:	639a      	str	r2, [r3, #56]	; 0x38
 8002d98:	68da      	ldr	r2, [r3, #12]
 8002d9a:	4628      	mov	r0, r5
 8002d9c:	f042 0204 	orr.w	r2, r2, #4
 8002da0:	60da      	str	r2, [r3, #12]
 8002da2:	b009      	add	sp, #36	; 0x24
 8002da4:	bd30      	pop	{r4, r5, pc}
 8002da6:	0040      	lsls	r0, r0, #1
 8002da8:	e7d3      	b.n	8002d52 <HAL_InitTick+0x4a>
 8002daa:	bf00      	nop
 8002dac:	40021000 	.word	0x40021000
 8002db0:	200026c0 	.word	0x200026c0
 8002db4:	000f4240 	.word	0x000f4240
 8002db8:	08002cb1 	.word	0x08002cb1
 8002dbc:	e000e100 	.word	0xe000e100
 8002dc0:	20001a68 	.word	0x20001a68

08002dc4 <HAL_SuspendTick>:
 8002dc4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002dc8:	4a03      	ldr	r2, [pc, #12]	; (8002dd8 <HAL_SuspendTick+0x14>)
 8002dca:	6013      	str	r3, [r2, #0]
 8002dcc:	68da      	ldr	r2, [r3, #12]
 8002dce:	f022 0204 	bic.w	r2, r2, #4
 8002dd2:	60da      	str	r2, [r3, #12]
 8002dd4:	4770      	bx	lr
 8002dd6:	bf00      	nop
 8002dd8:	200026c0 	.word	0x200026c0

08002ddc <HAL_ResumeTick>:
 8002ddc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002de0:	4a03      	ldr	r2, [pc, #12]	; (8002df0 <HAL_ResumeTick+0x14>)
 8002de2:	6013      	str	r3, [r2, #0]
 8002de4:	68da      	ldr	r2, [r3, #12]
 8002de6:	f042 0204 	orr.w	r2, r2, #4
 8002dea:	60da      	str	r2, [r3, #12]
 8002dec:	4770      	bx	lr
 8002dee:	bf00      	nop
 8002df0:	200026c0 	.word	0x200026c0

08002df4 <Set_GPIO_Clock>:
 8002df4:	b500      	push	{lr}
 8002df6:	b089      	sub	sp, #36	; 0x24
 8002df8:	2807      	cmp	r0, #7
 8002dfa:	d868      	bhi.n	8002ece <Set_GPIO_Clock+0xda>
 8002dfc:	e8df f000 	tbb	[pc, r0]
 8002e00:	2b1f1304 	.word	0x2b1f1304
 8002e04:	5b4f4337 	.word	0x5b4f4337
 8002e08:	4b33      	ldr	r3, [pc, #204]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002e0a:	695a      	ldr	r2, [r3, #20]
 8002e0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8002e10:	615a      	str	r2, [r3, #20]
 8002e12:	695b      	ldr	r3, [r3, #20]
 8002e14:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e18:	9300      	str	r3, [sp, #0]
 8002e1a:	9b00      	ldr	r3, [sp, #0]
 8002e1c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002e20:	b009      	add	sp, #36	; 0x24
 8002e22:	f85d fb04 	ldr.w	pc, [sp], #4
 8002e26:	4b2c      	ldr	r3, [pc, #176]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002e28:	482c      	ldr	r0, [pc, #176]	; (8002edc <Set_GPIO_Clock+0xe8>)
 8002e2a:	695a      	ldr	r2, [r3, #20]
 8002e2c:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8002e30:	615a      	str	r2, [r3, #20]
 8002e32:	695b      	ldr	r3, [r3, #20]
 8002e34:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002e38:	9301      	str	r3, [sp, #4]
 8002e3a:	9b01      	ldr	r3, [sp, #4]
 8002e3c:	e7f0      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002e3e:	4b26      	ldr	r3, [pc, #152]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002e40:	4827      	ldr	r0, [pc, #156]	; (8002ee0 <Set_GPIO_Clock+0xec>)
 8002e42:	695a      	ldr	r2, [r3, #20]
 8002e44:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8002e48:	615a      	str	r2, [r3, #20]
 8002e4a:	695b      	ldr	r3, [r3, #20]
 8002e4c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002e50:	9302      	str	r3, [sp, #8]
 8002e52:	9b02      	ldr	r3, [sp, #8]
 8002e54:	e7e4      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002e56:	4b20      	ldr	r3, [pc, #128]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002e58:	4822      	ldr	r0, [pc, #136]	; (8002ee4 <Set_GPIO_Clock+0xf0>)
 8002e5a:	695a      	ldr	r2, [r3, #20]
 8002e5c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8002e60:	615a      	str	r2, [r3, #20]
 8002e62:	695b      	ldr	r3, [r3, #20]
 8002e64:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002e68:	9303      	str	r3, [sp, #12]
 8002e6a:	9b03      	ldr	r3, [sp, #12]
 8002e6c:	e7d8      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002e6e:	4b1a      	ldr	r3, [pc, #104]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002e70:	481d      	ldr	r0, [pc, #116]	; (8002ee8 <Set_GPIO_Clock+0xf4>)
 8002e72:	695a      	ldr	r2, [r3, #20]
 8002e74:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 8002e78:	615a      	str	r2, [r3, #20]
 8002e7a:	695b      	ldr	r3, [r3, #20]
 8002e7c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002e80:	9304      	str	r3, [sp, #16]
 8002e82:	9b04      	ldr	r3, [sp, #16]
 8002e84:	e7cc      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002e86:	4b14      	ldr	r3, [pc, #80]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002e88:	4818      	ldr	r0, [pc, #96]	; (8002eec <Set_GPIO_Clock+0xf8>)
 8002e8a:	695a      	ldr	r2, [r3, #20]
 8002e8c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8002e90:	615a      	str	r2, [r3, #20]
 8002e92:	695b      	ldr	r3, [r3, #20]
 8002e94:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002e98:	9305      	str	r3, [sp, #20]
 8002e9a:	9b05      	ldr	r3, [sp, #20]
 8002e9c:	e7c0      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002e9e:	4b0e      	ldr	r3, [pc, #56]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002ea0:	4813      	ldr	r0, [pc, #76]	; (8002ef0 <Set_GPIO_Clock+0xfc>)
 8002ea2:	695a      	ldr	r2, [r3, #20]
 8002ea4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8002ea8:	615a      	str	r2, [r3, #20]
 8002eaa:	695b      	ldr	r3, [r3, #20]
 8002eac:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002eb0:	9306      	str	r3, [sp, #24]
 8002eb2:	9b06      	ldr	r3, [sp, #24]
 8002eb4:	e7b4      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002eb6:	4b08      	ldr	r3, [pc, #32]	; (8002ed8 <Set_GPIO_Clock+0xe4>)
 8002eb8:	480e      	ldr	r0, [pc, #56]	; (8002ef4 <Set_GPIO_Clock+0x100>)
 8002eba:	695a      	ldr	r2, [r3, #20]
 8002ebc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002ec0:	615a      	str	r2, [r3, #20]
 8002ec2:	695b      	ldr	r3, [r3, #20]
 8002ec4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002ec8:	9307      	str	r3, [sp, #28]
 8002eca:	9b07      	ldr	r3, [sp, #28]
 8002ecc:	e7a8      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002ece:	480a      	ldr	r0, [pc, #40]	; (8002ef8 <Set_GPIO_Clock+0x104>)
 8002ed0:	f7fe fbf0 	bl	80016b4 <error>
 8002ed4:	2000      	movs	r0, #0
 8002ed6:	e7a3      	b.n	8002e20 <Set_GPIO_Clock+0x2c>
 8002ed8:	40021000 	.word	0x40021000
 8002edc:	48000400 	.word	0x48000400
 8002ee0:	48000800 	.word	0x48000800
 8002ee4:	48000c00 	.word	0x48000c00
 8002ee8:	48001000 	.word	0x48001000
 8002eec:	48001400 	.word	0x48001400
 8002ef0:	48001800 	.word	0x48001800
 8002ef4:	48001c00 	.word	0x48001c00
 8002ef8:	08006854 	.word	0x08006854

08002efc <gpio_set>:
 8002efc:	b510      	push	{r4, lr}
 8002efe:	2100      	movs	r1, #0
 8002f00:	4604      	mov	r4, r0
 8002f02:	f004 040f 	and.w	r4, r4, #15
 8002f06:	f000 fb29 	bl	800355c <pin_function>
 8002f0a:	2001      	movs	r0, #1
 8002f0c:	40a0      	lsls	r0, r4
 8002f0e:	bd10      	pop	{r4, pc}

08002f10 <gpio_init>:
 8002f10:	b570      	push	{r4, r5, r6, lr}
 8002f12:	4604      	mov	r4, r0
 8002f14:	1c4b      	adds	r3, r1, #1
 8002f16:	460e      	mov	r6, r1
 8002f18:	8221      	strh	r1, [r4, #16]
 8002f1a:	d018      	beq.n	8002f4e <gpio_init+0x3e>
 8002f1c:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002f20:	f7ff ff68 	bl	8002df4 <Set_GPIO_Clock>
 8002f24:	4605      	mov	r5, r0
 8002f26:	4630      	mov	r0, r6
 8002f28:	f7ff ffe8 	bl	8002efc <gpio_set>
 8002f2c:	8a23      	ldrh	r3, [r4, #16]
 8002f2e:	4a08      	ldr	r2, [pc, #32]	; (8002f50 <gpio_init+0x40>)
 8002f30:	6165      	str	r5, [r4, #20]
 8002f32:	f003 030f 	and.w	r3, r3, #15
 8002f36:	6020      	str	r0, [r4, #0]
 8002f38:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f3c:	61a3      	str	r3, [r4, #24]
 8002f3e:	f105 0310 	add.w	r3, r5, #16
 8002f42:	6063      	str	r3, [r4, #4]
 8002f44:	f105 0318 	add.w	r3, r5, #24
 8002f48:	3528      	adds	r5, #40	; 0x28
 8002f4a:	60a3      	str	r3, [r4, #8]
 8002f4c:	60e5      	str	r5, [r4, #12]
 8002f4e:	bd70      	pop	{r4, r5, r6, pc}
 8002f50:	08006944 	.word	0x08006944

08002f54 <gpio_mode>:
 8002f54:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002f58:	f000 bb82 	b.w	8003660 <pin_mode>

08002f5c <gpio_dir>:
 8002f5c:	b510      	push	{r4, lr}
 8002f5e:	6983      	ldr	r3, [r0, #24]
 8002f60:	6944      	ldr	r4, [r0, #20]
 8002f62:	b971      	cbnz	r1, 8002f82 <gpio_dir+0x26>
 8002f64:	6821      	ldr	r1, [r4, #0]
 8002f66:	fa93 f2a3 	rbit	r2, r3
 8002f6a:	fab2 f282 	clz	r2, r2
 8002f6e:	2003      	movs	r0, #3
 8002f70:	0052      	lsls	r2, r2, #1
 8002f72:	fa00 f202 	lsl.w	r2, r0, r2
 8002f76:	ea21 0202 	bic.w	r2, r1, r2
 8002f7a:	fa93 f3a3 	rbit	r3, r3
 8002f7e:	6022      	str	r2, [r4, #0]
 8002f80:	bd10      	pop	{r4, pc}
 8002f82:	6822      	ldr	r2, [r4, #0]
 8002f84:	fa93 f1a3 	rbit	r1, r3
 8002f88:	fab1 f181 	clz	r1, r1
 8002f8c:	fa93 f3a3 	rbit	r3, r3
 8002f90:	2003      	movs	r0, #3
 8002f92:	0049      	lsls	r1, r1, #1
 8002f94:	fa00 f101 	lsl.w	r1, r0, r1
 8002f98:	fab3 f383 	clz	r3, r3
 8002f9c:	ea22 0201 	bic.w	r2, r2, r1
 8002fa0:	005b      	lsls	r3, r3, #1
 8002fa2:	2101      	movs	r1, #1
 8002fa4:	fa01 f303 	lsl.w	r3, r1, r3
 8002fa8:	4313      	orrs	r3, r2
 8002faa:	6023      	str	r3, [r4, #0]
 8002fac:	bd10      	pop	{r4, pc}

08002fae <hal_sleep>:
 8002fae:	b508      	push	{r3, lr}
 8002fb0:	f7ff ff08 	bl	8002dc4 <HAL_SuspendTick>
 8002fb4:	2101      	movs	r1, #1
 8002fb6:	2000      	movs	r0, #0
 8002fb8:	f000 fecc 	bl	8003d54 <HAL_PWR_EnterSLEEPMode>
 8002fbc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002fc0:	f7ff bf0c 	b.w	8002ddc <HAL_ResumeTick>

08002fc4 <CAN_SCE_IRQHandler>:
 8002fc4:	4b38      	ldr	r3, [pc, #224]	; (80030a8 <CAN_SCE_IRQHandler+0xe4>)
 8002fc6:	695a      	ldr	r2, [r3, #20]
 8002fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002fcc:	4c37      	ldr	r4, [pc, #220]	; (80030ac <CAN_SCE_IRQHandler+0xe8>)
 8002fce:	07d2      	lsls	r2, r2, #31
 8002fd0:	6023      	str	r3, [r4, #0]
 8002fd2:	d52a      	bpl.n	800302a <CAN_SCE_IRQHandler+0x66>
 8002fd4:	6898      	ldr	r0, [r3, #8]
 8002fd6:	4f36      	ldr	r7, [pc, #216]	; (80030b0 <CAN_SCE_IRQHandler+0xec>)
 8002fd8:	6899      	ldr	r1, [r3, #8]
 8002fda:	4e36      	ldr	r6, [pc, #216]	; (80030b4 <CAN_SCE_IRQHandler+0xf0>)
 8002fdc:	689a      	ldr	r2, [r3, #8]
 8002fde:	4d36      	ldr	r5, [pc, #216]	; (80030b8 <CAN_SCE_IRQHandler+0xf4>)
 8002fe0:	4038      	ands	r0, r7
 8002fe2:	42b8      	cmp	r0, r7
 8002fe4:	ea01 0106 	and.w	r1, r1, r6
 8002fe8:	bf04      	itt	eq
 8002fea:	2701      	moveq	r7, #1
 8002fec:	609f      	streq	r7, [r3, #8]
 8002fee:	42b1      	cmp	r1, r6
 8002ff0:	bf08      	it	eq
 8002ff2:	4b2d      	ldreq	r3, [pc, #180]	; (80030a8 <CAN_SCE_IRQHandler+0xe4>)
 8002ff4:	ea02 0205 	and.w	r2, r2, r5
 8002ff8:	bf04      	itt	eq
 8002ffa:	f44f 7680 	moveq.w	r6, #256	; 0x100
 8002ffe:	609e      	streq	r6, [r3, #8]
 8003000:	42aa      	cmp	r2, r5
 8003002:	bf02      	ittt	eq
 8003004:	4b28      	ldreq	r3, [pc, #160]	; (80030a8 <CAN_SCE_IRQHandler+0xe4>)
 8003006:	f44f 3580 	moveq.w	r5, #65536	; 0x10000
 800300a:	609d      	streq	r5, [r3, #8]
 800300c:	4b28      	ldr	r3, [pc, #160]	; (80030b0 <CAN_SCE_IRQHandler+0xec>)
 800300e:	4298      	cmp	r0, r3
 8003010:	d005      	beq.n	800301e <CAN_SCE_IRQHandler+0x5a>
 8003012:	4b28      	ldr	r3, [pc, #160]	; (80030b4 <CAN_SCE_IRQHandler+0xf0>)
 8003014:	4299      	cmp	r1, r3
 8003016:	d002      	beq.n	800301e <CAN_SCE_IRQHandler+0x5a>
 8003018:	4b27      	ldr	r3, [pc, #156]	; (80030b8 <CAN_SCE_IRQHandler+0xf4>)
 800301a:	429a      	cmp	r2, r3
 800301c:	d105      	bne.n	800302a <CAN_SCE_IRQHandler+0x66>
 800301e:	4b27      	ldr	r3, [pc, #156]	; (80030bc <CAN_SCE_IRQHandler+0xf8>)
 8003020:	4a27      	ldr	r2, [pc, #156]	; (80030c0 <CAN_SCE_IRQHandler+0xfc>)
 8003022:	681b      	ldr	r3, [r3, #0]
 8003024:	6810      	ldr	r0, [r2, #0]
 8003026:	2101      	movs	r1, #1
 8003028:	4798      	blx	r3
 800302a:	6823      	ldr	r3, [r4, #0]
 800302c:	68da      	ldr	r2, [r3, #12]
 800302e:	695b      	ldr	r3, [r3, #20]
 8003030:	0797      	lsls	r7, r2, #30
 8003032:	d007      	beq.n	8003044 <CAN_SCE_IRQHandler+0x80>
 8003034:	079e      	lsls	r6, r3, #30
 8003036:	d505      	bpl.n	8003044 <CAN_SCE_IRQHandler+0x80>
 8003038:	4b20      	ldr	r3, [pc, #128]	; (80030bc <CAN_SCE_IRQHandler+0xf8>)
 800303a:	4a21      	ldr	r2, [pc, #132]	; (80030c0 <CAN_SCE_IRQHandler+0xfc>)
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	6810      	ldr	r0, [r2, #0]
 8003040:	2100      	movs	r1, #0
 8003042:	4798      	blx	r3
 8003044:	6823      	ldr	r3, [r4, #0]
 8003046:	6999      	ldr	r1, [r3, #24]
 8003048:	695a      	ldr	r2, [r3, #20]
 800304a:	695b      	ldr	r3, [r3, #20]
 800304c:	078d      	lsls	r5, r1, #30
 800304e:	d509      	bpl.n	8003064 <CAN_SCE_IRQHandler+0xa0>
 8003050:	0590      	lsls	r0, r2, #22
 8003052:	d507      	bpl.n	8003064 <CAN_SCE_IRQHandler+0xa0>
 8003054:	0419      	lsls	r1, r3, #16
 8003056:	d505      	bpl.n	8003064 <CAN_SCE_IRQHandler+0xa0>
 8003058:	4b18      	ldr	r3, [pc, #96]	; (80030bc <CAN_SCE_IRQHandler+0xf8>)
 800305a:	4a19      	ldr	r2, [pc, #100]	; (80030c0 <CAN_SCE_IRQHandler+0xfc>)
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	6810      	ldr	r0, [r2, #0]
 8003060:	2105      	movs	r1, #5
 8003062:	4798      	blx	r3
 8003064:	6822      	ldr	r2, [r4, #0]
 8003066:	6996      	ldr	r6, [r2, #24]
 8003068:	6955      	ldr	r5, [r2, #20]
 800306a:	6952      	ldr	r2, [r2, #20]
 800306c:	f016 0604 	ands.w	r6, r6, #4
 8003070:	f405 6580 	and.w	r5, r5, #1024	; 0x400
 8003074:	d008      	beq.n	8003088 <CAN_SCE_IRQHandler+0xc4>
 8003076:	b13d      	cbz	r5, 8003088 <CAN_SCE_IRQHandler+0xc4>
 8003078:	0412      	lsls	r2, r2, #16
 800307a:	d505      	bpl.n	8003088 <CAN_SCE_IRQHandler+0xc4>
 800307c:	4b0f      	ldr	r3, [pc, #60]	; (80030bc <CAN_SCE_IRQHandler+0xf8>)
 800307e:	4a10      	ldr	r2, [pc, #64]	; (80030c0 <CAN_SCE_IRQHandler+0xfc>)
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	6810      	ldr	r0, [r2, #0]
 8003084:	2107      	movs	r1, #7
 8003086:	4798      	blx	r3
 8003088:	6823      	ldr	r3, [r4, #0]
 800308a:	695b      	ldr	r3, [r3, #20]
 800308c:	b156      	cbz	r6, 80030a4 <CAN_SCE_IRQHandler+0xe0>
 800308e:	b14d      	cbz	r5, 80030a4 <CAN_SCE_IRQHandler+0xe0>
 8003090:	041b      	lsls	r3, r3, #16
 8003092:	d507      	bpl.n	80030a4 <CAN_SCE_IRQHandler+0xe0>
 8003094:	4b09      	ldr	r3, [pc, #36]	; (80030bc <CAN_SCE_IRQHandler+0xf8>)
 8003096:	4a0a      	ldr	r2, [pc, #40]	; (80030c0 <CAN_SCE_IRQHandler+0xfc>)
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	6810      	ldr	r0, [r2, #0]
 800309c:	2102      	movs	r1, #2
 800309e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80030a2:	4718      	bx	r3
 80030a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80030a8:	40006400 	.word	0x40006400
 80030ac:	20001a6c 	.word	0x20001a6c
 80030b0:	04000003 	.word	0x04000003
 80030b4:	08000300 	.word	0x08000300
 80030b8:	10030000 	.word	0x10030000
 80030bc:	20001ab0 	.word	0x20001ab0
 80030c0:	20001aac 	.word	0x20001aac

080030c4 <USB_HP_CAN_TX_IRQHandler>:
 80030c4:	f7ff bf7e 	b.w	8002fc4 <CAN_SCE_IRQHandler>

080030c8 <USB_LP_CAN_RX0_IRQHandler>:
 80030c8:	f7ff bf7c 	b.w	8002fc4 <CAN_SCE_IRQHandler>

080030cc <can_irq_init>:
 80030cc:	4b03      	ldr	r3, [pc, #12]	; (80030dc <can_irq_init+0x10>)
 80030ce:	6019      	str	r1, [r3, #0]
 80030d0:	6841      	ldr	r1, [r0, #4]
 80030d2:	4b03      	ldr	r3, [pc, #12]	; (80030e0 <can_irq_init+0x14>)
 80030d4:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80030d8:	4770      	bx	lr
 80030da:	bf00      	nop
 80030dc:	20001ab0 	.word	0x20001ab0
 80030e0:	20001aac 	.word	0x20001aac

080030e4 <can_irq_free>:
 80030e4:	6802      	ldr	r2, [r0, #0]
 80030e6:	6953      	ldr	r3, [r2, #20]
 80030e8:	f423 4306 	bic.w	r3, r3, #34304	; 0x8600
 80030ec:	f023 0313 	bic.w	r3, r3, #19
 80030f0:	6153      	str	r3, [r2, #20]
 80030f2:	4b02      	ldr	r3, [pc, #8]	; (80030fc <can_irq_free+0x18>)
 80030f4:	2100      	movs	r1, #0
 80030f6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80030fa:	4770      	bx	lr
 80030fc:	20001aac 	.word	0x20001aac

08003100 <can_free>:
 8003100:	6802      	ldr	r2, [r0, #0]
 8003102:	4b09      	ldr	r3, [pc, #36]	; (8003128 <can_free+0x28>)
 8003104:	429a      	cmp	r2, r3
 8003106:	d10d      	bne.n	8003124 <can_free+0x24>
 8003108:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 800310c:	691a      	ldr	r2, [r3, #16]
 800310e:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8003112:	611a      	str	r2, [r3, #16]
 8003114:	691a      	ldr	r2, [r3, #16]
 8003116:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 800311a:	611a      	str	r2, [r3, #16]
 800311c:	69da      	ldr	r2, [r3, #28]
 800311e:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
 8003122:	61da      	str	r2, [r3, #28]
 8003124:	4770      	bx	lr
 8003126:	bf00      	nop
 8003128:	40006400 	.word	0x40006400

0800312c <can_frequency>:
 800312c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800312e:	460d      	mov	r5, r1
 8003130:	4604      	mov	r4, r0
 8003132:	f001 f98b 	bl	800444c <HAL_RCC_GetPCLK1Freq>
 8003136:	2318      	movs	r3, #24
 8003138:	fbb0 f0f5 	udiv	r0, r0, r5
 800313c:	2119      	movs	r1, #25
 800313e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003142:	0886      	lsrs	r6, r0, #2
 8003144:	b29b      	uxth	r3, r3
 8003146:	42b3      	cmp	r3, r6
 8003148:	d315      	bcc.n	8003176 <can_frequency+0x4a>
 800314a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800314e:	2b00      	cmp	r3, #0
 8003150:	6822      	ldr	r2, [r4, #0]
 8003152:	dd1c      	ble.n	800318e <can_frequency+0x62>
 8003154:	6811      	ldr	r1, [r2, #0]
 8003156:	f041 0101 	orr.w	r1, r1, #1
 800315a:	6011      	str	r1, [r2, #0]
 800315c:	6851      	ldr	r1, [r2, #4]
 800315e:	07c9      	lsls	r1, r1, #31
 8003160:	d5fc      	bpl.n	800315c <can_frequency+0x30>
 8003162:	61d3      	str	r3, [r2, #28]
 8003164:	6813      	ldr	r3, [r2, #0]
 8003166:	f023 0301 	bic.w	r3, r3, #1
 800316a:	6013      	str	r3, [r2, #0]
 800316c:	6853      	ldr	r3, [r2, #4]
 800316e:	07db      	lsls	r3, r3, #31
 8003170:	d4fc      	bmi.n	800316c <can_frequency+0x40>
 8003172:	2001      	movs	r0, #1
 8003174:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003176:	3301      	adds	r3, #1
 8003178:	b29b      	uxth	r3, r3
 800317a:	43df      	mvns	r7, r3
 800317c:	fb03 1201 	mla	r2, r3, r1, r1
 8003180:	2516      	movs	r5, #22
 8003182:	4290      	cmp	r0, r2
 8003184:	d005      	beq.n	8003192 <can_frequency+0x66>
 8003186:	3d01      	subs	r5, #1
 8003188:	443a      	add	r2, r7
 800318a:	d1fa      	bne.n	8003182 <can_frequency+0x56>
 800318c:	e7db      	b.n	8003146 <can_frequency+0x1a>
 800318e:	2000      	movs	r0, #0
 8003190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003192:	4908      	ldr	r1, [pc, #32]	; (80031b4 <can_frequency+0x88>)
 8003194:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 8003198:	f851 1035 	ldr.w	r1, [r1, r5, lsl #3]
 800319c:	6852      	ldr	r2, [r2, #4]
 800319e:	0409      	lsls	r1, r1, #16
 80031a0:	0512      	lsls	r2, r2, #20
 80031a2:	f402 02e0 	and.w	r2, r2, #7340032	; 0x700000
 80031a6:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 80031aa:	430a      	orrs	r2, r1
 80031ac:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80031b0:	4313      	orrs	r3, r2
 80031b2:	e7cc      	b.n	800314e <can_frequency+0x22>
 80031b4:	0800688c 	.word	0x0800688c

080031b8 <can_write>:
 80031b8:	b084      	sub	sp, #16
 80031ba:	b530      	push	{r4, r5, lr}
 80031bc:	ac04      	add	r4, sp, #16
 80031be:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 80031c2:	6804      	ldr	r4, [r0, #0]
 80031c4:	f89d 201e 	ldrb.w	r2, [sp, #30]
 80031c8:	68a3      	ldr	r3, [r4, #8]
 80031ca:	0158      	lsls	r0, r3, #5
 80031cc:	d43a      	bmi.n	8003244 <can_write+0x8c>
 80031ce:	68a3      	ldr	r3, [r4, #8]
 80031d0:	011b      	lsls	r3, r3, #4
 80031d2:	d439      	bmi.n	8003248 <can_write+0x90>
 80031d4:	68a0      	ldr	r0, [r4, #8]
 80031d6:	f010 5080 	ands.w	r0, r0, #268435456	; 0x10000000
 80031da:	d02f      	beq.n	800323c <can_write+0x84>
 80031dc:	2002      	movs	r0, #2
 80031de:	0100      	lsls	r0, r0, #4
 80031e0:	1823      	adds	r3, r4, r0
 80031e2:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80031e6:	f005 0501 	and.w	r5, r5, #1
 80031ea:	f8c3 5180 	str.w	r5, [r3, #384]	; 0x180
 80031ee:	f89d 501d 	ldrb.w	r5, [sp, #29]
 80031f2:	bb5d      	cbnz	r5, 800324c <can_write+0x94>
 80031f4:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 80031f8:	ea42 5141 	orr.w	r1, r2, r1, lsl #21
 80031fc:	4329      	orrs	r1, r5
 80031fe:	f8c3 1180 	str.w	r1, [r3, #384]	; 0x180
 8003202:	f8d3 1184 	ldr.w	r1, [r3, #388]	; 0x184
 8003206:	f021 010f 	bic.w	r1, r1, #15
 800320a:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 800320e:	f89d 101c 	ldrb.w	r1, [sp, #28]
 8003212:	f8d3 2184 	ldr.w	r2, [r3, #388]	; 0x184
 8003216:	f001 010f 	and.w	r1, r1, #15
 800321a:	4311      	orrs	r1, r2
 800321c:	1822      	adds	r2, r4, r0
 800321e:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 8003222:	9905      	ldr	r1, [sp, #20]
 8003224:	f8c2 1188 	str.w	r1, [r2, #392]	; 0x188
 8003228:	9906      	ldr	r1, [sp, #24]
 800322a:	f8c2 118c 	str.w	r1, [r2, #396]	; 0x18c
 800322e:	f8d3 2180 	ldr.w	r2, [r3, #384]	; 0x180
 8003232:	f042 0201 	orr.w	r2, r2, #1
 8003236:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
 800323a:	2001      	movs	r0, #1
 800323c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003240:	b004      	add	sp, #16
 8003242:	4770      	bx	lr
 8003244:	2000      	movs	r0, #0
 8003246:	e7ca      	b.n	80031de <can_write+0x26>
 8003248:	2001      	movs	r0, #1
 800324a:	e7c8      	b.n	80031de <can_write+0x26>
 800324c:	ea42 01c1 	orr.w	r1, r2, r1, lsl #3
 8003250:	f8d3 5180 	ldr.w	r5, [r3, #384]	; 0x180
 8003254:	f041 0104 	orr.w	r1, r1, #4
 8003258:	e7d0      	b.n	80031fc <can_write+0x44>

0800325a <can_read>:
 800325a:	b530      	push	{r4, r5, lr}
 800325c:	6804      	ldr	r4, [r0, #0]
 800325e:	68e0      	ldr	r0, [r4, #12]
 8003260:	f010 0003 	ands.w	r0, r0, #3
 8003264:	d03a      	beq.n	80032dc <can_read+0x82>
 8003266:	0113      	lsls	r3, r2, #4
 8003268:	18e0      	adds	r0, r4, r3
 800326a:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800326e:	f3c5 0580 	ubfx	r5, r5, #2, #1
 8003272:	734d      	strb	r5, [r1, #13]
 8003274:	bb9d      	cbnz	r5, 80032de <can_read+0x84>
 8003276:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 800327a:	0d6d      	lsrs	r5, r5, #21
 800327c:	600d      	str	r5, [r1, #0]
 800327e:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 8003282:	f8d0 01b4 	ldr.w	r0, [r0, #436]	; 0x1b4
 8003286:	4423      	add	r3, r4
 8003288:	f000 000f 	and.w	r0, r0, #15
 800328c:	7308      	strb	r0, [r1, #12]
 800328e:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003292:	7108      	strb	r0, [r1, #4]
 8003294:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 8003298:	0a00      	lsrs	r0, r0, #8
 800329a:	7148      	strb	r0, [r1, #5]
 800329c:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80032a0:	0c00      	lsrs	r0, r0, #16
 80032a2:	7188      	strb	r0, [r1, #6]
 80032a4:	f8d3 01b8 	ldr.w	r0, [r3, #440]	; 0x1b8
 80032a8:	0e00      	lsrs	r0, r0, #24
 80032aa:	71c8      	strb	r0, [r1, #7]
 80032ac:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80032b0:	7208      	strb	r0, [r1, #8]
 80032b2:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80032b6:	0a00      	lsrs	r0, r0, #8
 80032b8:	7248      	strb	r0, [r1, #9]
 80032ba:	f8d3 01bc 	ldr.w	r0, [r3, #444]	; 0x1bc
 80032be:	0c00      	lsrs	r0, r0, #16
 80032c0:	7288      	strb	r0, [r1, #10]
 80032c2:	f8d3 31bc 	ldr.w	r3, [r3, #444]	; 0x1bc
 80032c6:	f3c5 0540 	ubfx	r5, r5, #1, #1
 80032ca:	0e1b      	lsrs	r3, r3, #24
 80032cc:	738d      	strb	r5, [r1, #14]
 80032ce:	72cb      	strb	r3, [r1, #11]
 80032d0:	b94a      	cbnz	r2, 80032e6 <can_read+0x8c>
 80032d2:	68e3      	ldr	r3, [r4, #12]
 80032d4:	f043 0320 	orr.w	r3, r3, #32
 80032d8:	60e3      	str	r3, [r4, #12]
 80032da:	2001      	movs	r0, #1
 80032dc:	bd30      	pop	{r4, r5, pc}
 80032de:	f8d0 51b0 	ldr.w	r5, [r0, #432]	; 0x1b0
 80032e2:	08ed      	lsrs	r5, r5, #3
 80032e4:	e7ca      	b.n	800327c <can_read+0x22>
 80032e6:	6923      	ldr	r3, [r4, #16]
 80032e8:	f043 0320 	orr.w	r3, r3, #32
 80032ec:	6123      	str	r3, [r4, #16]
 80032ee:	e7f4      	b.n	80032da <can_read+0x80>

080032f0 <can_mode>:
 80032f0:	6803      	ldr	r3, [r0, #0]
 80032f2:	681a      	ldr	r2, [r3, #0]
 80032f4:	f042 0201 	orr.w	r2, r2, #1
 80032f8:	601a      	str	r2, [r3, #0]
 80032fa:	685a      	ldr	r2, [r3, #4]
 80032fc:	07d0      	lsls	r0, r2, #31
 80032fe:	d5fc      	bpl.n	80032fa <can_mode+0xa>
 8003300:	3901      	subs	r1, #1
 8003302:	2904      	cmp	r1, #4
 8003304:	d825      	bhi.n	8003352 <can_mode+0x62>
 8003306:	e8df f001 	tbb	[pc, r1]
 800330a:	1003      	.short	0x1003
 800330c:	1818      	.short	0x1818
 800330e:	20          	.byte	0x20
 800330f:	00          	.byte	0x00
 8003310:	69da      	ldr	r2, [r3, #28]
 8003312:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
 8003316:	61da      	str	r2, [r3, #28]
 8003318:	2001      	movs	r0, #1
 800331a:	681a      	ldr	r2, [r3, #0]
 800331c:	f022 0201 	bic.w	r2, r2, #1
 8003320:	601a      	str	r2, [r3, #0]
 8003322:	685a      	ldr	r2, [r3, #4]
 8003324:	07d2      	lsls	r2, r2, #31
 8003326:	d4fc      	bmi.n	8003322 <can_mode+0x32>
 8003328:	4770      	bx	lr
 800332a:	69da      	ldr	r2, [r3, #28]
 800332c:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8003330:	61da      	str	r2, [r3, #28]
 8003332:	69da      	ldr	r2, [r3, #28]
 8003334:	f022 4280 	bic.w	r2, r2, #1073741824	; 0x40000000
 8003338:	e7ed      	b.n	8003316 <can_mode+0x26>
 800333a:	69da      	ldr	r2, [r3, #28]
 800333c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003340:	61da      	str	r2, [r3, #28]
 8003342:	69da      	ldr	r2, [r3, #28]
 8003344:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8003348:	e7e5      	b.n	8003316 <can_mode+0x26>
 800334a:	69da      	ldr	r2, [r3, #28]
 800334c:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8003350:	e7e1      	b.n	8003316 <can_mode+0x26>
 8003352:	2000      	movs	r0, #0
 8003354:	e7e1      	b.n	800331a <can_mode+0x2a>
	...

08003358 <can_filter>:
 8003358:	b530      	push	{r4, r5, lr}
 800335a:	b08b      	sub	sp, #44	; 0x2c
 800335c:	2b01      	cmp	r3, #1
 800335e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8003360:	d82b      	bhi.n	80033ba <can_filter+0x62>
 8003362:	6805      	ldr	r5, [r0, #0]
 8003364:	4816      	ldr	r0, [pc, #88]	; (80033c0 <can_filter+0x68>)
 8003366:	9405      	str	r4, [sp, #20]
 8003368:	6005      	str	r5, [r0, #0]
 800336a:	2000      	movs	r0, #0
 800336c:	9006      	str	r0, [sp, #24]
 800336e:	2001      	movs	r0, #1
 8003370:	9007      	str	r0, [sp, #28]
 8003372:	b99b      	cbnz	r3, 800339c <can_filter+0x44>
 8003374:	0149      	lsls	r1, r1, #5
 8003376:	e88d 000a 	stmia.w	sp, {r1, r3}
 800337a:	0152      	lsls	r2, r2, #5
 800337c:	9202      	str	r2, [sp, #8]
 800337e:	9303      	str	r3, [sp, #12]
 8003380:	2300      	movs	r3, #0
 8003382:	9304      	str	r3, [sp, #16]
 8003384:	2301      	movs	r3, #1
 8003386:	9308      	str	r3, [sp, #32]
 8003388:	4669      	mov	r1, sp
 800338a:	f104 030e 	add.w	r3, r4, #14
 800338e:	480c      	ldr	r0, [pc, #48]	; (80033c0 <can_filter+0x68>)
 8003390:	9309      	str	r3, [sp, #36]	; 0x24
 8003392:	f001 f8bb 	bl	800450c <HAL_CAN_ConfigFilter>
 8003396:	4620      	mov	r0, r4
 8003398:	b00b      	add	sp, #44	; 0x2c
 800339a:	bd30      	pop	{r4, r5, pc}
 800339c:	0b4b      	lsrs	r3, r1, #13
 800339e:	9300      	str	r3, [sp, #0]
 80033a0:	00c9      	lsls	r1, r1, #3
 80033a2:	0b53      	lsrs	r3, r2, #13
 80033a4:	00d2      	lsls	r2, r2, #3
 80033a6:	b2c9      	uxtb	r1, r1
 80033a8:	b2d2      	uxtb	r2, r2
 80033aa:	f041 0104 	orr.w	r1, r1, #4
 80033ae:	f042 0204 	orr.w	r2, r2, #4
 80033b2:	9101      	str	r1, [sp, #4]
 80033b4:	9302      	str	r3, [sp, #8]
 80033b6:	9203      	str	r2, [sp, #12]
 80033b8:	e7e2      	b.n	8003380 <can_filter+0x28>
 80033ba:	2000      	movs	r0, #0
 80033bc:	e7ec      	b.n	8003398 <can_filter+0x40>
 80033be:	bf00      	nop
 80033c0:	20001a6c 	.word	0x20001a6c

080033c4 <can_init>:
 80033c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033c6:	460e      	mov	r6, r1
 80033c8:	b085      	sub	sp, #20
 80033ca:	4604      	mov	r4, r0
 80033cc:	492f      	ldr	r1, [pc, #188]	; (800348c <can_init+0xc8>)
 80033ce:	4630      	mov	r0, r6
 80033d0:	4615      	mov	r5, r2
 80033d2:	f7fe f92f 	bl	8001634 <pinmap_peripheral>
 80033d6:	492e      	ldr	r1, [pc, #184]	; (8003490 <can_init+0xcc>)
 80033d8:	4607      	mov	r7, r0
 80033da:	4628      	mov	r0, r5
 80033dc:	f7fe f92a 	bl	8001634 <pinmap_peripheral>
 80033e0:	4601      	mov	r1, r0
 80033e2:	4638      	mov	r0, r7
 80033e4:	f7fe f908 	bl	80015f8 <pinmap_merge>
 80033e8:	4b2a      	ldr	r3, [pc, #168]	; (8003494 <can_init+0xd0>)
 80033ea:	6020      	str	r0, [r4, #0]
 80033ec:	4298      	cmp	r0, r3
 80033ee:	d14b      	bne.n	8003488 <can_init+0xc4>
 80033f0:	f503 33d6 	add.w	r3, r3, #109568	; 0x1ac00
 80033f4:	4925      	ldr	r1, [pc, #148]	; (800348c <can_init+0xc8>)
 80033f6:	69da      	ldr	r2, [r3, #28]
 80033f8:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 80033fc:	61da      	str	r2, [r3, #28]
 80033fe:	69db      	ldr	r3, [r3, #28]
 8003400:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003404:	9303      	str	r3, [sp, #12]
 8003406:	9b03      	ldr	r3, [sp, #12]
 8003408:	2300      	movs	r3, #0
 800340a:	6063      	str	r3, [r4, #4]
 800340c:	4630      	mov	r0, r6
 800340e:	f7fe f8d5 	bl	80015bc <pinmap_pinout>
 8003412:	491f      	ldr	r1, [pc, #124]	; (8003490 <can_init+0xcc>)
 8003414:	4628      	mov	r0, r5
 8003416:	f7fe f8d1 	bl	80015bc <pinmap_pinout>
 800341a:	1c72      	adds	r2, r6, #1
 800341c:	d003      	beq.n	8003426 <can_init+0x62>
 800341e:	2101      	movs	r1, #1
 8003420:	4630      	mov	r0, r6
 8003422:	f000 f91d 	bl	8003660 <pin_mode>
 8003426:	1c6b      	adds	r3, r5, #1
 8003428:	d003      	beq.n	8003432 <can_init+0x6e>
 800342a:	2101      	movs	r1, #1
 800342c:	4628      	mov	r0, r5
 800342e:	f000 f917 	bl	8003660 <pin_mode>
 8003432:	4819      	ldr	r0, [pc, #100]	; (8003498 <can_init+0xd4>)
 8003434:	6823      	ldr	r3, [r4, #0]
 8003436:	6003      	str	r3, [r0, #0]
 8003438:	2300      	movs	r3, #0
 800343a:	6183      	str	r3, [r0, #24]
 800343c:	61c3      	str	r3, [r0, #28]
 800343e:	6203      	str	r3, [r0, #32]
 8003440:	6243      	str	r3, [r0, #36]	; 0x24
 8003442:	6283      	str	r3, [r0, #40]	; 0x28
 8003444:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003446:	6083      	str	r3, [r0, #8]
 8003448:	60c3      	str	r3, [r0, #12]
 800344a:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 800344e:	6103      	str	r3, [r0, #16]
 8003450:	f44f 03e0 	mov.w	r3, #7340032	; 0x700000
 8003454:	6143      	str	r3, [r0, #20]
 8003456:	2302      	movs	r3, #2
 8003458:	6043      	str	r3, [r0, #4]
 800345a:	f001 f8b8 	bl	80045ce <HAL_CAN_Init>
 800345e:	b110      	cbz	r0, 8003466 <can_init+0xa2>
 8003460:	480e      	ldr	r0, [pc, #56]	; (800349c <can_init+0xd8>)
 8003462:	f7fe f927 	bl	80016b4 <error>
 8003466:	490e      	ldr	r1, [pc, #56]	; (80034a0 <can_init+0xdc>)
 8003468:	4620      	mov	r0, r4
 800346a:	f7ff fe5f 	bl	800312c <can_frequency>
 800346e:	4a09      	ldr	r2, [pc, #36]	; (8003494 <can_init+0xd0>)
 8003470:	6823      	ldr	r3, [r4, #0]
 8003472:	4293      	cmp	r3, r2
 8003474:	bf14      	ite	ne
 8003476:	230e      	movne	r3, #14
 8003478:	2300      	moveq	r3, #0
 800347a:	9300      	str	r3, [sp, #0]
 800347c:	2300      	movs	r3, #0
 800347e:	461a      	mov	r2, r3
 8003480:	4619      	mov	r1, r3
 8003482:	4620      	mov	r0, r4
 8003484:	f7ff ff68 	bl	8003358 <can_filter>
 8003488:	b005      	add	sp, #20
 800348a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800348c:	0800699c 	.word	0x0800699c
 8003490:	080069c0 	.word	0x080069c0
 8003494:	40006400 	.word	0x40006400
 8003498:	20001a6c 	.word	0x20001a6c
 800349c:	08006875 	.word	0x08006875
 80034a0:	000186a0 	.word	0x000186a0

080034a4 <us_ticker_init>:
 80034a4:	4b05      	ldr	r3, [pc, #20]	; (80034bc <us_ticker_init+0x18>)
 80034a6:	6818      	ldr	r0, [r3, #0]
 80034a8:	b938      	cbnz	r0, 80034ba <us_ticker_init+0x16>
 80034aa:	2201      	movs	r2, #1
 80034ac:	601a      	str	r2, [r3, #0]
 80034ae:	4b04      	ldr	r3, [pc, #16]	; (80034c0 <us_ticker_init+0x1c>)
 80034b0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80034b4:	601a      	str	r2, [r3, #0]
 80034b6:	f7ff bc27 	b.w	8002d08 <HAL_InitTick>
 80034ba:	4770      	bx	lr
 80034bc:	20001ab4 	.word	0x20001ab4
 80034c0:	200026c0 	.word	0x200026c0

080034c4 <us_ticker_read>:
 80034c4:	b508      	push	{r3, lr}
 80034c6:	4b04      	ldr	r3, [pc, #16]	; (80034d8 <us_ticker_read+0x14>)
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	b90b      	cbnz	r3, 80034d0 <us_ticker_read+0xc>
 80034cc:	f7ff ffea 	bl	80034a4 <us_ticker_init>
 80034d0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80034d4:	6a58      	ldr	r0, [r3, #36]	; 0x24
 80034d6:	bd08      	pop	{r3, pc}
 80034d8:	20001ab4 	.word	0x20001ab4

080034dc <us_ticker_set_interrupt>:
 80034dc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80034e0:	4a03      	ldr	r2, [pc, #12]	; (80034f0 <us_ticker_set_interrupt+0x14>)
 80034e2:	6013      	str	r3, [r2, #0]
 80034e4:	6358      	str	r0, [r3, #52]	; 0x34
 80034e6:	68da      	ldr	r2, [r3, #12]
 80034e8:	f042 0202 	orr.w	r2, r2, #2
 80034ec:	60da      	str	r2, [r3, #12]
 80034ee:	4770      	bx	lr
 80034f0:	200026c0 	.word	0x200026c0

080034f4 <us_ticker_disable_interrupt>:
 80034f4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80034f8:	4a03      	ldr	r2, [pc, #12]	; (8003508 <us_ticker_disable_interrupt+0x14>)
 80034fa:	6013      	str	r3, [r2, #0]
 80034fc:	68da      	ldr	r2, [r3, #12]
 80034fe:	f022 0202 	bic.w	r2, r2, #2
 8003502:	60da      	str	r2, [r3, #12]
 8003504:	4770      	bx	lr
 8003506:	bf00      	nop
 8003508:	200026c0 	.word	0x200026c0

0800350c <us_ticker_clear_interrupt>:
 800350c:	4a03      	ldr	r2, [pc, #12]	; (800351c <us_ticker_clear_interrupt+0x10>)
 800350e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003512:	6013      	str	r3, [r2, #0]
 8003514:	f06f 0202 	mvn.w	r2, #2
 8003518:	611a      	str	r2, [r3, #16]
 800351a:	4770      	bx	lr
 800351c:	200026c0 	.word	0x200026c0

08003520 <LL_GPIO_SetPinPull>:
 8003520:	b530      	push	{r4, r5, lr}
 8003522:	68c3      	ldr	r3, [r0, #12]
 8003524:	fa91 f4a1 	rbit	r4, r1
 8003528:	fab4 f484 	clz	r4, r4
 800352c:	fa91 f1a1 	rbit	r1, r1
 8003530:	2503      	movs	r5, #3
 8003532:	fab1 f181 	clz	r1, r1
 8003536:	0064      	lsls	r4, r4, #1
 8003538:	fa05 f404 	lsl.w	r4, r5, r4
 800353c:	0049      	lsls	r1, r1, #1
 800353e:	ea23 0304 	bic.w	r3, r3, r4
 8003542:	fa02 f101 	lsl.w	r1, r2, r1
 8003546:	4319      	orrs	r1, r3
 8003548:	60c1      	str	r1, [r0, #12]
 800354a:	bd30      	pop	{r4, r5, pc}

0800354c <stm_pin_PullConfig>:
 800354c:	2a01      	cmp	r2, #1
 800354e:	d002      	beq.n	8003556 <stm_pin_PullConfig+0xa>
 8003550:	2a02      	cmp	r2, #2
 8003552:	bf18      	it	ne
 8003554:	2200      	movne	r2, #0
 8003556:	f7ff bfe3 	b.w	8003520 <LL_GPIO_SetPinPull>
	...

0800355c <pin_function>:
 800355c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003560:	4b3e      	ldr	r3, [pc, #248]	; (800365c <pin_function+0x100>)
 8003562:	f000 080f 	and.w	r8, r0, #15
 8003566:	f3c0 1003 	ubfx	r0, r0, #4, #4
 800356a:	460e      	mov	r6, r1
 800356c:	f001 0507 	and.w	r5, r1, #7
 8003570:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8003574:	f7ff fc3e 	bl	8002df4 <Set_GPIO_Clock>
 8003578:	6882      	ldr	r2, [r0, #8]
 800357a:	fa94 f3a4 	rbit	r3, r4
 800357e:	fab3 f383 	clz	r3, r3
 8003582:	fa94 f1a4 	rbit	r1, r4
 8003586:	2703      	movs	r7, #3
 8003588:	005b      	lsls	r3, r3, #1
 800358a:	fab1 f181 	clz	r1, r1
 800358e:	fa07 f303 	lsl.w	r3, r7, r3
 8003592:	ea22 0303 	bic.w	r3, r2, r3
 8003596:	004a      	lsls	r2, r1, #1
 8003598:	fa07 f202 	lsl.w	r2, r7, r2
 800359c:	4313      	orrs	r3, r2
 800359e:	2d02      	cmp	r5, #2
 80035a0:	6083      	str	r3, [r0, #8]
 80035a2:	d028      	beq.n	80035f6 <pin_function+0x9a>
 80035a4:	42bd      	cmp	r5, r7
 80035a6:	d041      	beq.n	800362c <pin_function+0xd0>
 80035a8:	2d01      	cmp	r5, #1
 80035aa:	d03f      	beq.n	800362c <pin_function+0xd0>
 80035ac:	2300      	movs	r3, #0
 80035ae:	6802      	ldr	r2, [r0, #0]
 80035b0:	fa94 f7a4 	rbit	r7, r4
 80035b4:	fab7 f787 	clz	r7, r7
 80035b8:	fa94 f1a4 	rbit	r1, r4
 80035bc:	f04f 0e03 	mov.w	lr, #3
 80035c0:	fab1 f181 	clz	r1, r1
 80035c4:	007f      	lsls	r7, r7, #1
 80035c6:	fa0e f707 	lsl.w	r7, lr, r7
 80035ca:	0049      	lsls	r1, r1, #1
 80035cc:	ea22 0207 	bic.w	r2, r2, r7
 80035d0:	408b      	lsls	r3, r1
 80035d2:	3d01      	subs	r5, #1
 80035d4:	4313      	orrs	r3, r2
 80035d6:	2d01      	cmp	r5, #1
 80035d8:	6003      	str	r3, [r0, #0]
 80035da:	d805      	bhi.n	80035e8 <pin_function+0x8c>
 80035dc:	6843      	ldr	r3, [r0, #4]
 80035de:	0732      	lsls	r2, r6, #28
 80035e0:	bf4c      	ite	mi
 80035e2:	4323      	orrmi	r3, r4
 80035e4:	43a3      	bicpl	r3, r4
 80035e6:	6043      	str	r3, [r0, #4]
 80035e8:	f3c6 1201 	ubfx	r2, r6, #4, #2
 80035ec:	4621      	mov	r1, r4
 80035ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80035f2:	f7ff bfab 	b.w	800354c <stm_pin_PullConfig>
 80035f6:	f1b8 0f07 	cmp.w	r8, #7
 80035fa:	f3c6 2703 	ubfx	r7, r6, #8, #4
 80035fe:	d917      	bls.n	8003630 <pin_function+0xd4>
 8003600:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003602:	0a23      	lsrs	r3, r4, #8
 8003604:	fa93 f1a3 	rbit	r1, r3
 8003608:	fab1 f181 	clz	r1, r1
 800360c:	fa93 f3a3 	rbit	r3, r3
 8003610:	f04f 0e0f 	mov.w	lr, #15
 8003614:	fab3 f383 	clz	r3, r3
 8003618:	0089      	lsls	r1, r1, #2
 800361a:	fa0e f101 	lsl.w	r1, lr, r1
 800361e:	009b      	lsls	r3, r3, #2
 8003620:	ea22 0201 	bic.w	r2, r2, r1
 8003624:	fa07 f303 	lsl.w	r3, r7, r3
 8003628:	4313      	orrs	r3, r2
 800362a:	6243      	str	r3, [r0, #36]	; 0x24
 800362c:	462b      	mov	r3, r5
 800362e:	e7be      	b.n	80035ae <pin_function+0x52>
 8003630:	6a02      	ldr	r2, [r0, #32]
 8003632:	fa94 f3a4 	rbit	r3, r4
 8003636:	fab3 f383 	clz	r3, r3
 800363a:	fa94 f1a4 	rbit	r1, r4
 800363e:	f04f 0e0f 	mov.w	lr, #15
 8003642:	fab1 f181 	clz	r1, r1
 8003646:	009b      	lsls	r3, r3, #2
 8003648:	fa0e f303 	lsl.w	r3, lr, r3
 800364c:	0089      	lsls	r1, r1, #2
 800364e:	ea22 0203 	bic.w	r2, r2, r3
 8003652:	fa07 f301 	lsl.w	r3, r7, r1
 8003656:	4313      	orrs	r3, r2
 8003658:	6203      	str	r3, [r0, #32]
 800365a:	e7e7      	b.n	800362c <pin_function+0xd0>
 800365c:	08006944 	.word	0x08006944

08003660 <pin_mode>:
 8003660:	f000 020f 	and.w	r2, r0, #15
 8003664:	4b1c      	ldr	r3, [pc, #112]	; (80036d8 <pin_mode+0x78>)
 8003666:	b570      	push	{r4, r5, r6, lr}
 8003668:	f3c0 1003 	ubfx	r0, r0, #4, #4
 800366c:	460d      	mov	r5, r1
 800366e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8003672:	f7ff fbbf 	bl	8002df4 <Set_GPIO_Clock>
 8003676:	6806      	ldr	r6, [r0, #0]
 8003678:	fa94 f1a4 	rbit	r1, r4
 800367c:	fab1 f381 	clz	r3, r1
 8003680:	fa94 f2a4 	rbit	r2, r4
 8003684:	0059      	lsls	r1, r3, #1
 8003686:	2303      	movs	r3, #3
 8003688:	fab2 f282 	clz	r2, r2
 800368c:	408b      	lsls	r3, r1
 800368e:	4033      	ands	r3, r6
 8003690:	0052      	lsls	r2, r2, #1
 8003692:	40d3      	lsrs	r3, r2
 8003694:	3b01      	subs	r3, #1
 8003696:	2b01      	cmp	r3, #1
 8003698:	d805      	bhi.n	80036a6 <pin_mode+0x46>
 800369a:	1eeb      	subs	r3, r5, #3
 800369c:	2b02      	cmp	r3, #2
 800369e:	6843      	ldr	r3, [r0, #4]
 80036a0:	d809      	bhi.n	80036b6 <pin_mode+0x56>
 80036a2:	4323      	orrs	r3, r4
 80036a4:	6043      	str	r3, [r0, #4]
 80036a6:	2d03      	cmp	r5, #3
 80036a8:	d108      	bne.n	80036bc <pin_mode+0x5c>
 80036aa:	2201      	movs	r2, #1
 80036ac:	4621      	mov	r1, r4
 80036ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80036b2:	f7ff bf4b 	b.w	800354c <stm_pin_PullConfig>
 80036b6:	ea23 0304 	bic.w	r3, r3, r4
 80036ba:	6043      	str	r3, [r0, #4]
 80036bc:	2d01      	cmp	r5, #1
 80036be:	d0f4      	beq.n	80036aa <pin_mode+0x4a>
 80036c0:	2d05      	cmp	r5, #5
 80036c2:	d001      	beq.n	80036c8 <pin_mode+0x68>
 80036c4:	2d02      	cmp	r5, #2
 80036c6:	d101      	bne.n	80036cc <pin_mode+0x6c>
 80036c8:	2202      	movs	r2, #2
 80036ca:	e7ef      	b.n	80036ac <pin_mode+0x4c>
 80036cc:	4621      	mov	r1, r4
 80036ce:	2200      	movs	r2, #0
 80036d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80036d4:	f7ff bf24 	b.w	8003520 <LL_GPIO_SetPinPull>
 80036d8:	08006944 	.word	0x08006944

080036dc <__NVIC_DisableIRQ>:
 80036dc:	0943      	lsrs	r3, r0, #5
 80036de:	2201      	movs	r2, #1
 80036e0:	f000 001f 	and.w	r0, r0, #31
 80036e4:	fa02 f000 	lsl.w	r0, r2, r0
 80036e8:	3320      	adds	r3, #32
 80036ea:	4a04      	ldr	r2, [pc, #16]	; (80036fc <__NVIC_DisableIRQ+0x20>)
 80036ec:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 80036f0:	f3bf 8f4f 	dsb	sy
 80036f4:	f3bf 8f6f 	isb	sy
 80036f8:	4770      	bx	lr
 80036fa:	bf00      	nop
 80036fc:	e000e100 	.word	0xe000e100

08003700 <init_uart>:
 8003700:	6843      	ldr	r3, [r0, #4]
 8003702:	4918      	ldr	r1, [pc, #96]	; (8003764 <init_uart+0x64>)
 8003704:	2270      	movs	r2, #112	; 0x70
 8003706:	435a      	muls	r2, r3
 8003708:	b510      	push	{r4, lr}
 800370a:	188b      	adds	r3, r1, r2
 800370c:	6804      	ldr	r4, [r0, #0]
 800370e:	508c      	str	r4, [r1, r2]
 8003710:	6882      	ldr	r2, [r0, #8]
 8003712:	605a      	str	r2, [r3, #4]
 8003714:	68c2      	ldr	r2, [r0, #12]
 8003716:	609a      	str	r2, [r3, #8]
 8003718:	6902      	ldr	r2, [r0, #16]
 800371a:	60da      	str	r2, [r3, #12]
 800371c:	6942      	ldr	r2, [r0, #20]
 800371e:	611a      	str	r2, [r3, #16]
 8003720:	6a02      	ldr	r2, [r0, #32]
 8003722:	619a      	str	r2, [r3, #24]
 8003724:	2200      	movs	r2, #0
 8003726:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800372a:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800372e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8003732:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8003736:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 800373a:	3201      	adds	r2, #1
 800373c:	d10a      	bne.n	8003754 <init_uart+0x54>
 800373e:	2208      	movs	r2, #8
 8003740:	615a      	str	r2, [r3, #20]
 8003742:	4618      	mov	r0, r3
 8003744:	f001 fa79 	bl	8004c3a <HAL_UART_Init>
 8003748:	b158      	cbz	r0, 8003762 <init_uart+0x62>
 800374a:	4807      	ldr	r0, [pc, #28]	; (8003768 <init_uart+0x68>)
 800374c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003750:	f7fd bfb0 	b.w	80016b4 <error>
 8003754:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003758:	3201      	adds	r2, #1
 800375a:	bf0c      	ite	eq
 800375c:	2204      	moveq	r2, #4
 800375e:	220c      	movne	r2, #12
 8003760:	e7ee      	b.n	8003740 <init_uart+0x40>
 8003762:	bd10      	pop	{r4, pc}
 8003764:	20001ad4 	.word	0x20001ad4
 8003768:	08006984 	.word	0x08006984

0800376c <uart_irq>:
 800376c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800376e:	4f1c      	ldr	r7, [pc, #112]	; (80037e0 <uart_irq+0x74>)
 8003770:	4605      	mov	r5, r0
 8003772:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 8003776:	2800      	cmp	r0, #0
 8003778:	d02f      	beq.n	80037da <uart_irq+0x6e>
 800377a:	2670      	movs	r6, #112	; 0x70
 800377c:	4c19      	ldr	r4, [pc, #100]	; (80037e4 <uart_irq+0x78>)
 800377e:	436e      	muls	r6, r5
 8003780:	59a3      	ldr	r3, [r4, r6]
 8003782:	69da      	ldr	r2, [r3, #28]
 8003784:	0652      	lsls	r2, r2, #25
 8003786:	d509      	bpl.n	800379c <uart_irq+0x30>
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	0659      	lsls	r1, r3, #25
 800378c:	d506      	bpl.n	800379c <uart_irq+0x30>
 800378e:	4b16      	ldr	r3, [pc, #88]	; (80037e8 <uart_irq+0x7c>)
 8003790:	2101      	movs	r1, #1
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	4798      	blx	r3
 8003796:	59a3      	ldr	r3, [r4, r6]
 8003798:	2240      	movs	r2, #64	; 0x40
 800379a:	621a      	str	r2, [r3, #32]
 800379c:	2670      	movs	r6, #112	; 0x70
 800379e:	436e      	muls	r6, r5
 80037a0:	59a3      	ldr	r3, [r4, r6]
 80037a2:	69da      	ldr	r2, [r3, #28]
 80037a4:	0692      	lsls	r2, r2, #26
 80037a6:	d50d      	bpl.n	80037c4 <uart_irq+0x58>
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	0698      	lsls	r0, r3, #26
 80037ac:	d50a      	bpl.n	80037c4 <uart_irq+0x58>
 80037ae:	4b0e      	ldr	r3, [pc, #56]	; (80037e8 <uart_irq+0x7c>)
 80037b0:	f857 0025 	ldr.w	r0, [r7, r5, lsl #2]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	2100      	movs	r1, #0
 80037b8:	4798      	blx	r3
 80037ba:	59a3      	ldr	r3, [r4, r6]
 80037bc:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80037be:	b29b      	uxth	r3, r3
 80037c0:	9301      	str	r3, [sp, #4]
 80037c2:	9b01      	ldr	r3, [sp, #4]
 80037c4:	2370      	movs	r3, #112	; 0x70
 80037c6:	435d      	muls	r5, r3
 80037c8:	5963      	ldr	r3, [r4, r5]
 80037ca:	69da      	ldr	r2, [r3, #28]
 80037cc:	0711      	lsls	r1, r2, #28
 80037ce:	d504      	bpl.n	80037da <uart_irq+0x6e>
 80037d0:	689a      	ldr	r2, [r3, #8]
 80037d2:	07d2      	lsls	r2, r2, #31
 80037d4:	bf44      	itt	mi
 80037d6:	2208      	movmi	r2, #8
 80037d8:	621a      	strmi	r2, [r3, #32]
 80037da:	b003      	add	sp, #12
 80037dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037de:	bf00      	nop
 80037e0:	20001abc 	.word	0x20001abc
 80037e4:	20001ad4 	.word	0x20001ad4
 80037e8:	20001ab8 	.word	0x20001ab8

080037ec <uart1_irq>:
 80037ec:	2000      	movs	r0, #0
 80037ee:	f7ff bfbd 	b.w	800376c <uart_irq>

080037f2 <uart2_irq>:
 80037f2:	2001      	movs	r0, #1
 80037f4:	f7ff bfba 	b.w	800376c <uart_irq>

080037f8 <uart3_irq>:
 80037f8:	2002      	movs	r0, #2
 80037fa:	f7ff bfb7 	b.w	800376c <uart_irq>

080037fe <uart4_irq>:
 80037fe:	2003      	movs	r0, #3
 8003800:	f7ff bfb4 	b.w	800376c <uart_irq>

08003804 <uart5_irq>:
 8003804:	2004      	movs	r0, #4
 8003806:	f7ff bfb1 	b.w	800376c <uart_irq>
	...

0800380c <serial_init>:
 800380c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800380e:	460e      	mov	r6, r1
 8003810:	b087      	sub	sp, #28
 8003812:	4604      	mov	r4, r0
 8003814:	496a      	ldr	r1, [pc, #424]	; (80039c0 <serial_init+0x1b4>)
 8003816:	4630      	mov	r0, r6
 8003818:	4615      	mov	r5, r2
 800381a:	f7fd ff0b 	bl	8001634 <pinmap_peripheral>
 800381e:	4969      	ldr	r1, [pc, #420]	; (80039c4 <serial_init+0x1b8>)
 8003820:	4607      	mov	r7, r0
 8003822:	4628      	mov	r0, r5
 8003824:	f7fd ff06 	bl	8001634 <pinmap_peripheral>
 8003828:	4601      	mov	r1, r0
 800382a:	4638      	mov	r0, r7
 800382c:	f7fd fee4 	bl	80015f8 <pinmap_merge>
 8003830:	4b65      	ldr	r3, [pc, #404]	; (80039c8 <serial_init+0x1bc>)
 8003832:	6020      	str	r0, [r4, #0]
 8003834:	4298      	cmp	r0, r3
 8003836:	d149      	bne.n	80038cc <serial_init+0xc0>
 8003838:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 800383c:	68da      	ldr	r2, [r3, #12]
 800383e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003842:	60da      	str	r2, [r3, #12]
 8003844:	68da      	ldr	r2, [r3, #12]
 8003846:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800384a:	60da      	str	r2, [r3, #12]
 800384c:	699a      	ldr	r2, [r3, #24]
 800384e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003852:	619a      	str	r2, [r3, #24]
 8003854:	699a      	ldr	r2, [r3, #24]
 8003856:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800385a:	9201      	str	r2, [sp, #4]
 800385c:	9a01      	ldr	r2, [sp, #4]
 800385e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003860:	f022 0203 	bic.w	r2, r2, #3
 8003864:	f042 0201 	orr.w	r2, r2, #1
 8003868:	631a      	str	r2, [r3, #48]	; 0x30
 800386a:	2300      	movs	r3, #0
 800386c:	6063      	str	r3, [r4, #4]
 800386e:	4954      	ldr	r1, [pc, #336]	; (80039c0 <serial_init+0x1b4>)
 8003870:	4630      	mov	r0, r6
 8003872:	f7fd fea3 	bl	80015bc <pinmap_pinout>
 8003876:	4953      	ldr	r1, [pc, #332]	; (80039c4 <serial_init+0x1b8>)
 8003878:	4628      	mov	r0, r5
 800387a:	f7fd fe9f 	bl	80015bc <pinmap_pinout>
 800387e:	1c72      	adds	r2, r6, #1
 8003880:	d003      	beq.n	800388a <serial_init+0x7e>
 8003882:	2101      	movs	r1, #1
 8003884:	4630      	mov	r0, r6
 8003886:	f7ff feeb 	bl	8003660 <pin_mode>
 800388a:	1c6b      	adds	r3, r5, #1
 800388c:	d003      	beq.n	8003896 <serial_init+0x8a>
 800388e:	2101      	movs	r1, #1
 8003890:	4628      	mov	r0, r5
 8003892:	f7ff fee5 	bl	8003660 <pin_mode>
 8003896:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800389a:	60a3      	str	r3, [r4, #8]
 800389c:	2300      	movs	r3, #0
 800389e:	60e3      	str	r3, [r4, #12]
 80038a0:	6123      	str	r3, [r4, #16]
 80038a2:	6163      	str	r3, [r4, #20]
 80038a4:	6223      	str	r3, [r4, #32]
 80038a6:	8326      	strh	r6, [r4, #24]
 80038a8:	8365      	strh	r5, [r4, #26]
 80038aa:	4620      	mov	r0, r4
 80038ac:	f7ff ff28 	bl	8003700 <init_uart>
 80038b0:	6822      	ldr	r2, [r4, #0]
 80038b2:	4b46      	ldr	r3, [pc, #280]	; (80039cc <serial_init+0x1c0>)
 80038b4:	429a      	cmp	r2, r3
 80038b6:	d107      	bne.n	80038c8 <serial_init+0xbc>
 80038b8:	4b45      	ldr	r3, [pc, #276]	; (80039d0 <serial_init+0x1c4>)
 80038ba:	4846      	ldr	r0, [pc, #280]	; (80039d4 <serial_init+0x1c8>)
 80038bc:	2201      	movs	r2, #1
 80038be:	601a      	str	r2, [r3, #0]
 80038c0:	4621      	mov	r1, r4
 80038c2:	224c      	movs	r2, #76	; 0x4c
 80038c4:	f002 f92c 	bl	8005b20 <memcpy>
 80038c8:	b007      	add	sp, #28
 80038ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80038cc:	4b3f      	ldr	r3, [pc, #252]	; (80039cc <serial_init+0x1c0>)
 80038ce:	4298      	cmp	r0, r3
 80038d0:	d11a      	bne.n	8003908 <serial_init+0xfc>
 80038d2:	f503 33e6 	add.w	r3, r3, #117760	; 0x1cc00
 80038d6:	691a      	ldr	r2, [r3, #16]
 80038d8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80038dc:	611a      	str	r2, [r3, #16]
 80038de:	691a      	ldr	r2, [r3, #16]
 80038e0:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 80038e4:	611a      	str	r2, [r3, #16]
 80038e6:	69da      	ldr	r2, [r3, #28]
 80038e8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80038ec:	61da      	str	r2, [r3, #28]
 80038ee:	69da      	ldr	r2, [r3, #28]
 80038f0:	f402 3200 	and.w	r2, r2, #131072	; 0x20000
 80038f4:	9202      	str	r2, [sp, #8]
 80038f6:	9a02      	ldr	r2, [sp, #8]
 80038f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80038fa:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 80038fe:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8003902:	631a      	str	r2, [r3, #48]	; 0x30
 8003904:	2301      	movs	r3, #1
 8003906:	e7b1      	b.n	800386c <serial_init+0x60>
 8003908:	4b33      	ldr	r3, [pc, #204]	; (80039d8 <serial_init+0x1cc>)
 800390a:	4298      	cmp	r0, r3
 800390c:	d11a      	bne.n	8003944 <serial_init+0x138>
 800390e:	f503 33e4 	add.w	r3, r3, #116736	; 0x1c800
 8003912:	691a      	ldr	r2, [r3, #16]
 8003914:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003918:	611a      	str	r2, [r3, #16]
 800391a:	691a      	ldr	r2, [r3, #16]
 800391c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003920:	611a      	str	r2, [r3, #16]
 8003922:	69da      	ldr	r2, [r3, #28]
 8003924:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8003928:	61da      	str	r2, [r3, #28]
 800392a:	69da      	ldr	r2, [r3, #28]
 800392c:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
 8003930:	9203      	str	r2, [sp, #12]
 8003932:	9a03      	ldr	r2, [sp, #12]
 8003934:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003936:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 800393a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800393e:	631a      	str	r2, [r3, #48]	; 0x30
 8003940:	2302      	movs	r3, #2
 8003942:	e793      	b.n	800386c <serial_init+0x60>
 8003944:	4b25      	ldr	r3, [pc, #148]	; (80039dc <serial_init+0x1d0>)
 8003946:	4298      	cmp	r0, r3
 8003948:	d11a      	bne.n	8003980 <serial_init+0x174>
 800394a:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 800394e:	691a      	ldr	r2, [r3, #16]
 8003950:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003954:	611a      	str	r2, [r3, #16]
 8003956:	691a      	ldr	r2, [r3, #16]
 8003958:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
 800395c:	611a      	str	r2, [r3, #16]
 800395e:	69da      	ldr	r2, [r3, #28]
 8003960:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8003964:	61da      	str	r2, [r3, #28]
 8003966:	69da      	ldr	r2, [r3, #28]
 8003968:	f402 2200 	and.w	r2, r2, #524288	; 0x80000
 800396c:	9204      	str	r2, [sp, #16]
 800396e:	9a04      	ldr	r2, [sp, #16]
 8003970:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003972:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8003976:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800397a:	631a      	str	r2, [r3, #48]	; 0x30
 800397c:	2303      	movs	r3, #3
 800397e:	e775      	b.n	800386c <serial_init+0x60>
 8003980:	4b17      	ldr	r3, [pc, #92]	; (80039e0 <serial_init+0x1d4>)
 8003982:	4298      	cmp	r0, r3
 8003984:	f47f af73 	bne.w	800386e <serial_init+0x62>
 8003988:	f503 33e0 	add.w	r3, r3, #114688	; 0x1c000
 800398c:	691a      	ldr	r2, [r3, #16]
 800398e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8003992:	611a      	str	r2, [r3, #16]
 8003994:	691a      	ldr	r2, [r3, #16]
 8003996:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 800399a:	611a      	str	r2, [r3, #16]
 800399c:	69da      	ldr	r2, [r3, #28]
 800399e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80039a2:	61da      	str	r2, [r3, #28]
 80039a4:	69da      	ldr	r2, [r3, #28]
 80039a6:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 80039aa:	9205      	str	r2, [sp, #20]
 80039ac:	9a05      	ldr	r2, [sp, #20]
 80039ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039b0:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80039b4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80039b8:	631a      	str	r2, [r3, #48]	; 0x30
 80039ba:	2304      	movs	r3, #4
 80039bc:	e756      	b.n	800386c <serial_init+0x60>
 80039be:	bf00      	nop
 80039c0:	08006a68 	.word	0x08006a68
 80039c4:	080069e4 	.word	0x080069e4
 80039c8:	40013800 	.word	0x40013800
 80039cc:	40004400 	.word	0x40004400
 80039d0:	20001ad0 	.word	0x20001ad0
 80039d4:	20002700 	.word	0x20002700
 80039d8:	40004800 	.word	0x40004800
 80039dc:	40004c00 	.word	0x40004c00
 80039e0:	40005000 	.word	0x40005000

080039e4 <serial_baud>:
 80039e4:	6081      	str	r1, [r0, #8]
 80039e6:	f7ff be8b 	b.w	8003700 <init_uart>
	...

080039ec <serial_irq_handler>:
 80039ec:	4b03      	ldr	r3, [pc, #12]	; (80039fc <serial_irq_handler+0x10>)
 80039ee:	6019      	str	r1, [r3, #0]
 80039f0:	6841      	ldr	r1, [r0, #4]
 80039f2:	4b03      	ldr	r3, [pc, #12]	; (8003a00 <serial_irq_handler+0x14>)
 80039f4:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80039f8:	4770      	bx	lr
 80039fa:	bf00      	nop
 80039fc:	20001ab8 	.word	0x20001ab8
 8003a00:	20001abc 	.word	0x20001abc

08003a04 <serial_irq_set>:
 8003a04:	b570      	push	{r4, r5, r6, lr}
 8003a06:	c821      	ldmia	r0, {r0, r5}
 8003a08:	4b28      	ldr	r3, [pc, #160]	; (8003aac <serial_irq_set+0xa8>)
 8003a0a:	4298      	cmp	r0, r3
 8003a0c:	460e      	mov	r6, r1
 8003a0e:	d119      	bne.n	8003a44 <serial_irq_set+0x40>
 8003a10:	4927      	ldr	r1, [pc, #156]	; (8003ab0 <serial_irq_set+0xac>)
 8003a12:	2425      	movs	r4, #37	; 0x25
 8003a14:	2370      	movs	r3, #112	; 0x70
 8003a16:	4827      	ldr	r0, [pc, #156]	; (8003ab4 <serial_irq_set+0xb0>)
 8003a18:	436b      	muls	r3, r5
 8003a1a:	2a00      	cmp	r2, #0
 8003a1c:	d02f      	beq.n	8003a7e <serial_irq_set+0x7a>
 8003a1e:	58c2      	ldr	r2, [r0, r3]
 8003a20:	6813      	ldr	r3, [r2, #0]
 8003a22:	bb4e      	cbnz	r6, 8003a78 <serial_irq_set+0x74>
 8003a24:	f043 0320 	orr.w	r3, r3, #32
 8003a28:	6013      	str	r3, [r2, #0]
 8003a2a:	4620      	mov	r0, r4
 8003a2c:	f000 f972 	bl	8003d14 <__NVIC_SetVector>
 8003a30:	0962      	lsrs	r2, r4, #5
 8003a32:	2301      	movs	r3, #1
 8003a34:	f004 0417 	and.w	r4, r4, #23
 8003a38:	fa03 f404 	lsl.w	r4, r3, r4
 8003a3c:	4b1e      	ldr	r3, [pc, #120]	; (8003ab8 <serial_irq_set+0xb4>)
 8003a3e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003a42:	bd70      	pop	{r4, r5, r6, pc}
 8003a44:	4b1d      	ldr	r3, [pc, #116]	; (8003abc <serial_irq_set+0xb8>)
 8003a46:	4298      	cmp	r0, r3
 8003a48:	d102      	bne.n	8003a50 <serial_irq_set+0x4c>
 8003a4a:	491d      	ldr	r1, [pc, #116]	; (8003ac0 <serial_irq_set+0xbc>)
 8003a4c:	2426      	movs	r4, #38	; 0x26
 8003a4e:	e7e1      	b.n	8003a14 <serial_irq_set+0x10>
 8003a50:	4b1c      	ldr	r3, [pc, #112]	; (8003ac4 <serial_irq_set+0xc0>)
 8003a52:	4298      	cmp	r0, r3
 8003a54:	d102      	bne.n	8003a5c <serial_irq_set+0x58>
 8003a56:	491c      	ldr	r1, [pc, #112]	; (8003ac8 <serial_irq_set+0xc4>)
 8003a58:	2427      	movs	r4, #39	; 0x27
 8003a5a:	e7db      	b.n	8003a14 <serial_irq_set+0x10>
 8003a5c:	4b1b      	ldr	r3, [pc, #108]	; (8003acc <serial_irq_set+0xc8>)
 8003a5e:	4298      	cmp	r0, r3
 8003a60:	d102      	bne.n	8003a68 <serial_irq_set+0x64>
 8003a62:	491b      	ldr	r1, [pc, #108]	; (8003ad0 <serial_irq_set+0xcc>)
 8003a64:	2434      	movs	r4, #52	; 0x34
 8003a66:	e7d5      	b.n	8003a14 <serial_irq_set+0x10>
 8003a68:	4b1a      	ldr	r3, [pc, #104]	; (8003ad4 <serial_irq_set+0xd0>)
 8003a6a:	4298      	cmp	r0, r3
 8003a6c:	bf13      	iteet	ne
 8003a6e:	2100      	movne	r1, #0
 8003a70:	4919      	ldreq	r1, [pc, #100]	; (8003ad8 <serial_irq_set+0xd4>)
 8003a72:	2435      	moveq	r4, #53	; 0x35
 8003a74:	460c      	movne	r4, r1
 8003a76:	e7cd      	b.n	8003a14 <serial_irq_set+0x10>
 8003a78:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003a7c:	e7d4      	b.n	8003a28 <serial_irq_set+0x24>
 8003a7e:	58c3      	ldr	r3, [r0, r3]
 8003a80:	681a      	ldr	r2, [r3, #0]
 8003a82:	b936      	cbnz	r6, 8003a92 <serial_irq_set+0x8e>
 8003a84:	f022 0220 	bic.w	r2, r2, #32
 8003a88:	601a      	str	r2, [r3, #0]
 8003a8a:	681b      	ldr	r3, [r3, #0]
 8003a8c:	061a      	lsls	r2, r3, #24
 8003a8e:	d506      	bpl.n	8003a9e <serial_irq_set+0x9a>
 8003a90:	bd70      	pop	{r4, r5, r6, pc}
 8003a92:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003a96:	601a      	str	r2, [r3, #0]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	069b      	lsls	r3, r3, #26
 8003a9c:	d404      	bmi.n	8003aa8 <serial_irq_set+0xa4>
 8003a9e:	4620      	mov	r0, r4
 8003aa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8003aa4:	f7ff be1a 	b.w	80036dc <__NVIC_DisableIRQ>
 8003aa8:	bd70      	pop	{r4, r5, r6, pc}
 8003aaa:	bf00      	nop
 8003aac:	40013800 	.word	0x40013800
 8003ab0:	080037ed 	.word	0x080037ed
 8003ab4:	20001ad4 	.word	0x20001ad4
 8003ab8:	e000e100 	.word	0xe000e100
 8003abc:	40004400 	.word	0x40004400
 8003ac0:	080037f3 	.word	0x080037f3
 8003ac4:	40004800 	.word	0x40004800
 8003ac8:	080037f9 	.word	0x080037f9
 8003acc:	40004c00 	.word	0x40004c00
 8003ad0:	080037ff 	.word	0x080037ff
 8003ad4:	40005000 	.word	0x40005000
 8003ad8:	08003805 	.word	0x08003805

08003adc <serial_readable>:
 8003adc:	6842      	ldr	r2, [r0, #4]
 8003ade:	2370      	movs	r3, #112	; 0x70
 8003ae0:	4353      	muls	r3, r2
 8003ae2:	4a03      	ldr	r2, [pc, #12]	; (8003af0 <serial_readable+0x14>)
 8003ae4:	58d3      	ldr	r3, [r2, r3]
 8003ae6:	69d8      	ldr	r0, [r3, #28]
 8003ae8:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003aec:	4770      	bx	lr
 8003aee:	bf00      	nop
 8003af0:	20001ad4 	.word	0x20001ad4

08003af4 <serial_getc>:
 8003af4:	b510      	push	{r4, lr}
 8003af6:	6844      	ldr	r4, [r0, #4]
 8003af8:	4601      	mov	r1, r0
 8003afa:	4608      	mov	r0, r1
 8003afc:	f7ff ffee 	bl	8003adc <serial_readable>
 8003b00:	2800      	cmp	r0, #0
 8003b02:	d0fa      	beq.n	8003afa <serial_getc+0x6>
 8003b04:	2370      	movs	r3, #112	; 0x70
 8003b06:	4a05      	ldr	r2, [pc, #20]	; (8003b1c <serial_getc+0x28>)
 8003b08:	68c9      	ldr	r1, [r1, #12]
 8003b0a:	4363      	muls	r3, r4
 8003b0c:	58d3      	ldr	r3, [r2, r3]
 8003b0e:	8c98      	ldrh	r0, [r3, #36]	; 0x24
 8003b10:	b909      	cbnz	r1, 8003b16 <serial_getc+0x22>
 8003b12:	b2c0      	uxtb	r0, r0
 8003b14:	bd10      	pop	{r4, pc}
 8003b16:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003b1a:	bd10      	pop	{r4, pc}
 8003b1c:	20001ad4 	.word	0x20001ad4

08003b20 <serial_writable>:
 8003b20:	6842      	ldr	r2, [r0, #4]
 8003b22:	2370      	movs	r3, #112	; 0x70
 8003b24:	4353      	muls	r3, r2
 8003b26:	4a03      	ldr	r2, [pc, #12]	; (8003b34 <serial_writable+0x14>)
 8003b28:	58d3      	ldr	r3, [r2, r3]
 8003b2a:	69d8      	ldr	r0, [r3, #28]
 8003b2c:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 8003b30:	4770      	bx	lr
 8003b32:	bf00      	nop
 8003b34:	20001ad4 	.word	0x20001ad4

08003b38 <serial_putc>:
 8003b38:	b538      	push	{r3, r4, r5, lr}
 8003b3a:	6845      	ldr	r5, [r0, #4]
 8003b3c:	4604      	mov	r4, r0
 8003b3e:	4620      	mov	r0, r4
 8003b40:	f7ff ffee 	bl	8003b20 <serial_writable>
 8003b44:	2800      	cmp	r0, #0
 8003b46:	d0fa      	beq.n	8003b3e <serial_putc+0x6>
 8003b48:	2370      	movs	r3, #112	; 0x70
 8003b4a:	4a05      	ldr	r2, [pc, #20]	; (8003b60 <serial_putc+0x28>)
 8003b4c:	68e0      	ldr	r0, [r4, #12]
 8003b4e:	436b      	muls	r3, r5
 8003b50:	58d3      	ldr	r3, [r2, r3]
 8003b52:	b910      	cbnz	r0, 8003b5a <serial_putc+0x22>
 8003b54:	b2c9      	uxtb	r1, r1
 8003b56:	8519      	strh	r1, [r3, #40]	; 0x28
 8003b58:	bd38      	pop	{r3, r4, r5, pc}
 8003b5a:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8003b5e:	e7fa      	b.n	8003b56 <serial_putc+0x1e>
 8003b60:	20001ad4 	.word	0x20001ad4

08003b64 <mbed_sdk_init>:
 8003b64:	b508      	push	{r3, lr}
 8003b66:	f000 f819 	bl	8003b9c <SystemCoreClockUpdate>
 8003b6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003b6e:	f000 bdc5 	b.w	80046fc <HAL_Init>

08003b72 <SetSysClock_PLL_HSE.part.0>:
 8003b72:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003b74:	230f      	movs	r3, #15
 8003b76:	9301      	str	r3, [sp, #4]
 8003b78:	2102      	movs	r1, #2
 8003b7a:	2300      	movs	r3, #0
 8003b7c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8003b80:	a801      	add	r0, sp, #4
 8003b82:	9102      	str	r1, [sp, #8]
 8003b84:	9303      	str	r3, [sp, #12]
 8003b86:	9204      	str	r2, [sp, #16]
 8003b88:	9305      	str	r3, [sp, #20]
 8003b8a:	f000 fb9d 	bl	80042c8 <HAL_RCC_ClockConfig>
 8003b8e:	fab0 f080 	clz	r0, r0
 8003b92:	0940      	lsrs	r0, r0, #5
 8003b94:	b007      	add	sp, #28
 8003b96:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08003b9c <SystemCoreClockUpdate>:
 8003b9c:	4b10      	ldr	r3, [pc, #64]	; (8003be0 <SystemCoreClockUpdate+0x44>)
 8003b9e:	4911      	ldr	r1, [pc, #68]	; (8003be4 <SystemCoreClockUpdate+0x48>)
 8003ba0:	6858      	ldr	r0, [r3, #4]
 8003ba2:	4a11      	ldr	r2, [pc, #68]	; (8003be8 <SystemCoreClockUpdate+0x4c>)
 8003ba4:	f000 000c 	and.w	r0, r0, #12
 8003ba8:	2804      	cmp	r0, #4
 8003baa:	b510      	push	{r4, lr}
 8003bac:	d001      	beq.n	8003bb2 <SystemCoreClockUpdate+0x16>
 8003bae:	2808      	cmp	r0, #8
 8003bb0:	d009      	beq.n	8003bc6 <SystemCoreClockUpdate+0x2a>
 8003bb2:	600a      	str	r2, [r1, #0]
 8003bb4:	685b      	ldr	r3, [r3, #4]
 8003bb6:	4a0d      	ldr	r2, [pc, #52]	; (8003bec <SystemCoreClockUpdate+0x50>)
 8003bb8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8003bbc:	5cd2      	ldrb	r2, [r2, r3]
 8003bbe:	680b      	ldr	r3, [r1, #0]
 8003bc0:	40d3      	lsrs	r3, r2
 8003bc2:	600b      	str	r3, [r1, #0]
 8003bc4:	bd10      	pop	{r4, pc}
 8003bc6:	6858      	ldr	r0, [r3, #4]
 8003bc8:	685c      	ldr	r4, [r3, #4]
 8003bca:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8003bcc:	f3c0 4083 	ubfx	r0, r0, #18, #4
 8003bd0:	3002      	adds	r0, #2
 8003bd2:	f004 040f 	and.w	r4, r4, #15
 8003bd6:	3401      	adds	r4, #1
 8003bd8:	fbb2 f2f4 	udiv	r2, r2, r4
 8003bdc:	4342      	muls	r2, r0
 8003bde:	e7e8      	b.n	8003bb2 <SystemCoreClockUpdate+0x16>
 8003be0:	40021000 	.word	0x40021000
 8003be4:	200001b0 	.word	0x200001b0
 8003be8:	007a1200 	.word	0x007a1200
 8003bec:	08006aec 	.word	0x08006aec

08003bf0 <SetSysClock_PLL_HSE>:
 8003bf0:	b510      	push	{r4, lr}
 8003bf2:	b08a      	sub	sp, #40	; 0x28
 8003bf4:	2301      	movs	r3, #1
 8003bf6:	9300      	str	r3, [sp, #0]
 8003bf8:	b9a0      	cbnz	r0, 8003c24 <SetSysClock_PLL_HSE+0x34>
 8003bfa:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003bfe:	9301      	str	r3, [sp, #4]
 8003c00:	2302      	movs	r3, #2
 8003c02:	9306      	str	r3, [sp, #24]
 8003c04:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8003c08:	9307      	str	r3, [sp, #28]
 8003c0a:	2400      	movs	r4, #0
 8003c0c:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8003c10:	4668      	mov	r0, sp
 8003c12:	9409      	str	r4, [sp, #36]	; 0x24
 8003c14:	9308      	str	r3, [sp, #32]
 8003c16:	f000 f8ad 	bl	8003d74 <HAL_RCC_OscConfig>
 8003c1a:	b930      	cbnz	r0, 8003c2a <SetSysClock_PLL_HSE+0x3a>
 8003c1c:	f7ff ffa9 	bl	8003b72 <SetSysClock_PLL_HSE.part.0>
 8003c20:	b00a      	add	sp, #40	; 0x28
 8003c22:	bd10      	pop	{r4, pc}
 8003c24:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8003c28:	e7e9      	b.n	8003bfe <SetSysClock_PLL_HSE+0xe>
 8003c2a:	4620      	mov	r0, r4
 8003c2c:	e7f8      	b.n	8003c20 <SetSysClock_PLL_HSE+0x30>

08003c2e <SetSysClock_PLL_HSI>:
 8003c2e:	b510      	push	{r4, lr}
 8003c30:	b08a      	sub	sp, #40	; 0x28
 8003c32:	2303      	movs	r3, #3
 8003c34:	2210      	movs	r2, #16
 8003c36:	9300      	str	r3, [sp, #0]
 8003c38:	9204      	str	r2, [sp, #16]
 8003c3a:	2301      	movs	r3, #1
 8003c3c:	2202      	movs	r2, #2
 8003c3e:	9303      	str	r3, [sp, #12]
 8003c40:	2400      	movs	r4, #0
 8003c42:	9206      	str	r2, [sp, #24]
 8003c44:	9309      	str	r3, [sp, #36]	; 0x24
 8003c46:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8003c4a:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8003c4e:	4668      	mov	r0, sp
 8003c50:	9401      	str	r4, [sp, #4]
 8003c52:	9207      	str	r2, [sp, #28]
 8003c54:	9308      	str	r3, [sp, #32]
 8003c56:	f000 f88d 	bl	8003d74 <HAL_RCC_OscConfig>
 8003c5a:	b918      	cbnz	r0, 8003c64 <SetSysClock_PLL_HSI+0x36>
 8003c5c:	f7ff ff89 	bl	8003b72 <SetSysClock_PLL_HSE.part.0>
 8003c60:	b00a      	add	sp, #40	; 0x28
 8003c62:	bd10      	pop	{r4, pc}
 8003c64:	4620      	mov	r0, r4
 8003c66:	e7fb      	b.n	8003c60 <SetSysClock_PLL_HSI+0x32>

08003c68 <SetSysClock>:
 8003c68:	b508      	push	{r3, lr}
 8003c6a:	2001      	movs	r0, #1
 8003c6c:	f7ff ffc0 	bl	8003bf0 <SetSysClock_PLL_HSE>
 8003c70:	b930      	cbnz	r0, 8003c80 <SetSysClock+0x18>
 8003c72:	f7ff ffbd 	bl	8003bf0 <SetSysClock_PLL_HSE>
 8003c76:	b918      	cbnz	r0, 8003c80 <SetSysClock+0x18>
 8003c78:	f7ff ffd9 	bl	8003c2e <SetSysClock_PLL_HSI>
 8003c7c:	b900      	cbnz	r0, 8003c80 <SetSysClock+0x18>
 8003c7e:	e7fe      	b.n	8003c7e <SetSysClock+0x16>
 8003c80:	bd08      	pop	{r3, pc}
	...

08003c84 <SystemInit>:
 8003c84:	4a1d      	ldr	r2, [pc, #116]	; (8003cfc <SystemInit+0x78>)
 8003c86:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003c8a:	b510      	push	{r4, lr}
 8003c8c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003c90:	4c1b      	ldr	r4, [pc, #108]	; (8003d00 <SystemInit+0x7c>)
 8003c92:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003c96:	6823      	ldr	r3, [r4, #0]
 8003c98:	f043 0301 	orr.w	r3, r3, #1
 8003c9c:	6023      	str	r3, [r4, #0]
 8003c9e:	6861      	ldr	r1, [r4, #4]
 8003ca0:	4b18      	ldr	r3, [pc, #96]	; (8003d04 <SystemInit+0x80>)
 8003ca2:	400b      	ands	r3, r1
 8003ca4:	6063      	str	r3, [r4, #4]
 8003ca6:	6823      	ldr	r3, [r4, #0]
 8003ca8:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003cac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003cb0:	6023      	str	r3, [r4, #0]
 8003cb2:	6823      	ldr	r3, [r4, #0]
 8003cb4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003cb8:	6023      	str	r3, [r4, #0]
 8003cba:	6863      	ldr	r3, [r4, #4]
 8003cbc:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8003cc0:	6063      	str	r3, [r4, #4]
 8003cc2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8003cc4:	f023 030f 	bic.w	r3, r3, #15
 8003cc8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003cca:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003ccc:	4b0e      	ldr	r3, [pc, #56]	; (8003d08 <SystemInit+0x84>)
 8003cce:	400b      	ands	r3, r1
 8003cd0:	6323      	str	r3, [r4, #48]	; 0x30
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	60a3      	str	r3, [r4, #8]
 8003cd6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003cda:	6093      	str	r3, [r2, #8]
 8003cdc:	4b0b      	ldr	r3, [pc, #44]	; (8003d0c <SystemInit+0x88>)
 8003cde:	4a0c      	ldr	r2, [pc, #48]	; (8003d10 <SystemInit+0x8c>)
 8003ce0:	601a      	str	r2, [r3, #0]
 8003ce2:	f000 fd0b 	bl	80046fc <HAL_Init>
 8003ce6:	f7ff ffbf 	bl	8003c68 <SetSysClock>
 8003cea:	6923      	ldr	r3, [r4, #16]
 8003cec:	f043 0301 	orr.w	r3, r3, #1
 8003cf0:	6123      	str	r3, [r4, #16]
 8003cf2:	6923      	ldr	r3, [r4, #16]
 8003cf4:	f023 0301 	bic.w	r3, r3, #1
 8003cf8:	6123      	str	r3, [r4, #16]
 8003cfa:	bd10      	pop	{r4, pc}
 8003cfc:	e000ed00 	.word	0xe000ed00
 8003d00:	40021000 	.word	0x40021000
 8003d04:	f87fc00c 	.word	0xf87fc00c
 8003d08:	ff00fccc 	.word	0xff00fccc
 8003d0c:	200001b0 	.word	0x200001b0
 8003d10:	007a1200 	.word	0x007a1200

08003d14 <__NVIC_SetVector>:
 8003d14:	b530      	push	{r4, r5, lr}
 8003d16:	4c0c      	ldr	r4, [pc, #48]	; (8003d48 <__NVIC_SetVector+0x34>)
 8003d18:	68a2      	ldr	r2, [r4, #8]
 8003d1a:	68a4      	ldr	r4, [r4, #8]
 8003d1c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003d20:	4613      	mov	r3, r2
 8003d22:	d10c      	bne.n	8003d3e <__NVIC_SetVector+0x2a>
 8003d24:	1f13      	subs	r3, r2, #4
 8003d26:	4c09      	ldr	r4, [pc, #36]	; (8003d4c <__NVIC_SetVector+0x38>)
 8003d28:	4a09      	ldr	r2, [pc, #36]	; (8003d50 <__NVIC_SetVector+0x3c>)
 8003d2a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003d2e:	f842 5f04 	str.w	r5, [r2, #4]!
 8003d32:	42a2      	cmp	r2, r4
 8003d34:	d1f9      	bne.n	8003d2a <__NVIC_SetVector+0x16>
 8003d36:	4a04      	ldr	r2, [pc, #16]	; (8003d48 <__NVIC_SetVector+0x34>)
 8003d38:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003d3c:	6093      	str	r3, [r2, #8]
 8003d3e:	3010      	adds	r0, #16
 8003d40:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003d44:	bd30      	pop	{r4, r5, pc}
 8003d46:	bf00      	nop
 8003d48:	e000ed00 	.word	0xe000ed00
 8003d4c:	20000190 	.word	0x20000190
 8003d50:	1ffffffc 	.word	0x1ffffffc

08003d54 <HAL_PWR_EnterSLEEPMode>:
 8003d54:	4a06      	ldr	r2, [pc, #24]	; (8003d70 <HAL_PWR_EnterSLEEPMode+0x1c>)
 8003d56:	6913      	ldr	r3, [r2, #16]
 8003d58:	2901      	cmp	r1, #1
 8003d5a:	f023 0304 	bic.w	r3, r3, #4
 8003d5e:	6113      	str	r3, [r2, #16]
 8003d60:	d101      	bne.n	8003d66 <HAL_PWR_EnterSLEEPMode+0x12>
 8003d62:	bf30      	wfi
 8003d64:	4770      	bx	lr
 8003d66:	bf40      	sev
 8003d68:	bf20      	wfe
 8003d6a:	bf20      	wfe
 8003d6c:	4770      	bx	lr
 8003d6e:	bf00      	nop
 8003d70:	e000ed00 	.word	0xe000ed00

08003d74 <HAL_RCC_OscConfig>:
 8003d74:	6803      	ldr	r3, [r0, #0]
 8003d76:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, r10, lr}
 8003d7a:	07df      	lsls	r7, r3, #31
 8003d7c:	4605      	mov	r5, r0
 8003d7e:	d411      	bmi.n	8003da4 <HAL_RCC_OscConfig+0x30>
 8003d80:	682b      	ldr	r3, [r5, #0]
 8003d82:	079e      	lsls	r6, r3, #30
 8003d84:	f100 808b 	bmi.w	8003e9e <HAL_RCC_OscConfig+0x12a>
 8003d88:	682b      	ldr	r3, [r5, #0]
 8003d8a:	071c      	lsls	r4, r3, #28
 8003d8c:	f100 80fe 	bmi.w	8003f8c <HAL_RCC_OscConfig+0x218>
 8003d90:	682b      	ldr	r3, [r5, #0]
 8003d92:	0758      	lsls	r0, r3, #29
 8003d94:	f100 8147 	bmi.w	8004026 <HAL_RCC_OscConfig+0x2b2>
 8003d98:	69aa      	ldr	r2, [r5, #24]
 8003d9a:	2a00      	cmp	r2, #0
 8003d9c:	f040 81dd 	bne.w	800415a <HAL_RCC_OscConfig+0x3e6>
 8003da0:	2000      	movs	r0, #0
 8003da2:	e024      	b.n	8003dee <HAL_RCC_OscConfig+0x7a>
 8003da4:	4cbd      	ldr	r4, [pc, #756]	; (800409c <HAL_RCC_OscConfig+0x328>)
 8003da6:	6863      	ldr	r3, [r4, #4]
 8003da8:	f003 030c 	and.w	r3, r3, #12
 8003dac:	2b04      	cmp	r3, #4
 8003dae:	d00a      	beq.n	8003dc6 <HAL_RCC_OscConfig+0x52>
 8003db0:	6863      	ldr	r3, [r4, #4]
 8003db2:	f003 030c 	and.w	r3, r3, #12
 8003db6:	2b08      	cmp	r3, #8
 8003db8:	d11c      	bne.n	8003df4 <HAL_RCC_OscConfig+0x80>
 8003dba:	6863      	ldr	r3, [r4, #4]
 8003dbc:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 8003dc0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003dc4:	d116      	bne.n	8003df4 <HAL_RCC_OscConfig+0x80>
 8003dc6:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8003dca:	fa93 f2a3 	rbit	r2, r3
 8003dce:	6821      	ldr	r1, [r4, #0]
 8003dd0:	fa93 f3a3 	rbit	r3, r3
 8003dd4:	fab3 f383 	clz	r3, r3
 8003dd8:	f003 031f 	and.w	r3, r3, #31
 8003ddc:	2201      	movs	r2, #1
 8003dde:	fa02 f303 	lsl.w	r3, r2, r3
 8003de2:	420b      	tst	r3, r1
 8003de4:	d0cc      	beq.n	8003d80 <HAL_RCC_OscConfig+0xc>
 8003de6:	686b      	ldr	r3, [r5, #4]
 8003de8:	2b00      	cmp	r3, #0
 8003dea:	d1c9      	bne.n	8003d80 <HAL_RCC_OscConfig+0xc>
 8003dec:	2001      	movs	r0, #1
 8003dee:	b002      	add	sp, #8
 8003df0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003df4:	686b      	ldr	r3, [r5, #4]
 8003df6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003dfa:	d11e      	bne.n	8003e3a <HAL_RCC_OscConfig+0xc6>
 8003dfc:	6823      	ldr	r3, [r4, #0]
 8003dfe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003e02:	6023      	str	r3, [r4, #0]
 8003e04:	f000 fc94 	bl	8004730 <HAL_GetTick>
 8003e08:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 8003e0c:	4680      	mov	r8, r0
 8003e0e:	2701      	movs	r7, #1
 8003e10:	fa96 f3a6 	rbit	r3, r6
 8003e14:	6822      	ldr	r2, [r4, #0]
 8003e16:	fa96 f3a6 	rbit	r3, r6
 8003e1a:	fab3 f383 	clz	r3, r3
 8003e1e:	f003 031f 	and.w	r3, r3, #31
 8003e22:	fa07 f303 	lsl.w	r3, r7, r3
 8003e26:	4213      	tst	r3, r2
 8003e28:	d1aa      	bne.n	8003d80 <HAL_RCC_OscConfig+0xc>
 8003e2a:	f000 fc81 	bl	8004730 <HAL_GetTick>
 8003e2e:	eba0 0008 	sub.w	r0, r0, r8
 8003e32:	2864      	cmp	r0, #100	; 0x64
 8003e34:	d9ec      	bls.n	8003e10 <HAL_RCC_OscConfig+0x9c>
 8003e36:	2003      	movs	r0, #3
 8003e38:	e7d9      	b.n	8003dee <HAL_RCC_OscConfig+0x7a>
 8003e3a:	bb0b      	cbnz	r3, 8003e80 <HAL_RCC_OscConfig+0x10c>
 8003e3c:	6823      	ldr	r3, [r4, #0]
 8003e3e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003e42:	6023      	str	r3, [r4, #0]
 8003e44:	6823      	ldr	r3, [r4, #0]
 8003e46:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003e4a:	6023      	str	r3, [r4, #0]
 8003e4c:	f000 fc70 	bl	8004730 <HAL_GetTick>
 8003e50:	f44f 3600 	mov.w	r6, #131072	; 0x20000
 8003e54:	4680      	mov	r8, r0
 8003e56:	2701      	movs	r7, #1
 8003e58:	fa96 f3a6 	rbit	r3, r6
 8003e5c:	6822      	ldr	r2, [r4, #0]
 8003e5e:	fa96 f3a6 	rbit	r3, r6
 8003e62:	fab3 f383 	clz	r3, r3
 8003e66:	f003 031f 	and.w	r3, r3, #31
 8003e6a:	fa07 f303 	lsl.w	r3, r7, r3
 8003e6e:	4213      	tst	r3, r2
 8003e70:	d086      	beq.n	8003d80 <HAL_RCC_OscConfig+0xc>
 8003e72:	f000 fc5d 	bl	8004730 <HAL_GetTick>
 8003e76:	eba0 0008 	sub.w	r0, r0, r8
 8003e7a:	2864      	cmp	r0, #100	; 0x64
 8003e7c:	d9ec      	bls.n	8003e58 <HAL_RCC_OscConfig+0xe4>
 8003e7e:	e7da      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8003e80:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003e84:	6823      	ldr	r3, [r4, #0]
 8003e86:	d103      	bne.n	8003e90 <HAL_RCC_OscConfig+0x11c>
 8003e88:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003e8c:	6023      	str	r3, [r4, #0]
 8003e8e:	e7b5      	b.n	8003dfc <HAL_RCC_OscConfig+0x88>
 8003e90:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003e94:	6023      	str	r3, [r4, #0]
 8003e96:	6823      	ldr	r3, [r4, #0]
 8003e98:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003e9c:	e7b1      	b.n	8003e02 <HAL_RCC_OscConfig+0x8e>
 8003e9e:	4c7f      	ldr	r4, [pc, #508]	; (800409c <HAL_RCC_OscConfig+0x328>)
 8003ea0:	6863      	ldr	r3, [r4, #4]
 8003ea2:	f013 0f0c 	tst.w	r3, #12
 8003ea6:	d00a      	beq.n	8003ebe <HAL_RCC_OscConfig+0x14a>
 8003ea8:	6863      	ldr	r3, [r4, #4]
 8003eaa:	f003 030c 	and.w	r3, r3, #12
 8003eae:	2b08      	cmp	r3, #8
 8003eb0:	d124      	bne.n	8003efc <HAL_RCC_OscConfig+0x188>
 8003eb2:	6863      	ldr	r3, [r4, #4]
 8003eb4:	f403 33c0 	and.w	r3, r3, #98304	; 0x18000
 8003eb8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8003ebc:	d11e      	bne.n	8003efc <HAL_RCC_OscConfig+0x188>
 8003ebe:	2302      	movs	r3, #2
 8003ec0:	fa93 f2a3 	rbit	r2, r3
 8003ec4:	6821      	ldr	r1, [r4, #0]
 8003ec6:	fa93 f3a3 	rbit	r3, r3
 8003eca:	fab3 f383 	clz	r3, r3
 8003ece:	f003 031f 	and.w	r3, r3, #31
 8003ed2:	2201      	movs	r2, #1
 8003ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ed8:	420b      	tst	r3, r1
 8003eda:	d002      	beq.n	8003ee2 <HAL_RCC_OscConfig+0x16e>
 8003edc:	68eb      	ldr	r3, [r5, #12]
 8003ede:	4293      	cmp	r3, r2
 8003ee0:	d184      	bne.n	8003dec <HAL_RCC_OscConfig+0x78>
 8003ee2:	6821      	ldr	r1, [r4, #0]
 8003ee4:	23f8      	movs	r3, #248	; 0xf8
 8003ee6:	fa93 f3a3 	rbit	r3, r3
 8003eea:	fab3 f283 	clz	r2, r3
 8003eee:	692b      	ldr	r3, [r5, #16]
 8003ef0:	4093      	lsls	r3, r2
 8003ef2:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8003ef6:	4313      	orrs	r3, r2
 8003ef8:	6023      	str	r3, [r4, #0]
 8003efa:	e745      	b.n	8003d88 <HAL_RCC_OscConfig+0x14>
 8003efc:	68ea      	ldr	r2, [r5, #12]
 8003efe:	2601      	movs	r6, #1
 8003f00:	b30a      	cbz	r2, 8003f46 <HAL_RCC_OscConfig+0x1d2>
 8003f02:	fa96 f3a6 	rbit	r3, r6
 8003f06:	fab3 f383 	clz	r3, r3
 8003f0a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003f0e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003f12:	009b      	lsls	r3, r3, #2
 8003f14:	2702      	movs	r7, #2
 8003f16:	601e      	str	r6, [r3, #0]
 8003f18:	f000 fc0a 	bl	8004730 <HAL_GetTick>
 8003f1c:	4680      	mov	r8, r0
 8003f1e:	fa97 f3a7 	rbit	r3, r7
 8003f22:	6822      	ldr	r2, [r4, #0]
 8003f24:	fa97 f3a7 	rbit	r3, r7
 8003f28:	fab3 f383 	clz	r3, r3
 8003f2c:	f003 031f 	and.w	r3, r3, #31
 8003f30:	fa06 f303 	lsl.w	r3, r6, r3
 8003f34:	4213      	tst	r3, r2
 8003f36:	d1d4      	bne.n	8003ee2 <HAL_RCC_OscConfig+0x16e>
 8003f38:	f000 fbfa 	bl	8004730 <HAL_GetTick>
 8003f3c:	eba0 0008 	sub.w	r0, r0, r8
 8003f40:	2802      	cmp	r0, #2
 8003f42:	d9ec      	bls.n	8003f1e <HAL_RCC_OscConfig+0x1aa>
 8003f44:	e777      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8003f46:	fa96 f3a6 	rbit	r3, r6
 8003f4a:	fab3 f383 	clz	r3, r3
 8003f4e:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 8003f52:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8003f56:	009b      	lsls	r3, r3, #2
 8003f58:	2702      	movs	r7, #2
 8003f5a:	601a      	str	r2, [r3, #0]
 8003f5c:	f000 fbe8 	bl	8004730 <HAL_GetTick>
 8003f60:	4680      	mov	r8, r0
 8003f62:	fa97 f3a7 	rbit	r3, r7
 8003f66:	6822      	ldr	r2, [r4, #0]
 8003f68:	fa97 f3a7 	rbit	r3, r7
 8003f6c:	fab3 f383 	clz	r3, r3
 8003f70:	f003 031f 	and.w	r3, r3, #31
 8003f74:	fa06 f303 	lsl.w	r3, r6, r3
 8003f78:	4213      	tst	r3, r2
 8003f7a:	f43f af05 	beq.w	8003d88 <HAL_RCC_OscConfig+0x14>
 8003f7e:	f000 fbd7 	bl	8004730 <HAL_GetTick>
 8003f82:	eba0 0008 	sub.w	r0, r0, r8
 8003f86:	2802      	cmp	r0, #2
 8003f88:	d9eb      	bls.n	8003f62 <HAL_RCC_OscConfig+0x1ee>
 8003f8a:	e754      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8003f8c:	696a      	ldr	r2, [r5, #20]
 8003f8e:	4e43      	ldr	r6, [pc, #268]	; (800409c <HAL_RCC_OscConfig+0x328>)
 8003f90:	4943      	ldr	r1, [pc, #268]	; (80040a0 <HAL_RCC_OscConfig+0x32c>)
 8003f92:	2401      	movs	r4, #1
 8003f94:	b31a      	cbz	r2, 8003fde <HAL_RCC_OscConfig+0x26a>
 8003f96:	fa94 f3a4 	rbit	r3, r4
 8003f9a:	fab3 f383 	clz	r3, r3
 8003f9e:	440b      	add	r3, r1
 8003fa0:	009b      	lsls	r3, r3, #2
 8003fa2:	2702      	movs	r7, #2
 8003fa4:	601c      	str	r4, [r3, #0]
 8003fa6:	f000 fbc3 	bl	8004730 <HAL_GetTick>
 8003faa:	4680      	mov	r8, r0
 8003fac:	fa97 f3a7 	rbit	r3, r7
 8003fb0:	fa97 f3a7 	rbit	r3, r7
 8003fb4:	fa97 f3a7 	rbit	r3, r7
 8003fb8:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8003fba:	fa97 f3a7 	rbit	r3, r7
 8003fbe:	fab3 f383 	clz	r3, r3
 8003fc2:	f003 031f 	and.w	r3, r3, #31
 8003fc6:	fa04 f303 	lsl.w	r3, r4, r3
 8003fca:	4213      	tst	r3, r2
 8003fcc:	f47f aee0 	bne.w	8003d90 <HAL_RCC_OscConfig+0x1c>
 8003fd0:	f000 fbae 	bl	8004730 <HAL_GetTick>
 8003fd4:	eba0 0008 	sub.w	r0, r0, r8
 8003fd8:	2802      	cmp	r0, #2
 8003fda:	d9e7      	bls.n	8003fac <HAL_RCC_OscConfig+0x238>
 8003fdc:	e72b      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8003fde:	fa94 f3a4 	rbit	r3, r4
 8003fe2:	fab3 f383 	clz	r3, r3
 8003fe6:	440b      	add	r3, r1
 8003fe8:	009b      	lsls	r3, r3, #2
 8003fea:	2702      	movs	r7, #2
 8003fec:	601a      	str	r2, [r3, #0]
 8003fee:	f000 fb9f 	bl	8004730 <HAL_GetTick>
 8003ff2:	4680      	mov	r8, r0
 8003ff4:	fa97 f3a7 	rbit	r3, r7
 8003ff8:	fa97 f3a7 	rbit	r3, r7
 8003ffc:	fa97 f3a7 	rbit	r3, r7
 8004000:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8004002:	fa97 f3a7 	rbit	r3, r7
 8004006:	fab3 f383 	clz	r3, r3
 800400a:	f003 031f 	and.w	r3, r3, #31
 800400e:	fa04 f303 	lsl.w	r3, r4, r3
 8004012:	4213      	tst	r3, r2
 8004014:	f43f aebc 	beq.w	8003d90 <HAL_RCC_OscConfig+0x1c>
 8004018:	f000 fb8a 	bl	8004730 <HAL_GetTick>
 800401c:	eba0 0008 	sub.w	r0, r0, r8
 8004020:	2802      	cmp	r0, #2
 8004022:	d9e7      	bls.n	8003ff4 <HAL_RCC_OscConfig+0x280>
 8004024:	e707      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8004026:	4c1d      	ldr	r4, [pc, #116]	; (800409c <HAL_RCC_OscConfig+0x328>)
 8004028:	69e3      	ldr	r3, [r4, #28]
 800402a:	00d9      	lsls	r1, r3, #3
 800402c:	d434      	bmi.n	8004098 <HAL_RCC_OscConfig+0x324>
 800402e:	69e3      	ldr	r3, [r4, #28]
 8004030:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004034:	61e3      	str	r3, [r4, #28]
 8004036:	69e3      	ldr	r3, [r4, #28]
 8004038:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800403c:	9301      	str	r3, [sp, #4]
 800403e:	9b01      	ldr	r3, [sp, #4]
 8004040:	2601      	movs	r6, #1
 8004042:	4f18      	ldr	r7, [pc, #96]	; (80040a4 <HAL_RCC_OscConfig+0x330>)
 8004044:	683b      	ldr	r3, [r7, #0]
 8004046:	05da      	lsls	r2, r3, #23
 8004048:	d52e      	bpl.n	80040a8 <HAL_RCC_OscConfig+0x334>
 800404a:	68ab      	ldr	r3, [r5, #8]
 800404c:	2b01      	cmp	r3, #1
 800404e:	d13c      	bne.n	80040ca <HAL_RCC_OscConfig+0x356>
 8004050:	6a23      	ldr	r3, [r4, #32]
 8004052:	f043 0301 	orr.w	r3, r3, #1
 8004056:	6223      	str	r3, [r4, #32]
 8004058:	f000 fb6a 	bl	8004730 <HAL_GetTick>
 800405c:	2702      	movs	r7, #2
 800405e:	4682      	mov	r10, r0
 8004060:	46b9      	mov	r9, r7
 8004062:	f04f 0801 	mov.w	r8, #1
 8004066:	fa97 f3a7 	rbit	r3, r7
 800406a:	fa97 f3a7 	rbit	r3, r7
 800406e:	2b00      	cmp	r3, #0
 8004070:	d06b      	beq.n	800414a <HAL_RCC_OscConfig+0x3d6>
 8004072:	6a22      	ldr	r2, [r4, #32]
 8004074:	fa99 f3a9 	rbit	r3, r9
 8004078:	fab3 f383 	clz	r3, r3
 800407c:	f003 031f 	and.w	r3, r3, #31
 8004080:	fa08 f303 	lsl.w	r3, r8, r3
 8004084:	4213      	tst	r3, r2
 8004086:	d057      	beq.n	8004138 <HAL_RCC_OscConfig+0x3c4>
 8004088:	2e00      	cmp	r6, #0
 800408a:	f43f ae85 	beq.w	8003d98 <HAL_RCC_OscConfig+0x24>
 800408e:	69e3      	ldr	r3, [r4, #28]
 8004090:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004094:	61e3      	str	r3, [r4, #28]
 8004096:	e67f      	b.n	8003d98 <HAL_RCC_OscConfig+0x24>
 8004098:	2600      	movs	r6, #0
 800409a:	e7d2      	b.n	8004042 <HAL_RCC_OscConfig+0x2ce>
 800409c:	40021000 	.word	0x40021000
 80040a0:	10908120 	.word	0x10908120
 80040a4:	40007000 	.word	0x40007000
 80040a8:	683b      	ldr	r3, [r7, #0]
 80040aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80040ae:	603b      	str	r3, [r7, #0]
 80040b0:	f000 fb3e 	bl	8004730 <HAL_GetTick>
 80040b4:	4680      	mov	r8, r0
 80040b6:	683b      	ldr	r3, [r7, #0]
 80040b8:	05db      	lsls	r3, r3, #23
 80040ba:	d4c6      	bmi.n	800404a <HAL_RCC_OscConfig+0x2d6>
 80040bc:	f000 fb38 	bl	8004730 <HAL_GetTick>
 80040c0:	eba0 0008 	sub.w	r0, r0, r8
 80040c4:	2864      	cmp	r0, #100	; 0x64
 80040c6:	d9f6      	bls.n	80040b6 <HAL_RCC_OscConfig+0x342>
 80040c8:	e6b5      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 80040ca:	bb3b      	cbnz	r3, 800411c <HAL_RCC_OscConfig+0x3a8>
 80040cc:	6a23      	ldr	r3, [r4, #32]
 80040ce:	f023 0301 	bic.w	r3, r3, #1
 80040d2:	6223      	str	r3, [r4, #32]
 80040d4:	6a23      	ldr	r3, [r4, #32]
 80040d6:	f023 0304 	bic.w	r3, r3, #4
 80040da:	6223      	str	r3, [r4, #32]
 80040dc:	f000 fb28 	bl	8004730 <HAL_GetTick>
 80040e0:	2702      	movs	r7, #2
 80040e2:	4682      	mov	r10, r0
 80040e4:	46b9      	mov	r9, r7
 80040e6:	f04f 0801 	mov.w	r8, #1
 80040ea:	fa97 f3a7 	rbit	r3, r7
 80040ee:	fa97 f3a7 	rbit	r3, r7
 80040f2:	b373      	cbz	r3, 8004152 <HAL_RCC_OscConfig+0x3de>
 80040f4:	6a22      	ldr	r2, [r4, #32]
 80040f6:	fa99 f3a9 	rbit	r3, r9
 80040fa:	fab3 f383 	clz	r3, r3
 80040fe:	f003 031f 	and.w	r3, r3, #31
 8004102:	fa08 f303 	lsl.w	r3, r8, r3
 8004106:	4213      	tst	r3, r2
 8004108:	d0be      	beq.n	8004088 <HAL_RCC_OscConfig+0x314>
 800410a:	f000 fb11 	bl	8004730 <HAL_GetTick>
 800410e:	f241 3388 	movw	r3, #5000	; 0x1388
 8004112:	eba0 000a 	sub.w	r0, r0, r10
 8004116:	4298      	cmp	r0, r3
 8004118:	d9e7      	bls.n	80040ea <HAL_RCC_OscConfig+0x376>
 800411a:	e68c      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 800411c:	2b05      	cmp	r3, #5
 800411e:	6a23      	ldr	r3, [r4, #32]
 8004120:	d103      	bne.n	800412a <HAL_RCC_OscConfig+0x3b6>
 8004122:	f043 0304 	orr.w	r3, r3, #4
 8004126:	6223      	str	r3, [r4, #32]
 8004128:	e792      	b.n	8004050 <HAL_RCC_OscConfig+0x2dc>
 800412a:	f023 0301 	bic.w	r3, r3, #1
 800412e:	6223      	str	r3, [r4, #32]
 8004130:	6a23      	ldr	r3, [r4, #32]
 8004132:	f023 0304 	bic.w	r3, r3, #4
 8004136:	e78e      	b.n	8004056 <HAL_RCC_OscConfig+0x2e2>
 8004138:	f000 fafa 	bl	8004730 <HAL_GetTick>
 800413c:	f241 3388 	movw	r3, #5000	; 0x1388
 8004140:	eba0 000a 	sub.w	r0, r0, r10
 8004144:	4298      	cmp	r0, r3
 8004146:	d98e      	bls.n	8004066 <HAL_RCC_OscConfig+0x2f2>
 8004148:	e675      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 800414a:	fa97 f3a7 	rbit	r3, r7
 800414e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004150:	e790      	b.n	8004074 <HAL_RCC_OscConfig+0x300>
 8004152:	fa97 f3a7 	rbit	r3, r7
 8004156:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004158:	e7cd      	b.n	80040f6 <HAL_RCC_OscConfig+0x382>
 800415a:	4c44      	ldr	r4, [pc, #272]	; (800426c <HAL_RCC_OscConfig+0x4f8>)
 800415c:	6863      	ldr	r3, [r4, #4]
 800415e:	f003 030c 	and.w	r3, r3, #12
 8004162:	2b08      	cmp	r3, #8
 8004164:	f43f ae42 	beq.w	8003dec <HAL_RCC_OscConfig+0x78>
 8004168:	2a02      	cmp	r2, #2
 800416a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800416e:	d158      	bne.n	8004222 <HAL_RCC_OscConfig+0x4ae>
 8004170:	fa93 f3a3 	rbit	r3, r3
 8004174:	fab3 f383 	clz	r3, r3
 8004178:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800417c:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004180:	009b      	lsls	r3, r3, #2
 8004182:	2200      	movs	r2, #0
 8004184:	601a      	str	r2, [r3, #0]
 8004186:	f000 fad3 	bl	8004730 <HAL_GetTick>
 800418a:	f04f 7700 	mov.w	r7, #33554432	; 0x2000000
 800418e:	4680      	mov	r8, r0
 8004190:	2601      	movs	r6, #1
 8004192:	fa97 f3a7 	rbit	r3, r7
 8004196:	6822      	ldr	r2, [r4, #0]
 8004198:	fa97 f3a7 	rbit	r3, r7
 800419c:	fab3 f383 	clz	r3, r3
 80041a0:	f003 031f 	and.w	r3, r3, #31
 80041a4:	fa06 f303 	lsl.w	r3, r6, r3
 80041a8:	4213      	tst	r3, r2
 80041aa:	d133      	bne.n	8004214 <HAL_RCC_OscConfig+0x4a0>
 80041ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80041ae:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 80041b0:	f023 030f 	bic.w	r3, r3, #15
 80041b4:	4313      	orrs	r3, r2
 80041b6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80041b8:	6862      	ldr	r2, [r4, #4]
 80041ba:	6a2b      	ldr	r3, [r5, #32]
 80041bc:	69e9      	ldr	r1, [r5, #28]
 80041be:	f422 1276 	bic.w	r2, r2, #4030464	; 0x3d8000
 80041c2:	430b      	orrs	r3, r1
 80041c4:	4313      	orrs	r3, r2
 80041c6:	6063      	str	r3, [r4, #4]
 80041c8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80041cc:	fa93 f3a3 	rbit	r3, r3
 80041d0:	fab3 f383 	clz	r3, r3
 80041d4:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 80041d8:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 80041dc:	009b      	lsls	r3, r3, #2
 80041de:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 80041e2:	601e      	str	r6, [r3, #0]
 80041e4:	f000 faa4 	bl	8004730 <HAL_GetTick>
 80041e8:	2601      	movs	r6, #1
 80041ea:	4607      	mov	r7, r0
 80041ec:	fa95 f3a5 	rbit	r3, r5
 80041f0:	6822      	ldr	r2, [r4, #0]
 80041f2:	fa95 f3a5 	rbit	r3, r5
 80041f6:	fab3 f383 	clz	r3, r3
 80041fa:	f003 031f 	and.w	r3, r3, #31
 80041fe:	fa06 f303 	lsl.w	r3, r6, r3
 8004202:	4213      	tst	r3, r2
 8004204:	f47f adcc 	bne.w	8003da0 <HAL_RCC_OscConfig+0x2c>
 8004208:	f000 fa92 	bl	8004730 <HAL_GetTick>
 800420c:	1bc0      	subs	r0, r0, r7
 800420e:	2802      	cmp	r0, #2
 8004210:	d9ec      	bls.n	80041ec <HAL_RCC_OscConfig+0x478>
 8004212:	e610      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8004214:	f000 fa8c 	bl	8004730 <HAL_GetTick>
 8004218:	eba0 0008 	sub.w	r0, r0, r8
 800421c:	2802      	cmp	r0, #2
 800421e:	d9b8      	bls.n	8004192 <HAL_RCC_OscConfig+0x41e>
 8004220:	e609      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 8004222:	fa93 f3a3 	rbit	r3, r3
 8004226:	fab3 f383 	clz	r3, r3
 800422a:	f103 5384 	add.w	r3, r3, #276824064	; 0x10800000
 800422e:	f503 1384 	add.w	r3, r3, #1081344	; 0x108000
 8004232:	009b      	lsls	r3, r3, #2
 8004234:	2200      	movs	r2, #0
 8004236:	601a      	str	r2, [r3, #0]
 8004238:	f000 fa7a 	bl	8004730 <HAL_GetTick>
 800423c:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
 8004240:	4607      	mov	r7, r0
 8004242:	2601      	movs	r6, #1
 8004244:	fa95 f3a5 	rbit	r3, r5
 8004248:	6822      	ldr	r2, [r4, #0]
 800424a:	fa95 f3a5 	rbit	r3, r5
 800424e:	fab3 f383 	clz	r3, r3
 8004252:	f003 031f 	and.w	r3, r3, #31
 8004256:	fa06 f303 	lsl.w	r3, r6, r3
 800425a:	4213      	tst	r3, r2
 800425c:	f43f ada0 	beq.w	8003da0 <HAL_RCC_OscConfig+0x2c>
 8004260:	f000 fa66 	bl	8004730 <HAL_GetTick>
 8004264:	1bc0      	subs	r0, r0, r7
 8004266:	2802      	cmp	r0, #2
 8004268:	d9ec      	bls.n	8004244 <HAL_RCC_OscConfig+0x4d0>
 800426a:	e5e4      	b.n	8003e36 <HAL_RCC_OscConfig+0xc2>
 800426c:	40021000 	.word	0x40021000

08004270 <HAL_RCC_GetSysClockFreq>:
 8004270:	4911      	ldr	r1, [pc, #68]	; (80042b8 <HAL_RCC_GetSysClockFreq+0x48>)
 8004272:	684b      	ldr	r3, [r1, #4]
 8004274:	f003 020c 	and.w	r2, r3, #12
 8004278:	2a08      	cmp	r2, #8
 800427a:	d11a      	bne.n	80042b2 <HAL_RCC_GetSysClockFreq+0x42>
 800427c:	f44f 1270 	mov.w	r2, #3932160	; 0x3c0000
 8004280:	fa92 f2a2 	rbit	r2, r2
 8004284:	200f      	movs	r0, #15
 8004286:	fab2 f282 	clz	r2, r2
 800428a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800428c:	fa90 f0a0 	rbit	r0, r0
 8004290:	fab0 f080 	clz	r0, r0
 8004294:	f001 010f 	and.w	r1, r1, #15
 8004298:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 800429c:	40d3      	lsrs	r3, r2
 800429e:	40c1      	lsrs	r1, r0
 80042a0:	4a06      	ldr	r2, [pc, #24]	; (80042bc <HAL_RCC_GetSysClockFreq+0x4c>)
 80042a2:	4807      	ldr	r0, [pc, #28]	; (80042c0 <HAL_RCC_GetSysClockFreq+0x50>)
 80042a4:	5c41      	ldrb	r1, [r0, r1]
 80042a6:	4807      	ldr	r0, [pc, #28]	; (80042c4 <HAL_RCC_GetSysClockFreq+0x54>)
 80042a8:	fbb0 f1f1 	udiv	r1, r0, r1
 80042ac:	5cd0      	ldrb	r0, [r2, r3]
 80042ae:	4348      	muls	r0, r1
 80042b0:	4770      	bx	lr
 80042b2:	4804      	ldr	r0, [pc, #16]	; (80042c4 <HAL_RCC_GetSysClockFreq+0x54>)
 80042b4:	4770      	bx	lr
 80042b6:	bf00      	nop
 80042b8:	40021000 	.word	0x40021000
 80042bc:	08006b04 	.word	0x08006b04
 80042c0:	08006b14 	.word	0x08006b14
 80042c4:	007a1200 	.word	0x007a1200

080042c8 <HAL_RCC_ClockConfig>:
 80042c8:	4a5c      	ldr	r2, [pc, #368]	; (800443c <HAL_RCC_ClockConfig+0x174>)
 80042ca:	6813      	ldr	r3, [r2, #0]
 80042cc:	f003 0307 	and.w	r3, r3, #7
 80042d0:	428b      	cmp	r3, r1
 80042d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042d6:	4606      	mov	r6, r0
 80042d8:	460d      	mov	r5, r1
 80042da:	d330      	bcc.n	800433e <HAL_RCC_ClockConfig+0x76>
 80042dc:	6832      	ldr	r2, [r6, #0]
 80042de:	0791      	lsls	r1, r2, #30
 80042e0:	d43a      	bmi.n	8004358 <HAL_RCC_ClockConfig+0x90>
 80042e2:	07d2      	lsls	r2, r2, #31
 80042e4:	d440      	bmi.n	8004368 <HAL_RCC_ClockConfig+0xa0>
 80042e6:	4a55      	ldr	r2, [pc, #340]	; (800443c <HAL_RCC_ClockConfig+0x174>)
 80042e8:	6813      	ldr	r3, [r2, #0]
 80042ea:	f003 0307 	and.w	r3, r3, #7
 80042ee:	429d      	cmp	r5, r3
 80042f0:	f0c0 8092 	bcc.w	8004418 <HAL_RCC_ClockConfig+0x150>
 80042f4:	6832      	ldr	r2, [r6, #0]
 80042f6:	4c52      	ldr	r4, [pc, #328]	; (8004440 <HAL_RCC_ClockConfig+0x178>)
 80042f8:	f012 0f04 	tst.w	r2, #4
 80042fc:	f040 8097 	bne.w	800442e <HAL_RCC_ClockConfig+0x166>
 8004300:	0713      	lsls	r3, r2, #28
 8004302:	d506      	bpl.n	8004312 <HAL_RCC_ClockConfig+0x4a>
 8004304:	6863      	ldr	r3, [r4, #4]
 8004306:	6932      	ldr	r2, [r6, #16]
 8004308:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 800430c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8004310:	6063      	str	r3, [r4, #4]
 8004312:	f7ff ffad 	bl	8004270 <HAL_RCC_GetSysClockFreq>
 8004316:	6863      	ldr	r3, [r4, #4]
 8004318:	22f0      	movs	r2, #240	; 0xf0
 800431a:	fa92 f2a2 	rbit	r2, r2
 800431e:	fab2 f282 	clz	r2, r2
 8004322:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004326:	40d3      	lsrs	r3, r2
 8004328:	4a46      	ldr	r2, [pc, #280]	; (8004444 <HAL_RCC_ClockConfig+0x17c>)
 800432a:	5cd3      	ldrb	r3, [r2, r3]
 800432c:	40d8      	lsrs	r0, r3
 800432e:	4b46      	ldr	r3, [pc, #280]	; (8004448 <HAL_RCC_ClockConfig+0x180>)
 8004330:	6018      	str	r0, [r3, #0]
 8004332:	200f      	movs	r0, #15
 8004334:	f7fe fce8 	bl	8002d08 <HAL_InitTick>
 8004338:	2000      	movs	r0, #0
 800433a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800433e:	6813      	ldr	r3, [r2, #0]
 8004340:	f023 0307 	bic.w	r3, r3, #7
 8004344:	430b      	orrs	r3, r1
 8004346:	6013      	str	r3, [r2, #0]
 8004348:	6813      	ldr	r3, [r2, #0]
 800434a:	f003 0307 	and.w	r3, r3, #7
 800434e:	4299      	cmp	r1, r3
 8004350:	d0c4      	beq.n	80042dc <HAL_RCC_ClockConfig+0x14>
 8004352:	2001      	movs	r0, #1
 8004354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004358:	4939      	ldr	r1, [pc, #228]	; (8004440 <HAL_RCC_ClockConfig+0x178>)
 800435a:	68b0      	ldr	r0, [r6, #8]
 800435c:	684b      	ldr	r3, [r1, #4]
 800435e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004362:	4303      	orrs	r3, r0
 8004364:	604b      	str	r3, [r1, #4]
 8004366:	e7bc      	b.n	80042e2 <HAL_RCC_ClockConfig+0x1a>
 8004368:	6872      	ldr	r2, [r6, #4]
 800436a:	4c35      	ldr	r4, [pc, #212]	; (8004440 <HAL_RCC_ClockConfig+0x178>)
 800436c:	2a01      	cmp	r2, #1
 800436e:	d128      	bne.n	80043c2 <HAL_RCC_ClockConfig+0xfa>
 8004370:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8004374:	fa93 f1a3 	rbit	r1, r3
 8004378:	6821      	ldr	r1, [r4, #0]
 800437a:	fa93 f3a3 	rbit	r3, r3
 800437e:	fab3 f383 	clz	r3, r3
 8004382:	f003 031f 	and.w	r3, r3, #31
 8004386:	fa02 f303 	lsl.w	r3, r2, r3
 800438a:	420b      	tst	r3, r1
 800438c:	d0e1      	beq.n	8004352 <HAL_RCC_ClockConfig+0x8a>
 800438e:	6863      	ldr	r3, [r4, #4]
 8004390:	f023 0303 	bic.w	r3, r3, #3
 8004394:	431a      	orrs	r2, r3
 8004396:	6062      	str	r2, [r4, #4]
 8004398:	f000 f9ca 	bl	8004730 <HAL_GetTick>
 800439c:	6873      	ldr	r3, [r6, #4]
 800439e:	2b01      	cmp	r3, #1
 80043a0:	4607      	mov	r7, r0
 80043a2:	f241 3888 	movw	r8, #5000	; 0x1388
 80043a6:	d11f      	bne.n	80043e8 <HAL_RCC_ClockConfig+0x120>
 80043a8:	6863      	ldr	r3, [r4, #4]
 80043aa:	f003 030c 	and.w	r3, r3, #12
 80043ae:	2b04      	cmp	r3, #4
 80043b0:	d099      	beq.n	80042e6 <HAL_RCC_ClockConfig+0x1e>
 80043b2:	f000 f9bd 	bl	8004730 <HAL_GetTick>
 80043b6:	1bc0      	subs	r0, r0, r7
 80043b8:	4540      	cmp	r0, r8
 80043ba:	d9f5      	bls.n	80043a8 <HAL_RCC_ClockConfig+0xe0>
 80043bc:	2003      	movs	r0, #3
 80043be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043c2:	2a02      	cmp	r2, #2
 80043c4:	bf0c      	ite	eq
 80043c6:	f04f 7300 	moveq.w	r3, #33554432	; 0x2000000
 80043ca:	2302      	movne	r3, #2
 80043cc:	fa93 f1a3 	rbit	r1, r3
 80043d0:	6820      	ldr	r0, [r4, #0]
 80043d2:	fa93 f3a3 	rbit	r3, r3
 80043d6:	fab3 f383 	clz	r3, r3
 80043da:	f003 031f 	and.w	r3, r3, #31
 80043de:	2101      	movs	r1, #1
 80043e0:	fa01 f303 	lsl.w	r3, r1, r3
 80043e4:	4203      	tst	r3, r0
 80043e6:	e7d1      	b.n	800438c <HAL_RCC_ClockConfig+0xc4>
 80043e8:	2b02      	cmp	r3, #2
 80043ea:	d110      	bne.n	800440e <HAL_RCC_ClockConfig+0x146>
 80043ec:	6863      	ldr	r3, [r4, #4]
 80043ee:	f003 030c 	and.w	r3, r3, #12
 80043f2:	2b08      	cmp	r3, #8
 80043f4:	f43f af77 	beq.w	80042e6 <HAL_RCC_ClockConfig+0x1e>
 80043f8:	f000 f99a 	bl	8004730 <HAL_GetTick>
 80043fc:	1bc0      	subs	r0, r0, r7
 80043fe:	4540      	cmp	r0, r8
 8004400:	d9f4      	bls.n	80043ec <HAL_RCC_ClockConfig+0x124>
 8004402:	e7db      	b.n	80043bc <HAL_RCC_ClockConfig+0xf4>
 8004404:	f000 f994 	bl	8004730 <HAL_GetTick>
 8004408:	1bc0      	subs	r0, r0, r7
 800440a:	4540      	cmp	r0, r8
 800440c:	d8d6      	bhi.n	80043bc <HAL_RCC_ClockConfig+0xf4>
 800440e:	6863      	ldr	r3, [r4, #4]
 8004410:	f013 0f0c 	tst.w	r3, #12
 8004414:	d1f6      	bne.n	8004404 <HAL_RCC_ClockConfig+0x13c>
 8004416:	e766      	b.n	80042e6 <HAL_RCC_ClockConfig+0x1e>
 8004418:	6813      	ldr	r3, [r2, #0]
 800441a:	f023 0307 	bic.w	r3, r3, #7
 800441e:	432b      	orrs	r3, r5
 8004420:	6013      	str	r3, [r2, #0]
 8004422:	6813      	ldr	r3, [r2, #0]
 8004424:	f003 0307 	and.w	r3, r3, #7
 8004428:	429d      	cmp	r5, r3
 800442a:	d192      	bne.n	8004352 <HAL_RCC_ClockConfig+0x8a>
 800442c:	e762      	b.n	80042f4 <HAL_RCC_ClockConfig+0x2c>
 800442e:	6863      	ldr	r3, [r4, #4]
 8004430:	68f1      	ldr	r1, [r6, #12]
 8004432:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004436:	430b      	orrs	r3, r1
 8004438:	6063      	str	r3, [r4, #4]
 800443a:	e761      	b.n	8004300 <HAL_RCC_ClockConfig+0x38>
 800443c:	40022000 	.word	0x40022000
 8004440:	40021000 	.word	0x40021000
 8004444:	08006aec 	.word	0x08006aec
 8004448:	200001b0 	.word	0x200001b0

0800444c <HAL_RCC_GetPCLK1Freq>:
 800444c:	4b08      	ldr	r3, [pc, #32]	; (8004470 <HAL_RCC_GetPCLK1Freq+0x24>)
 800444e:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8004452:	685b      	ldr	r3, [r3, #4]
 8004454:	fa92 f2a2 	rbit	r2, r2
 8004458:	fab2 f282 	clz	r2, r2
 800445c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8004460:	40d3      	lsrs	r3, r2
 8004462:	4a04      	ldr	r2, [pc, #16]	; (8004474 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004464:	5cd3      	ldrb	r3, [r2, r3]
 8004466:	4a04      	ldr	r2, [pc, #16]	; (8004478 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8004468:	6810      	ldr	r0, [r2, #0]
 800446a:	40d8      	lsrs	r0, r3
 800446c:	4770      	bx	lr
 800446e:	bf00      	nop
 8004470:	40021000 	.word	0x40021000
 8004474:	08006afc 	.word	0x08006afc
 8004478:	200001b0 	.word	0x200001b0

0800447c <HAL_RCC_GetPCLK2Freq>:
 800447c:	4b08      	ldr	r3, [pc, #32]	; (80044a0 <HAL_RCC_GetPCLK2Freq+0x24>)
 800447e:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8004482:	685b      	ldr	r3, [r3, #4]
 8004484:	fa92 f2a2 	rbit	r2, r2
 8004488:	fab2 f282 	clz	r2, r2
 800448c:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 8004490:	40d3      	lsrs	r3, r2
 8004492:	4a04      	ldr	r2, [pc, #16]	; (80044a4 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004494:	5cd3      	ldrb	r3, [r2, r3]
 8004496:	4a04      	ldr	r2, [pc, #16]	; (80044a8 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8004498:	6810      	ldr	r0, [r2, #0]
 800449a:	40d8      	lsrs	r0, r3
 800449c:	4770      	bx	lr
 800449e:	bf00      	nop
 80044a0:	40021000 	.word	0x40021000
 80044a4:	08006afc 	.word	0x08006afc
 80044a8:	200001b0 	.word	0x200001b0

080044ac <HAL_RCC_GetClockConfig>:
 80044ac:	230f      	movs	r3, #15
 80044ae:	6003      	str	r3, [r0, #0]
 80044b0:	4b0b      	ldr	r3, [pc, #44]	; (80044e0 <HAL_RCC_GetClockConfig+0x34>)
 80044b2:	685a      	ldr	r2, [r3, #4]
 80044b4:	f002 0203 	and.w	r2, r2, #3
 80044b8:	6042      	str	r2, [r0, #4]
 80044ba:	685a      	ldr	r2, [r3, #4]
 80044bc:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80044c0:	6082      	str	r2, [r0, #8]
 80044c2:	685a      	ldr	r2, [r3, #4]
 80044c4:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80044c8:	60c2      	str	r2, [r0, #12]
 80044ca:	685b      	ldr	r3, [r3, #4]
 80044cc:	08db      	lsrs	r3, r3, #3
 80044ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80044d2:	6103      	str	r3, [r0, #16]
 80044d4:	4b03      	ldr	r3, [pc, #12]	; (80044e4 <HAL_RCC_GetClockConfig+0x38>)
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	f003 0307 	and.w	r3, r3, #7
 80044dc:	600b      	str	r3, [r1, #0]
 80044de:	4770      	bx	lr
 80044e0:	40021000 	.word	0x40021000
 80044e4:	40022000 	.word	0x40022000

080044e8 <HAL_NVIC_SetPriorityGrouping>:
 80044e8:	4a07      	ldr	r2, [pc, #28]	; (8004508 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80044ea:	68d3      	ldr	r3, [r2, #12]
 80044ec:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80044f0:	041b      	lsls	r3, r3, #16
 80044f2:	0c1b      	lsrs	r3, r3, #16
 80044f4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80044f8:	0200      	lsls	r0, r0, #8
 80044fa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80044fe:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
 8004502:	4303      	orrs	r3, r0
 8004504:	60d3      	str	r3, [r2, #12]
 8004506:	4770      	bx	lr
 8004508:	e000ed00 	.word	0xe000ed00

0800450c <HAL_CAN_ConfigFilter>:
 800450c:	6803      	ldr	r3, [r0, #0]
 800450e:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
 8004512:	b570      	push	{r4, r5, r6, lr}
 8004514:	f040 0001 	orr.w	r0, r0, #1
 8004518:	694c      	ldr	r4, [r1, #20]
 800451a:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
 800451e:	2201      	movs	r2, #1
 8004520:	f8d3 521c 	ldr.w	r5, [r3, #540]	; 0x21c
 8004524:	40a2      	lsls	r2, r4
 8004526:	43d0      	mvns	r0, r2
 8004528:	4005      	ands	r5, r0
 800452a:	f8c3 521c 	str.w	r5, [r3, #540]	; 0x21c
 800452e:	69cd      	ldr	r5, [r1, #28]
 8004530:	bb85      	cbnz	r5, 8004594 <HAL_CAN_ConfigFilter+0x88>
 8004532:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 8004536:	68ce      	ldr	r6, [r1, #12]
 8004538:	4005      	ands	r5, r0
 800453a:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 800453e:	888d      	ldrh	r5, [r1, #4]
 8004540:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 8004544:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004548:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 800454c:	688e      	ldr	r6, [r1, #8]
 800454e:	880d      	ldrh	r5, [r1, #0]
 8004550:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004554:	f8c4 5244 	str.w	r5, [r4, #580]	; 0x244
 8004558:	698c      	ldr	r4, [r1, #24]
 800455a:	bb6c      	cbnz	r4, 80045b8 <HAL_CAN_ConfigFilter+0xac>
 800455c:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 8004560:	4004      	ands	r4, r0
 8004562:	f8c3 4204 	str.w	r4, [r3, #516]	; 0x204
 8004566:	690c      	ldr	r4, [r1, #16]
 8004568:	bb54      	cbnz	r4, 80045c0 <HAL_CAN_ConfigFilter+0xb4>
 800456a:	f8d3 4214 	ldr.w	r4, [r3, #532]	; 0x214
 800456e:	4020      	ands	r0, r4
 8004570:	f8c3 0214 	str.w	r0, [r3, #532]	; 0x214
 8004574:	6a09      	ldr	r1, [r1, #32]
 8004576:	2901      	cmp	r1, #1
 8004578:	bf02      	ittt	eq
 800457a:	f8d3 121c 	ldreq.w	r1, [r3, #540]	; 0x21c
 800457e:	430a      	orreq	r2, r1
 8004580:	f8c3 221c 	streq.w	r2, [r3, #540]	; 0x21c
 8004584:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8004588:	f022 0201 	bic.w	r2, r2, #1
 800458c:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8004590:	2000      	movs	r0, #0
 8004592:	bd70      	pop	{r4, r5, r6, pc}
 8004594:	2d01      	cmp	r5, #1
 8004596:	d1df      	bne.n	8004558 <HAL_CAN_ConfigFilter+0x4c>
 8004598:	f8d3 520c 	ldr.w	r5, [r3, #524]	; 0x20c
 800459c:	680e      	ldr	r6, [r1, #0]
 800459e:	4315      	orrs	r5, r2
 80045a0:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 80045a4:	888d      	ldrh	r5, [r1, #4]
 80045a6:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
 80045aa:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80045ae:	f8c4 5240 	str.w	r5, [r4, #576]	; 0x240
 80045b2:	688e      	ldr	r6, [r1, #8]
 80045b4:	898d      	ldrh	r5, [r1, #12]
 80045b6:	e7cb      	b.n	8004550 <HAL_CAN_ConfigFilter+0x44>
 80045b8:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 80045bc:	4314      	orrs	r4, r2
 80045be:	e7d0      	b.n	8004562 <HAL_CAN_ConfigFilter+0x56>
 80045c0:	2c01      	cmp	r4, #1
 80045c2:	d1d7      	bne.n	8004574 <HAL_CAN_ConfigFilter+0x68>
 80045c4:	f8d3 0214 	ldr.w	r0, [r3, #532]	; 0x214
 80045c8:	4310      	orrs	r0, r2
 80045ca:	e7d1      	b.n	8004570 <HAL_CAN_ConfigFilter+0x64>

080045cc <HAL_CAN_MspInit>:
 80045cc:	4770      	bx	lr

080045ce <HAL_CAN_Init>:
 80045ce:	b570      	push	{r4, r5, r6, lr}
 80045d0:	4604      	mov	r4, r0
 80045d2:	2800      	cmp	r0, #0
 80045d4:	d072      	beq.n	80046bc <HAL_CAN_Init+0xee>
 80045d6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80045da:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80045de:	b91b      	cbnz	r3, 80045e8 <HAL_CAN_Init+0x1a>
 80045e0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 80045e4:	f7ff fff2 	bl	80045cc <HAL_CAN_MspInit>
 80045e8:	2302      	movs	r3, #2
 80045ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80045ee:	6823      	ldr	r3, [r4, #0]
 80045f0:	681a      	ldr	r2, [r3, #0]
 80045f2:	f022 0202 	bic.w	r2, r2, #2
 80045f6:	601a      	str	r2, [r3, #0]
 80045f8:	681a      	ldr	r2, [r3, #0]
 80045fa:	f042 0201 	orr.w	r2, r2, #1
 80045fe:	601a      	str	r2, [r3, #0]
 8004600:	f000 f896 	bl	8004730 <HAL_GetTick>
 8004604:	4606      	mov	r6, r0
 8004606:	6823      	ldr	r3, [r4, #0]
 8004608:	685d      	ldr	r5, [r3, #4]
 800460a:	f015 0501 	ands.w	r5, r5, #1
 800460e:	d057      	beq.n	80046c0 <HAL_CAN_Init+0xf2>
 8004610:	685a      	ldr	r2, [r3, #4]
 8004612:	07d1      	lsls	r1, r2, #31
 8004614:	d54f      	bpl.n	80046b6 <HAL_CAN_Init+0xe8>
 8004616:	69a2      	ldr	r2, [r4, #24]
 8004618:	2a01      	cmp	r2, #1
 800461a:	681a      	ldr	r2, [r3, #0]
 800461c:	bf0c      	ite	eq
 800461e:	f042 0280 	orreq.w	r2, r2, #128	; 0x80
 8004622:	f022 0280 	bicne.w	r2, r2, #128	; 0x80
 8004626:	601a      	str	r2, [r3, #0]
 8004628:	69e2      	ldr	r2, [r4, #28]
 800462a:	2a01      	cmp	r2, #1
 800462c:	681a      	ldr	r2, [r3, #0]
 800462e:	bf0c      	ite	eq
 8004630:	f042 0240 	orreq.w	r2, r2, #64	; 0x40
 8004634:	f022 0240 	bicne.w	r2, r2, #64	; 0x40
 8004638:	601a      	str	r2, [r3, #0]
 800463a:	6a22      	ldr	r2, [r4, #32]
 800463c:	2a01      	cmp	r2, #1
 800463e:	681a      	ldr	r2, [r3, #0]
 8004640:	bf0c      	ite	eq
 8004642:	f042 0220 	orreq.w	r2, r2, #32
 8004646:	f022 0220 	bicne.w	r2, r2, #32
 800464a:	601a      	str	r2, [r3, #0]
 800464c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800464e:	2a01      	cmp	r2, #1
 8004650:	681a      	ldr	r2, [r3, #0]
 8004652:	bf0c      	ite	eq
 8004654:	f042 0210 	orreq.w	r2, r2, #16
 8004658:	f022 0210 	bicne.w	r2, r2, #16
 800465c:	601a      	str	r2, [r3, #0]
 800465e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004660:	2a01      	cmp	r2, #1
 8004662:	681a      	ldr	r2, [r3, #0]
 8004664:	bf0c      	ite	eq
 8004666:	f042 0208 	orreq.w	r2, r2, #8
 800466a:	f022 0208 	bicne.w	r2, r2, #8
 800466e:	601a      	str	r2, [r3, #0]
 8004670:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004672:	2a01      	cmp	r2, #1
 8004674:	681a      	ldr	r2, [r3, #0]
 8004676:	bf0c      	ite	eq
 8004678:	f042 0204 	orreq.w	r2, r2, #4
 800467c:	f022 0204 	bicne.w	r2, r2, #4
 8004680:	601a      	str	r2, [r3, #0]
 8004682:	68e1      	ldr	r1, [r4, #12]
 8004684:	68a2      	ldr	r2, [r4, #8]
 8004686:	430a      	orrs	r2, r1
 8004688:	6921      	ldr	r1, [r4, #16]
 800468a:	430a      	orrs	r2, r1
 800468c:	6961      	ldr	r1, [r4, #20]
 800468e:	430a      	orrs	r2, r1
 8004690:	6861      	ldr	r1, [r4, #4]
 8004692:	3901      	subs	r1, #1
 8004694:	430a      	orrs	r2, r1
 8004696:	61da      	str	r2, [r3, #28]
 8004698:	681a      	ldr	r2, [r3, #0]
 800469a:	f022 0201 	bic.w	r2, r2, #1
 800469e:	601a      	str	r2, [r3, #0]
 80046a0:	f000 f846 	bl	8004730 <HAL_GetTick>
 80046a4:	4605      	mov	r5, r0
 80046a6:	6823      	ldr	r3, [r4, #0]
 80046a8:	685a      	ldr	r2, [r3, #4]
 80046aa:	07d2      	lsls	r2, r2, #31
 80046ac:	d413      	bmi.n	80046d6 <HAL_CAN_Init+0x108>
 80046ae:	6858      	ldr	r0, [r3, #4]
 80046b0:	f010 0001 	ands.w	r0, r0, #1
 80046b4:	d01b      	beq.n	80046ee <HAL_CAN_Init+0x120>
 80046b6:	2304      	movs	r3, #4
 80046b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80046bc:	2001      	movs	r0, #1
 80046be:	bd70      	pop	{r4, r5, r6, pc}
 80046c0:	f000 f836 	bl	8004730 <HAL_GetTick>
 80046c4:	1b80      	subs	r0, r0, r6
 80046c6:	280a      	cmp	r0, #10
 80046c8:	d99d      	bls.n	8004606 <HAL_CAN_Init+0x38>
 80046ca:	2003      	movs	r0, #3
 80046cc:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 80046d0:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 80046d4:	bd70      	pop	{r4, r5, r6, pc}
 80046d6:	f000 f82b 	bl	8004730 <HAL_GetTick>
 80046da:	1b40      	subs	r0, r0, r5
 80046dc:	280a      	cmp	r0, #10
 80046de:	d9e2      	bls.n	80046a6 <HAL_CAN_Init+0xd8>
 80046e0:	2003      	movs	r0, #3
 80046e2:	2300      	movs	r3, #0
 80046e4:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 80046e8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80046ec:	bd70      	pop	{r4, r5, r6, pc}
 80046ee:	2301      	movs	r3, #1
 80046f0:	63e0      	str	r0, [r4, #60]	; 0x3c
 80046f2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 80046f6:	bd70      	pop	{r4, r5, r6, pc}

080046f8 <HAL_MspInit>:
 80046f8:	4770      	bx	lr
	...

080046fc <HAL_Init>:
 80046fc:	4a07      	ldr	r2, [pc, #28]	; (800471c <HAL_Init+0x20>)
 80046fe:	b508      	push	{r3, lr}
 8004700:	6813      	ldr	r3, [r2, #0]
 8004702:	f043 0310 	orr.w	r3, r3, #16
 8004706:	6013      	str	r3, [r2, #0]
 8004708:	2003      	movs	r0, #3
 800470a:	f7ff feed 	bl	80044e8 <HAL_NVIC_SetPriorityGrouping>
 800470e:	200f      	movs	r0, #15
 8004710:	f7fe fafa 	bl	8002d08 <HAL_InitTick>
 8004714:	f7ff fff0 	bl	80046f8 <HAL_MspInit>
 8004718:	2000      	movs	r0, #0
 800471a:	bd08      	pop	{r3, pc}
 800471c:	40022000 	.word	0x40022000

08004720 <HAL_IncTick>:
 8004720:	4a02      	ldr	r2, [pc, #8]	; (800472c <HAL_IncTick+0xc>)
 8004722:	6813      	ldr	r3, [r2, #0]
 8004724:	3301      	adds	r3, #1
 8004726:	6013      	str	r3, [r2, #0]
 8004728:	4770      	bx	lr
 800472a:	bf00      	nop
 800472c:	2000274c 	.word	0x2000274c

08004730 <HAL_GetTick>:
 8004730:	4b01      	ldr	r3, [pc, #4]	; (8004738 <HAL_GetTick+0x8>)
 8004732:	6818      	ldr	r0, [r3, #0]
 8004734:	4770      	bx	lr
 8004736:	bf00      	nop
 8004738:	2000274c 	.word	0x2000274c

0800473c <HAL_TIM_OC_MspInit>:
 800473c:	4770      	bx	lr
	...

08004740 <TIM_Base_SetConfig>:
 8004740:	4a32      	ldr	r2, [pc, #200]	; (800480c <TIM_Base_SetConfig+0xcc>)
 8004742:	6803      	ldr	r3, [r0, #0]
 8004744:	4290      	cmp	r0, r2
 8004746:	d012      	beq.n	800476e <TIM_Base_SetConfig+0x2e>
 8004748:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800474c:	d00f      	beq.n	800476e <TIM_Base_SetConfig+0x2e>
 800474e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8004752:	4290      	cmp	r0, r2
 8004754:	d00b      	beq.n	800476e <TIM_Base_SetConfig+0x2e>
 8004756:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800475a:	4290      	cmp	r0, r2
 800475c:	d007      	beq.n	800476e <TIM_Base_SetConfig+0x2e>
 800475e:	f502 3296 	add.w	r2, r2, #76800	; 0x12c00
 8004762:	4290      	cmp	r0, r2
 8004764:	d003      	beq.n	800476e <TIM_Base_SetConfig+0x2e>
 8004766:	f502 52e0 	add.w	r2, r2, #7168	; 0x1c00
 800476a:	4290      	cmp	r0, r2
 800476c:	d115      	bne.n	800479a <TIM_Base_SetConfig+0x5a>
 800476e:	684a      	ldr	r2, [r1, #4]
 8004770:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004774:	4313      	orrs	r3, r2
 8004776:	4a25      	ldr	r2, [pc, #148]	; (800480c <TIM_Base_SetConfig+0xcc>)
 8004778:	4290      	cmp	r0, r2
 800477a:	d01d      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 800477c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8004780:	d01a      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 8004782:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8004786:	4290      	cmp	r0, r2
 8004788:	d016      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 800478a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800478e:	4290      	cmp	r0, r2
 8004790:	d012      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 8004792:	f502 3296 	add.w	r2, r2, #76800	; 0x12c00
 8004796:	4290      	cmp	r0, r2
 8004798:	d00e      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 800479a:	4a1d      	ldr	r2, [pc, #116]	; (8004810 <TIM_Base_SetConfig+0xd0>)
 800479c:	4290      	cmp	r0, r2
 800479e:	d00b      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 80047a0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80047a4:	4290      	cmp	r0, r2
 80047a6:	d007      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 80047a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80047ac:	4290      	cmp	r0, r2
 80047ae:	d003      	beq.n	80047b8 <TIM_Base_SetConfig+0x78>
 80047b0:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 80047b4:	4290      	cmp	r0, r2
 80047b6:	d103      	bne.n	80047c0 <TIM_Base_SetConfig+0x80>
 80047b8:	68ca      	ldr	r2, [r1, #12]
 80047ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80047be:	4313      	orrs	r3, r2
 80047c0:	694a      	ldr	r2, [r1, #20]
 80047c2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80047c6:	4313      	orrs	r3, r2
 80047c8:	6003      	str	r3, [r0, #0]
 80047ca:	688b      	ldr	r3, [r1, #8]
 80047cc:	62c3      	str	r3, [r0, #44]	; 0x2c
 80047ce:	680b      	ldr	r3, [r1, #0]
 80047d0:	6283      	str	r3, [r0, #40]	; 0x28
 80047d2:	4b0e      	ldr	r3, [pc, #56]	; (800480c <TIM_Base_SetConfig+0xcc>)
 80047d4:	4298      	cmp	r0, r3
 80047d6:	d013      	beq.n	8004800 <TIM_Base_SetConfig+0xc0>
 80047d8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80047dc:	4298      	cmp	r0, r3
 80047de:	d00f      	beq.n	8004800 <TIM_Base_SetConfig+0xc0>
 80047e0:	f503 6340 	add.w	r3, r3, #3072	; 0xc00
 80047e4:	4298      	cmp	r0, r3
 80047e6:	d00b      	beq.n	8004800 <TIM_Base_SetConfig+0xc0>
 80047e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047ec:	4298      	cmp	r0, r3
 80047ee:	d007      	beq.n	8004800 <TIM_Base_SetConfig+0xc0>
 80047f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047f4:	4298      	cmp	r0, r3
 80047f6:	d003      	beq.n	8004800 <TIM_Base_SetConfig+0xc0>
 80047f8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80047fc:	4298      	cmp	r0, r3
 80047fe:	d101      	bne.n	8004804 <TIM_Base_SetConfig+0xc4>
 8004800:	690b      	ldr	r3, [r1, #16]
 8004802:	6303      	str	r3, [r0, #48]	; 0x30
 8004804:	2301      	movs	r3, #1
 8004806:	6143      	str	r3, [r0, #20]
 8004808:	4770      	bx	lr
 800480a:	bf00      	nop
 800480c:	40012c00 	.word	0x40012c00
 8004810:	40014000 	.word	0x40014000

08004814 <HAL_TIM_OC_Init>:
 8004814:	b510      	push	{r4, lr}
 8004816:	4604      	mov	r4, r0
 8004818:	b1a0      	cbz	r0, 8004844 <HAL_TIM_OC_Init+0x30>
 800481a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800481e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004822:	b91b      	cbnz	r3, 800482c <HAL_TIM_OC_Init+0x18>
 8004824:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
 8004828:	f7ff ff88 	bl	800473c <HAL_TIM_OC_MspInit>
 800482c:	2302      	movs	r3, #2
 800482e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004832:	6820      	ldr	r0, [r4, #0]
 8004834:	1d21      	adds	r1, r4, #4
 8004836:	f7ff ff83 	bl	8004740 <TIM_Base_SetConfig>
 800483a:	2301      	movs	r3, #1
 800483c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
 8004840:	2000      	movs	r0, #0
 8004842:	bd10      	pop	{r4, pc}
 8004844:	2001      	movs	r0, #1
 8004846:	bd10      	pop	{r4, pc}

08004848 <TIM_CCxChannelCmd>:
 8004848:	6a03      	ldr	r3, [r0, #32]
 800484a:	b510      	push	{r4, lr}
 800484c:	2401      	movs	r4, #1
 800484e:	408c      	lsls	r4, r1
 8004850:	ea23 0304 	bic.w	r3, r3, r4
 8004854:	6203      	str	r3, [r0, #32]
 8004856:	6a03      	ldr	r3, [r0, #32]
 8004858:	408a      	lsls	r2, r1
 800485a:	431a      	orrs	r2, r3
 800485c:	6202      	str	r2, [r0, #32]
 800485e:	bd10      	pop	{r4, pc}

08004860 <HAL_TIM_PWM_Start>:
 8004860:	b510      	push	{r4, lr}
 8004862:	4604      	mov	r4, r0
 8004864:	2201      	movs	r2, #1
 8004866:	6800      	ldr	r0, [r0, #0]
 8004868:	f7ff ffee 	bl	8004848 <TIM_CCxChannelCmd>
 800486c:	6823      	ldr	r3, [r4, #0]
 800486e:	4a10      	ldr	r2, [pc, #64]	; (80048b0 <HAL_TIM_PWM_Start+0x50>)
 8004870:	4293      	cmp	r3, r2
 8004872:	d013      	beq.n	800489c <HAL_TIM_PWM_Start+0x3c>
 8004874:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004878:	4293      	cmp	r3, r2
 800487a:	d00f      	beq.n	800489c <HAL_TIM_PWM_Start+0x3c>
 800487c:	f502 6240 	add.w	r2, r2, #3072	; 0xc00
 8004880:	4293      	cmp	r3, r2
 8004882:	d00b      	beq.n	800489c <HAL_TIM_PWM_Start+0x3c>
 8004884:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004888:	4293      	cmp	r3, r2
 800488a:	d007      	beq.n	800489c <HAL_TIM_PWM_Start+0x3c>
 800488c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004890:	4293      	cmp	r3, r2
 8004892:	d003      	beq.n	800489c <HAL_TIM_PWM_Start+0x3c>
 8004894:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8004898:	4293      	cmp	r3, r2
 800489a:	d103      	bne.n	80048a4 <HAL_TIM_PWM_Start+0x44>
 800489c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800489e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80048a2:	645a      	str	r2, [r3, #68]	; 0x44
 80048a4:	681a      	ldr	r2, [r3, #0]
 80048a6:	f042 0201 	orr.w	r2, r2, #1
 80048aa:	601a      	str	r2, [r3, #0]
 80048ac:	2000      	movs	r0, #0
 80048ae:	bd10      	pop	{r4, pc}
 80048b0:	40012c00 	.word	0x40012c00

080048b4 <HAL_TIM_OC_Start>:
 80048b4:	f7ff bfd4 	b.w	8004860 <HAL_TIM_PWM_Start>

080048b8 <HAL_UART_MspInit>:
 80048b8:	4770      	bx	lr
	...

080048bc <UART_SetConfig>:
 80048bc:	b538      	push	{r3, r4, r5, lr}
 80048be:	4604      	mov	r4, r0
 80048c0:	6805      	ldr	r5, [r0, #0]
 80048c2:	6921      	ldr	r1, [r4, #16]
 80048c4:	68a2      	ldr	r2, [r4, #8]
 80048c6:	69c3      	ldr	r3, [r0, #28]
 80048c8:	6828      	ldr	r0, [r5, #0]
 80048ca:	430a      	orrs	r2, r1
 80048cc:	6961      	ldr	r1, [r4, #20]
 80048ce:	430a      	orrs	r2, r1
 80048d0:	4977      	ldr	r1, [pc, #476]	; (8004ab0 <UART_SetConfig+0x1f4>)
 80048d2:	431a      	orrs	r2, r3
 80048d4:	4001      	ands	r1, r0
 80048d6:	430a      	orrs	r2, r1
 80048d8:	602a      	str	r2, [r5, #0]
 80048da:	686a      	ldr	r2, [r5, #4]
 80048dc:	68e1      	ldr	r1, [r4, #12]
 80048de:	6a20      	ldr	r0, [r4, #32]
 80048e0:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 80048e4:	430a      	orrs	r2, r1
 80048e6:	606a      	str	r2, [r5, #4]
 80048e8:	68a9      	ldr	r1, [r5, #8]
 80048ea:	69a2      	ldr	r2, [r4, #24]
 80048ec:	f421 6130 	bic.w	r1, r1, #2816	; 0xb00
 80048f0:	4302      	orrs	r2, r0
 80048f2:	430a      	orrs	r2, r1
 80048f4:	60aa      	str	r2, [r5, #8]
 80048f6:	4a6f      	ldr	r2, [pc, #444]	; (8004ab4 <UART_SetConfig+0x1f8>)
 80048f8:	4295      	cmp	r5, r2
 80048fa:	d112      	bne.n	8004922 <UART_SetConfig+0x66>
 80048fc:	f502 4258 	add.w	r2, r2, #55296	; 0xd800
 8004900:	496d      	ldr	r1, [pc, #436]	; (8004ab8 <UART_SetConfig+0x1fc>)
 8004902:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8004904:	f002 0203 	and.w	r2, r2, #3
 8004908:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800490c:	5c8a      	ldrb	r2, [r1, r2]
 800490e:	d066      	beq.n	80049de <UART_SetConfig+0x122>
 8004910:	2a08      	cmp	r2, #8
 8004912:	d819      	bhi.n	8004948 <UART_SetConfig+0x8c>
 8004914:	e8df f002 	tbb	[pc, r2]
 8004918:	189e92c2 	.word	0x189e92c2
 800491c:	181818a9 	.word	0x181818a9
 8004920:	ac          	.byte	0xac
 8004921:	00          	.byte	0x00
 8004922:	4a66      	ldr	r2, [pc, #408]	; (8004abc <UART_SetConfig+0x200>)
 8004924:	4295      	cmp	r5, r2
 8004926:	d124      	bne.n	8004972 <UART_SetConfig+0xb6>
 8004928:	f502 32e6 	add.w	r2, r2, #117760	; 0x1cc00
 800492c:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800492e:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8004932:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8004936:	f000 80a0 	beq.w	8004a7a <UART_SetConfig+0x1be>
 800493a:	d807      	bhi.n	800494c <UART_SetConfig+0x90>
 800493c:	2a00      	cmp	r2, #0
 800493e:	f000 80aa 	beq.w	8004a96 <UART_SetConfig+0x1da>
 8004942:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004946:	d076      	beq.n	8004a36 <UART_SetConfig+0x17a>
 8004948:	2001      	movs	r0, #1
 800494a:	bd38      	pop	{r3, r4, r5, pc}
 800494c:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
 8004950:	f000 8099 	beq.w	8004a86 <UART_SetConfig+0x1ca>
 8004954:	f5b2 3f40 	cmp.w	r2, #196608	; 0x30000
 8004958:	d1f3      	bne.n	8004942 <UART_SetConfig+0x86>
 800495a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800495e:	d179      	bne.n	8004a54 <UART_SetConfig+0x198>
 8004960:	6860      	ldr	r0, [r4, #4]
 8004962:	0843      	lsrs	r3, r0, #1
 8004964:	f503 0374 	add.w	r3, r3, #15990784	; 0xf40000
 8004968:	f503 5310 	add.w	r3, r3, #9216	; 0x2400
 800496c:	fbb3 f3f0 	udiv	r3, r3, r0
 8004970:	e054      	b.n	8004a1c <UART_SetConfig+0x160>
 8004972:	4a53      	ldr	r2, [pc, #332]	; (8004ac0 <UART_SetConfig+0x204>)
 8004974:	4295      	cmp	r5, r2
 8004976:	d10e      	bne.n	8004996 <UART_SetConfig+0xda>
 8004978:	f502 32e4 	add.w	r2, r2, #116736	; 0x1c800
 800497c:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800497e:	f402 2240 	and.w	r2, r2, #786432	; 0xc0000
 8004982:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 8004986:	d078      	beq.n	8004a7a <UART_SetConfig+0x1be>
 8004988:	d9d8      	bls.n	800493c <UART_SetConfig+0x80>
 800498a:	f5b2 2f00 	cmp.w	r2, #524288	; 0x80000
 800498e:	d07a      	beq.n	8004a86 <UART_SetConfig+0x1ca>
 8004990:	f5b2 2f40 	cmp.w	r2, #786432	; 0xc0000
 8004994:	e7e0      	b.n	8004958 <UART_SetConfig+0x9c>
 8004996:	4a4b      	ldr	r2, [pc, #300]	; (8004ac4 <UART_SetConfig+0x208>)
 8004998:	4295      	cmp	r5, r2
 800499a:	d10e      	bne.n	80049ba <UART_SetConfig+0xfe>
 800499c:	f502 32e2 	add.w	r2, r2, #115712	; 0x1c400
 80049a0:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80049a2:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80049a6:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 80049aa:	d066      	beq.n	8004a7a <UART_SetConfig+0x1be>
 80049ac:	d9c6      	bls.n	800493c <UART_SetConfig+0x80>
 80049ae:	f5b2 1f00 	cmp.w	r2, #2097152	; 0x200000
 80049b2:	d068      	beq.n	8004a86 <UART_SetConfig+0x1ca>
 80049b4:	f5b2 1f40 	cmp.w	r2, #3145728	; 0x300000
 80049b8:	e7ce      	b.n	8004958 <UART_SetConfig+0x9c>
 80049ba:	4a43      	ldr	r2, [pc, #268]	; (8004ac8 <UART_SetConfig+0x20c>)
 80049bc:	4295      	cmp	r5, r2
 80049be:	d1c0      	bne.n	8004942 <UART_SetConfig+0x86>
 80049c0:	f502 32e0 	add.w	r2, r2, #114688	; 0x1c000
 80049c4:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80049c6:	f402 0240 	and.w	r2, r2, #12582912	; 0xc00000
 80049ca:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 80049ce:	d054      	beq.n	8004a7a <UART_SetConfig+0x1be>
 80049d0:	d9b4      	bls.n	800493c <UART_SetConfig+0x80>
 80049d2:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 80049d6:	d056      	beq.n	8004a86 <UART_SetConfig+0x1ca>
 80049d8:	f5b2 0f40 	cmp.w	r2, #12582912	; 0xc00000
 80049dc:	e7bc      	b.n	8004958 <UART_SetConfig+0x9c>
 80049de:	2a08      	cmp	r2, #8
 80049e0:	d829      	bhi.n	8004a36 <UART_SetConfig+0x17a>
 80049e2:	a301      	add	r3, pc, #4	; (adr r3, 80049e8 <UART_SetConfig+0x12c>)
 80049e4:	f853 f022 	ldr.w	pc, [r3, r2, lsl #2]
 80049e8:	08004a0d 	.word	0x08004a0d
 80049ec:	08004a31 	.word	0x08004a31
 80049f0:	08004961 	.word	0x08004961
 80049f4:	08004a37 	.word	0x08004a37
 80049f8:	08004a81 	.word	0x08004a81
 80049fc:	08004a37 	.word	0x08004a37
 8004a00:	08004a37 	.word	0x08004a37
 8004a04:	08004a37 	.word	0x08004a37
 8004a08:	08004a8d 	.word	0x08004a8d
 8004a0c:	f7ff fd1e 	bl	800444c <HAL_RCC_GetPCLK1Freq>
 8004a10:	6861      	ldr	r1, [r4, #4]
 8004a12:	084a      	lsrs	r2, r1, #1
 8004a14:	eb02 0340 	add.w	r3, r2, r0, lsl #1
 8004a18:	fbb3 f3f1 	udiv	r3, r3, r1
 8004a1c:	b29b      	uxth	r3, r3
 8004a1e:	2000      	movs	r0, #0
 8004a20:	f023 020f 	bic.w	r2, r3, #15
 8004a24:	6821      	ldr	r1, [r4, #0]
 8004a26:	f3c3 0342 	ubfx	r3, r3, #1, #3
 8004a2a:	4313      	orrs	r3, r2
 8004a2c:	60cb      	str	r3, [r1, #12]
 8004a2e:	bd38      	pop	{r3, r4, r5, pc}
 8004a30:	f7ff fd24 	bl	800447c <HAL_RCC_GetPCLK2Freq>
 8004a34:	e7ec      	b.n	8004a10 <UART_SetConfig+0x154>
 8004a36:	2001      	movs	r0, #1
 8004a38:	2300      	movs	r3, #0
 8004a3a:	e7f1      	b.n	8004a20 <UART_SetConfig+0x164>
 8004a3c:	f7ff fd1e 	bl	800447c <HAL_RCC_GetPCLK2Freq>
 8004a40:	6863      	ldr	r3, [r4, #4]
 8004a42:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004a46:	fbb0 f0f3 	udiv	r0, r0, r3
 8004a4a:	4b1a      	ldr	r3, [pc, #104]	; (8004ab4 <UART_SetConfig+0x1f8>)
 8004a4c:	b280      	uxth	r0, r0
 8004a4e:	60d8      	str	r0, [r3, #12]
 8004a50:	2000      	movs	r0, #0
 8004a52:	bd38      	pop	{r3, r4, r5, pc}
 8004a54:	6862      	ldr	r2, [r4, #4]
 8004a56:	0853      	lsrs	r3, r2, #1
 8004a58:	f503 03f4 	add.w	r3, r3, #7995392	; 0x7a0000
 8004a5c:	f503 5390 	add.w	r3, r3, #4608	; 0x1200
 8004a60:	fbb3 f3f2 	udiv	r3, r3, r2
 8004a64:	b29b      	uxth	r3, r3
 8004a66:	60eb      	str	r3, [r5, #12]
 8004a68:	e7f2      	b.n	8004a50 <UART_SetConfig+0x194>
 8004a6a:	f7ff fc01 	bl	8004270 <HAL_RCC_GetSysClockFreq>
 8004a6e:	e017      	b.n	8004aa0 <UART_SetConfig+0x1e4>
 8004a70:	6862      	ldr	r2, [r4, #4]
 8004a72:	0853      	lsrs	r3, r2, #1
 8004a74:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8004a78:	e7f2      	b.n	8004a60 <UART_SetConfig+0x1a4>
 8004a7a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004a7e:	d1f4      	bne.n	8004a6a <UART_SetConfig+0x1ae>
 8004a80:	f7ff fbf6 	bl	8004270 <HAL_RCC_GetSysClockFreq>
 8004a84:	e7c4      	b.n	8004a10 <UART_SetConfig+0x154>
 8004a86:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004a8a:	d1f1      	bne.n	8004a70 <UART_SetConfig+0x1b4>
 8004a8c:	6860      	ldr	r0, [r4, #4]
 8004a8e:	0843      	lsrs	r3, r0, #1
 8004a90:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 8004a94:	e76a      	b.n	800496c <UART_SetConfig+0xb0>
 8004a96:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004a9a:	d0b7      	beq.n	8004a0c <UART_SetConfig+0x150>
 8004a9c:	f7ff fcd6 	bl	800444c <HAL_RCC_GetPCLK1Freq>
 8004aa0:	6863      	ldr	r3, [r4, #4]
 8004aa2:	eb00 0053 	add.w	r0, r0, r3, lsr #1
 8004aa6:	fbb0 f0f3 	udiv	r0, r0, r3
 8004aaa:	b280      	uxth	r0, r0
 8004aac:	60e8      	str	r0, [r5, #12]
 8004aae:	e7cf      	b.n	8004a50 <UART_SetConfig+0x194>
 8004ab0:	efff69f3 	.word	0xefff69f3
 8004ab4:	40013800 	.word	0x40013800
 8004ab8:	08006b24 	.word	0x08006b24
 8004abc:	40004400 	.word	0x40004400
 8004ac0:	40004800 	.word	0x40004800
 8004ac4:	40004c00 	.word	0x40004c00
 8004ac8:	40005000 	.word	0x40005000

08004acc <UART_AdvFeatureConfig>:
 8004acc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004ace:	07da      	lsls	r2, r3, #31
 8004ad0:	b510      	push	{r4, lr}
 8004ad2:	d506      	bpl.n	8004ae2 <UART_AdvFeatureConfig+0x16>
 8004ad4:	6801      	ldr	r1, [r0, #0]
 8004ad6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8004ad8:	684a      	ldr	r2, [r1, #4]
 8004ada:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8004ade:	4322      	orrs	r2, r4
 8004ae0:	604a      	str	r2, [r1, #4]
 8004ae2:	079c      	lsls	r4, r3, #30
 8004ae4:	d506      	bpl.n	8004af4 <UART_AdvFeatureConfig+0x28>
 8004ae6:	6801      	ldr	r1, [r0, #0]
 8004ae8:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8004aea:	684a      	ldr	r2, [r1, #4]
 8004aec:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004af0:	4322      	orrs	r2, r4
 8004af2:	604a      	str	r2, [r1, #4]
 8004af4:	0759      	lsls	r1, r3, #29
 8004af6:	d506      	bpl.n	8004b06 <UART_AdvFeatureConfig+0x3a>
 8004af8:	6801      	ldr	r1, [r0, #0]
 8004afa:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8004afc:	684a      	ldr	r2, [r1, #4]
 8004afe:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004b02:	4322      	orrs	r2, r4
 8004b04:	604a      	str	r2, [r1, #4]
 8004b06:	071a      	lsls	r2, r3, #28
 8004b08:	d506      	bpl.n	8004b18 <UART_AdvFeatureConfig+0x4c>
 8004b0a:	6801      	ldr	r1, [r0, #0]
 8004b0c:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8004b0e:	684a      	ldr	r2, [r1, #4]
 8004b10:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004b14:	4322      	orrs	r2, r4
 8004b16:	604a      	str	r2, [r1, #4]
 8004b18:	06dc      	lsls	r4, r3, #27
 8004b1a:	d506      	bpl.n	8004b2a <UART_AdvFeatureConfig+0x5e>
 8004b1c:	6801      	ldr	r1, [r0, #0]
 8004b1e:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8004b20:	688a      	ldr	r2, [r1, #8]
 8004b22:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004b26:	4322      	orrs	r2, r4
 8004b28:	608a      	str	r2, [r1, #8]
 8004b2a:	0699      	lsls	r1, r3, #26
 8004b2c:	d506      	bpl.n	8004b3c <UART_AdvFeatureConfig+0x70>
 8004b2e:	6801      	ldr	r1, [r0, #0]
 8004b30:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8004b32:	688a      	ldr	r2, [r1, #8]
 8004b34:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b38:	4322      	orrs	r2, r4
 8004b3a:	608a      	str	r2, [r1, #8]
 8004b3c:	065a      	lsls	r2, r3, #25
 8004b3e:	d50f      	bpl.n	8004b60 <UART_AdvFeatureConfig+0x94>
 8004b40:	6801      	ldr	r1, [r0, #0]
 8004b42:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004b44:	684a      	ldr	r2, [r1, #4]
 8004b46:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
 8004b4a:	4322      	orrs	r2, r4
 8004b4c:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8004b50:	604a      	str	r2, [r1, #4]
 8004b52:	d105      	bne.n	8004b60 <UART_AdvFeatureConfig+0x94>
 8004b54:	684a      	ldr	r2, [r1, #4]
 8004b56:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8004b58:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
 8004b5c:	4322      	orrs	r2, r4
 8004b5e:	604a      	str	r2, [r1, #4]
 8004b60:	061b      	lsls	r3, r3, #24
 8004b62:	d506      	bpl.n	8004b72 <UART_AdvFeatureConfig+0xa6>
 8004b64:	6802      	ldr	r2, [r0, #0]
 8004b66:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8004b68:	6853      	ldr	r3, [r2, #4]
 8004b6a:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 8004b6e:	430b      	orrs	r3, r1
 8004b70:	6053      	str	r3, [r2, #4]
 8004b72:	bd10      	pop	{r4, pc}

08004b74 <UART_WaitOnFlagUntilTimeout>:
 8004b74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b78:	9d06      	ldr	r5, [sp, #24]
 8004b7a:	4604      	mov	r4, r0
 8004b7c:	460f      	mov	r7, r1
 8004b7e:	4616      	mov	r6, r2
 8004b80:	4698      	mov	r8, r3
 8004b82:	6821      	ldr	r1, [r4, #0]
 8004b84:	69ca      	ldr	r2, [r1, #28]
 8004b86:	ea37 0302 	bics.w	r3, r7, r2
 8004b8a:	bf0c      	ite	eq
 8004b8c:	2201      	moveq	r2, #1
 8004b8e:	2200      	movne	r2, #0
 8004b90:	42b2      	cmp	r2, r6
 8004b92:	d002      	beq.n	8004b9a <UART_WaitOnFlagUntilTimeout+0x26>
 8004b94:	2000      	movs	r0, #0
 8004b96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b9a:	1c6b      	adds	r3, r5, #1
 8004b9c:	d0f2      	beq.n	8004b84 <UART_WaitOnFlagUntilTimeout+0x10>
 8004b9e:	b99d      	cbnz	r5, 8004bc8 <UART_WaitOnFlagUntilTimeout+0x54>
 8004ba0:	6823      	ldr	r3, [r4, #0]
 8004ba2:	681a      	ldr	r2, [r3, #0]
 8004ba4:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004ba8:	601a      	str	r2, [r3, #0]
 8004baa:	689a      	ldr	r2, [r3, #8]
 8004bac:	f022 0201 	bic.w	r2, r2, #1
 8004bb0:	609a      	str	r2, [r3, #8]
 8004bb2:	2320      	movs	r3, #32
 8004bb4:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004bb8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004bbc:	2300      	movs	r3, #0
 8004bbe:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 8004bc2:	2003      	movs	r0, #3
 8004bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004bc8:	f7ff fdb2 	bl	8004730 <HAL_GetTick>
 8004bcc:	eba0 0008 	sub.w	r0, r0, r8
 8004bd0:	4285      	cmp	r5, r0
 8004bd2:	d2d6      	bcs.n	8004b82 <UART_WaitOnFlagUntilTimeout+0xe>
 8004bd4:	e7e4      	b.n	8004ba0 <UART_WaitOnFlagUntilTimeout+0x2c>

08004bd6 <UART_CheckIdleState>:
 8004bd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004bd8:	4604      	mov	r4, r0
 8004bda:	2600      	movs	r6, #0
 8004bdc:	66c6      	str	r6, [r0, #108]	; 0x6c
 8004bde:	f7ff fda7 	bl	8004730 <HAL_GetTick>
 8004be2:	6823      	ldr	r3, [r4, #0]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	071a      	lsls	r2, r3, #28
 8004be8:	4605      	mov	r5, r0
 8004bea:	d417      	bmi.n	8004c1c <UART_CheckIdleState+0x46>
 8004bec:	6823      	ldr	r3, [r4, #0]
 8004bee:	681b      	ldr	r3, [r3, #0]
 8004bf0:	075b      	lsls	r3, r3, #29
 8004bf2:	d50a      	bpl.n	8004c0a <UART_CheckIdleState+0x34>
 8004bf4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004bf8:	9300      	str	r3, [sp, #0]
 8004bfa:	2200      	movs	r2, #0
 8004bfc:	462b      	mov	r3, r5
 8004bfe:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004c02:	4620      	mov	r0, r4
 8004c04:	f7ff ffb6 	bl	8004b74 <UART_WaitOnFlagUntilTimeout>
 8004c08:	b9a0      	cbnz	r0, 8004c34 <UART_CheckIdleState+0x5e>
 8004c0a:	2320      	movs	r3, #32
 8004c0c:	2000      	movs	r0, #0
 8004c0e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004c12:	f884 0068 	strb.w	r0, [r4, #104]	; 0x68
 8004c16:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8004c1a:	e00c      	b.n	8004c36 <UART_CheckIdleState+0x60>
 8004c1c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8004c20:	9300      	str	r3, [sp, #0]
 8004c22:	4632      	mov	r2, r6
 8004c24:	4603      	mov	r3, r0
 8004c26:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8004c2a:	4620      	mov	r0, r4
 8004c2c:	f7ff ffa2 	bl	8004b74 <UART_WaitOnFlagUntilTimeout>
 8004c30:	2800      	cmp	r0, #0
 8004c32:	d0db      	beq.n	8004bec <UART_CheckIdleState+0x16>
 8004c34:	2003      	movs	r0, #3
 8004c36:	b002      	add	sp, #8
 8004c38:	bd70      	pop	{r4, r5, r6, pc}

08004c3a <HAL_UART_Init>:
 8004c3a:	b510      	push	{r4, lr}
 8004c3c:	4604      	mov	r4, r0
 8004c3e:	b360      	cbz	r0, 8004c9a <HAL_UART_Init+0x60>
 8004c40:	f890 3069 	ldrb.w	r3, [r0, #105]	; 0x69
 8004c44:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004c48:	b91b      	cbnz	r3, 8004c52 <HAL_UART_Init+0x18>
 8004c4a:	f880 2068 	strb.w	r2, [r0, #104]	; 0x68
 8004c4e:	f7ff fe33 	bl	80048b8 <HAL_UART_MspInit>
 8004c52:	6822      	ldr	r2, [r4, #0]
 8004c54:	2324      	movs	r3, #36	; 0x24
 8004c56:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8004c5a:	6813      	ldr	r3, [r2, #0]
 8004c5c:	f023 0301 	bic.w	r3, r3, #1
 8004c60:	6013      	str	r3, [r2, #0]
 8004c62:	4620      	mov	r0, r4
 8004c64:	f7ff fe2a 	bl	80048bc <UART_SetConfig>
 8004c68:	2801      	cmp	r0, #1
 8004c6a:	d016      	beq.n	8004c9a <HAL_UART_Init+0x60>
 8004c6c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004c6e:	b113      	cbz	r3, 8004c76 <HAL_UART_Init+0x3c>
 8004c70:	4620      	mov	r0, r4
 8004c72:	f7ff ff2b 	bl	8004acc <UART_AdvFeatureConfig>
 8004c76:	6823      	ldr	r3, [r4, #0]
 8004c78:	685a      	ldr	r2, [r3, #4]
 8004c7a:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8004c7e:	605a      	str	r2, [r3, #4]
 8004c80:	689a      	ldr	r2, [r3, #8]
 8004c82:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004c86:	609a      	str	r2, [r3, #8]
 8004c88:	681a      	ldr	r2, [r3, #0]
 8004c8a:	f042 0201 	orr.w	r2, r2, #1
 8004c8e:	4620      	mov	r0, r4
 8004c90:	601a      	str	r2, [r3, #0]
 8004c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004c96:	f7ff bf9e 	b.w	8004bd6 <UART_CheckIdleState>
 8004c9a:	2001      	movs	r0, #1
 8004c9c:	bd10      	pop	{r4, pc}

08004c9e <mbed::Ticker::handler()>:
 8004c9e:	6943      	ldr	r3, [r0, #20]
 8004ca0:	6841      	ldr	r1, [r0, #4]
 8004ca2:	b510      	push	{r4, lr}
 8004ca4:	4604      	mov	r4, r0
 8004ca6:	4419      	add	r1, r3
 8004ca8:	f000 fa7e 	bl	80051a8 <mbed::TimerEvent::insert(unsigned long)>
 8004cac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cae:	f104 0018 	add.w	r0, r4, #24
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004cb8:	4718      	bx	r3

08004cba <mbed::Ticker::setup(unsigned long)>:
 8004cba:	b538      	push	{r3, r4, r5, lr}
 8004cbc:	4604      	mov	r4, r0
 8004cbe:	460d      	mov	r5, r1
 8004cc0:	f7fc fcce 	bl	8001660 <core_util_critical_section_enter>
 8004cc4:	4620      	mov	r0, r4
 8004cc6:	f000 fa75 	bl	80051b4 <mbed::TimerEvent::remove()>
 8004cca:	6165      	str	r5, [r4, #20]
 8004ccc:	6920      	ldr	r0, [r4, #16]
 8004cce:	f7fc fc72 	bl	80015b6 <ticker_read>
 8004cd2:	1829      	adds	r1, r5, r0
 8004cd4:	4620      	mov	r0, r4
 8004cd6:	f000 fa67 	bl	80051a8 <mbed::TimerEvent::insert(unsigned long)>
 8004cda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004cde:	f7fc bcd5 	b.w	800168c <core_util_critical_section_exit>

08004ce2 <mbed::Ticker::detach()>:
 8004ce2:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8004ce4:	4606      	mov	r6, r0
 8004ce6:	f106 0418 	add.w	r4, r6, #24
 8004cea:	f7fc fcb9 	bl	8001660 <core_util_critical_section_enter>
 8004cee:	466d      	mov	r5, sp
 8004cf0:	4630      	mov	r0, r6
 8004cf2:	f000 fa5f 	bl	80051b4 <mbed::TimerEvent::remove()>
 8004cf6:	2300      	movs	r3, #0
 8004cf8:	42ac      	cmp	r4, r5
 8004cfa:	9303      	str	r3, [sp, #12]
 8004cfc:	d00b      	beq.n	8004d16 <mbed::Ticker::detach()+0x34>
 8004cfe:	4620      	mov	r0, r4
 8004d00:	f7fb fb4d 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8004d04:	b13c      	cbz	r4, 8004d16 <mbed::Ticker::detach()+0x34>
 8004d06:	9b03      	ldr	r3, [sp, #12]
 8004d08:	b11b      	cbz	r3, 8004d12 <mbed::Ticker::detach()+0x30>
 8004d0a:	685b      	ldr	r3, [r3, #4]
 8004d0c:	4669      	mov	r1, sp
 8004d0e:	4620      	mov	r0, r4
 8004d10:	4798      	blx	r3
 8004d12:	9b03      	ldr	r3, [sp, #12]
 8004d14:	6273      	str	r3, [r6, #36]	; 0x24
 8004d16:	4628      	mov	r0, r5
 8004d18:	f7fb fb41 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8004d1c:	f7fc fcb6 	bl	800168c <core_util_critical_section_exit>
 8004d20:	b004      	add	sp, #16
 8004d22:	bd70      	pop	{r4, r5, r6, pc}

08004d24 <mbed::RawSerial::lock()>:
 8004d24:	4770      	bx	lr
	...

08004d28 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004d28:	b510      	push	{r4, lr}
 8004d2a:	4604      	mov	r4, r0
 8004d2c:	f000 f986 	bl	800503c <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004d30:	4b01      	ldr	r3, [pc, #4]	; (8004d38 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004d32:	6023      	str	r3, [r4, #0]
 8004d34:	4620      	mov	r0, r4
 8004d36:	bd10      	pop	{r4, pc}
 8004d38:	08006b44 	.word	0x08006b44

08004d3c <mbed::RawSerial::~RawSerial()>:
 8004d3c:	b510      	push	{r4, lr}
 8004d3e:	4b03      	ldr	r3, [pc, #12]	; (8004d4c <mbed::RawSerial::~RawSerial()+0x10>)
 8004d40:	6003      	str	r3, [r0, #0]
 8004d42:	4604      	mov	r4, r0
 8004d44:	f7fc fa1a 	bl	800117c <mbed::SerialBase::~SerialBase()>
 8004d48:	4620      	mov	r0, r4
 8004d4a:	bd10      	pop	{r4, pc}
 8004d4c:	08006b44 	.word	0x08006b44

08004d50 <mbed::RawSerial::~RawSerial()>:
 8004d50:	b510      	push	{r4, lr}
 8004d52:	4604      	mov	r4, r0
 8004d54:	f7ff fff2 	bl	8004d3c <mbed::RawSerial::~RawSerial()>
 8004d58:	4620      	mov	r0, r4
 8004d5a:	f000 fbab 	bl	80054b4 <operator delete(void*)>
 8004d5e:	4620      	mov	r0, r4
 8004d60:	bd10      	pop	{r4, pc}

08004d62 <mbed::Timer::start()>:
 8004d62:	b510      	push	{r4, lr}
 8004d64:	4604      	mov	r4, r0
 8004d66:	f7fc fc7b 	bl	8001660 <core_util_critical_section_enter>
 8004d6a:	6823      	ldr	r3, [r4, #0]
 8004d6c:	b92b      	cbnz	r3, 8004d7a <mbed::Timer::start()+0x18>
 8004d6e:	68e0      	ldr	r0, [r4, #12]
 8004d70:	f7fc fc21 	bl	80015b6 <ticker_read>
 8004d74:	2301      	movs	r3, #1
 8004d76:	6060      	str	r0, [r4, #4]
 8004d78:	6023      	str	r3, [r4, #0]
 8004d7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d7e:	f7fc bc85 	b.w	800168c <core_util_critical_section_exit>

08004d82 <mbed::Timer::slicetime()>:
 8004d82:	b538      	push	{r3, r4, r5, lr}
 8004d84:	4605      	mov	r5, r0
 8004d86:	f7fc fc6b 	bl	8001660 <core_util_critical_section_enter>
 8004d8a:	682c      	ldr	r4, [r5, #0]
 8004d8c:	b124      	cbz	r4, 8004d98 <mbed::Timer::slicetime()+0x16>
 8004d8e:	68e8      	ldr	r0, [r5, #12]
 8004d90:	f7fc fc11 	bl	80015b6 <ticker_read>
 8004d94:	686c      	ldr	r4, [r5, #4]
 8004d96:	1b04      	subs	r4, r0, r4
 8004d98:	f7fc fc78 	bl	800168c <core_util_critical_section_exit>
 8004d9c:	4620      	mov	r0, r4
 8004d9e:	bd38      	pop	{r3, r4, r5, pc}

08004da0 <mbed::Timer::read_us()>:
 8004da0:	b538      	push	{r3, r4, r5, lr}
 8004da2:	4605      	mov	r5, r0
 8004da4:	f7fc fc5c 	bl	8001660 <core_util_critical_section_enter>
 8004da8:	4628      	mov	r0, r5
 8004daa:	68ac      	ldr	r4, [r5, #8]
 8004dac:	f7ff ffe9 	bl	8004d82 <mbed::Timer::slicetime()>
 8004db0:	4404      	add	r4, r0
 8004db2:	f7fc fc6b 	bl	800168c <core_util_critical_section_exit>
 8004db6:	4620      	mov	r0, r4
 8004db8:	bd38      	pop	{r3, r4, r5, pc}

08004dba <mbed::Timer::read_ms()>:
 8004dba:	b508      	push	{r3, lr}
 8004dbc:	f7ff fff0 	bl	8004da0 <mbed::Timer::read_us()>
 8004dc0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004dc4:	fb90 f0f3 	sdiv	r0, r0, r3
 8004dc8:	bd08      	pop	{r3, pc}

08004dca <mbed::Timer::reset()>:
 8004dca:	b510      	push	{r4, lr}
 8004dcc:	4604      	mov	r4, r0
 8004dce:	f7fc fc47 	bl	8001660 <core_util_critical_section_enter>
 8004dd2:	68e0      	ldr	r0, [r4, #12]
 8004dd4:	f7fc fbef 	bl	80015b6 <ticker_read>
 8004dd8:	2300      	movs	r3, #0
 8004dda:	6060      	str	r0, [r4, #4]
 8004ddc:	60a3      	str	r3, [r4, #8]
 8004dde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004de2:	f7fc bc53 	b.w	800168c <core_util_critical_section_exit>

08004de6 <mbed::Timer::Timer()>:
 8004de6:	2300      	movs	r3, #0
 8004de8:	b510      	push	{r4, lr}
 8004dea:	6003      	str	r3, [r0, #0]
 8004dec:	6043      	str	r3, [r0, #4]
 8004dee:	6083      	str	r3, [r0, #8]
 8004df0:	4604      	mov	r4, r0
 8004df2:	f7fc fb69 	bl	80014c8 <get_us_ticker_data>
 8004df6:	60e0      	str	r0, [r4, #12]
 8004df8:	4620      	mov	r0, r4
 8004dfa:	f7ff ffe6 	bl	8004dca <mbed::Timer::reset()>
 8004dfe:	4620      	mov	r0, r4
 8004e00:	bd10      	pop	{r4, pc}

08004e02 <mbed::donothing()>:
 8004e02:	4770      	bx	lr

08004e04 <mbed::CAN::_irq_handler(unsigned long, CanIrqType)>:
 8004e04:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004e08:	f102 000c 	add.w	r0, r2, #12
 8004e0c:	6993      	ldr	r3, [r2, #24]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	4718      	bx	r3

08004e12 <mbed::CAN::lock()>:
 8004e12:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004e16:	309c      	adds	r0, #156	; 0x9c
 8004e18:	f000 bb70 	b.w	80054fc <rtos::Mutex::lock(unsigned long)>

08004e1c <mbed::CAN::unlock()>:
 8004e1c:	309c      	adds	r0, #156	; 0x9c
 8004e1e:	f000 bb70 	b.w	8005502 <rtos::Mutex::unlock()>

08004e22 <mbed::CAN::frequency(int)>:
 8004e22:	b570      	push	{r4, r5, r6, lr}
 8004e24:	4605      	mov	r5, r0
 8004e26:	460e      	mov	r6, r1
 8004e28:	f855 3b04 	ldr.w	r3, [r5], #4
 8004e2c:	689b      	ldr	r3, [r3, #8]
 8004e2e:	4604      	mov	r4, r0
 8004e30:	4798      	blx	r3
 8004e32:	4631      	mov	r1, r6
 8004e34:	4628      	mov	r0, r5
 8004e36:	f7fe f979 	bl	800312c <can_frequency>
 8004e3a:	6823      	ldr	r3, [r4, #0]
 8004e3c:	4605      	mov	r5, r0
 8004e3e:	68db      	ldr	r3, [r3, #12]
 8004e40:	4620      	mov	r0, r4
 8004e42:	4798      	blx	r3
 8004e44:	4628      	mov	r0, r5
 8004e46:	bd70      	pop	{r4, r5, r6, pc}

08004e48 <mbed::CAN::write(mbed::CANMessage)>:
 8004e48:	b084      	sub	sp, #16
 8004e4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004e4c:	4606      	mov	r6, r0
 8004e4e:	ac07      	add	r4, sp, #28
 8004e50:	e884 000e 	stmia.w	r4, {r1, r2, r3}
 8004e54:	f856 3b04 	ldr.w	r3, [r6], #4
 8004e58:	689b      	ldr	r3, [r3, #8]
 8004e5a:	4605      	mov	r5, r0
 8004e5c:	4798      	blx	r3
 8004e5e:	2300      	movs	r3, #0
 8004e60:	9301      	str	r3, [sp, #4]
 8004e62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004e64:	9300      	str	r3, [sp, #0]
 8004e66:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 8004e6a:	4630      	mov	r0, r6
 8004e6c:	f7fe f9a4 	bl	80031b8 <can_write>
 8004e70:	682b      	ldr	r3, [r5, #0]
 8004e72:	4604      	mov	r4, r0
 8004e74:	68db      	ldr	r3, [r3, #12]
 8004e76:	4628      	mov	r0, r5
 8004e78:	4798      	blx	r3
 8004e7a:	4620      	mov	r0, r4
 8004e7c:	b002      	add	sp, #8
 8004e7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004e82:	b004      	add	sp, #16
 8004e84:	4770      	bx	lr

08004e86 <mbed::CAN::read(mbed::CANMessage&, int)>:
 8004e86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e88:	4605      	mov	r5, r0
 8004e8a:	460e      	mov	r6, r1
 8004e8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004e90:	4617      	mov	r7, r2
 8004e92:	689b      	ldr	r3, [r3, #8]
 8004e94:	4604      	mov	r4, r0
 8004e96:	4798      	blx	r3
 8004e98:	463a      	mov	r2, r7
 8004e9a:	4631      	mov	r1, r6
 8004e9c:	4628      	mov	r0, r5
 8004e9e:	f7fe f9dc 	bl	800325a <can_read>
 8004ea2:	6823      	ldr	r3, [r4, #0]
 8004ea4:	4605      	mov	r5, r0
 8004ea6:	68db      	ldr	r3, [r3, #12]
 8004ea8:	4620      	mov	r0, r4
 8004eaa:	4798      	blx	r3
 8004eac:	4628      	mov	r0, r5
 8004eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004eb0 <mbed::CAN::mode(mbed::CAN::Mode)>:
 8004eb0:	b570      	push	{r4, r5, r6, lr}
 8004eb2:	4605      	mov	r5, r0
 8004eb4:	460e      	mov	r6, r1
 8004eb6:	f855 3b04 	ldr.w	r3, [r5], #4
 8004eba:	689b      	ldr	r3, [r3, #8]
 8004ebc:	4604      	mov	r4, r0
 8004ebe:	4798      	blx	r3
 8004ec0:	4631      	mov	r1, r6
 8004ec2:	4628      	mov	r0, r5
 8004ec4:	f7fe fa14 	bl	80032f0 <can_mode>
 8004ec8:	6823      	ldr	r3, [r4, #0]
 8004eca:	4605      	mov	r5, r0
 8004ecc:	68db      	ldr	r3, [r3, #12]
 8004ece:	4620      	mov	r0, r4
 8004ed0:	4798      	blx	r3
 8004ed2:	4628      	mov	r0, r5
 8004ed4:	bd70      	pop	{r4, r5, r6, pc}
	...

08004ed8 <mbed::CAN::~CAN()>:
 8004ed8:	b570      	push	{r4, r5, r6, lr}
 8004eda:	4604      	mov	r4, r0
 8004edc:	4b0d      	ldr	r3, [pc, #52]	; (8004f14 <mbed::CAN::~CAN()+0x3c>)
 8004ede:	f844 3b04 	str.w	r3, [r4], #4
 8004ee2:	4605      	mov	r5, r0
 8004ee4:	4620      	mov	r0, r4
 8004ee6:	f7fe f8fd 	bl	80030e4 <can_irq_free>
 8004eea:	4620      	mov	r0, r4
 8004eec:	f105 049c 	add.w	r4, r5, #156	; 0x9c
 8004ef0:	f7fe f906 	bl	8003100 <can_free>
 8004ef4:	4620      	mov	r0, r4
 8004ef6:	f000 fb07 	bl	8005508 <rtos::Mutex::~Mutex()>
 8004efa:	f115 060c 	adds.w	r6, r5, #12
 8004efe:	d006      	beq.n	8004f0e <mbed::CAN::~CAN()+0x36>
 8004f00:	42b4      	cmp	r4, r6
 8004f02:	d004      	beq.n	8004f0e <mbed::CAN::~CAN()+0x36>
 8004f04:	3c10      	subs	r4, #16
 8004f06:	4620      	mov	r0, r4
 8004f08:	f7fb fa49 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8004f0c:	e7f8      	b.n	8004f00 <mbed::CAN::~CAN()+0x28>
 8004f0e:	4628      	mov	r0, r5
 8004f10:	bd70      	pop	{r4, r5, r6, pc}
 8004f12:	bf00      	nop
 8004f14:	08006b5c 	.word	0x08006b5c

08004f18 <mbed::CAN::~CAN()>:
 8004f18:	b510      	push	{r4, lr}
 8004f1a:	4604      	mov	r4, r0
 8004f1c:	f7ff ffdc 	bl	8004ed8 <mbed::CAN::~CAN()>
 8004f20:	4620      	mov	r0, r4
 8004f22:	f000 fac7 	bl	80054b4 <operator delete(void*)>
 8004f26:	4620      	mov	r0, r4
 8004f28:	bd10      	pop	{r4, pc}

08004f2a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004f2a:	4288      	cmp	r0, r1
 8004f2c:	b538      	push	{r3, r4, r5, lr}
 8004f2e:	4604      	mov	r4, r0
 8004f30:	460d      	mov	r5, r1
 8004f32:	d00a      	beq.n	8004f4a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004f34:	f7fb fa33 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8004f38:	b13c      	cbz	r4, 8004f4a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004f3a:	68eb      	ldr	r3, [r5, #12]
 8004f3c:	b11b      	cbz	r3, 8004f46 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004f3e:	685b      	ldr	r3, [r3, #4]
 8004f40:	4629      	mov	r1, r5
 8004f42:	4620      	mov	r0, r4
 8004f44:	4798      	blx	r3
 8004f46:	68eb      	ldr	r3, [r5, #12]
 8004f48:	60e3      	str	r3, [r4, #12]
 8004f4a:	4620      	mov	r0, r4
 8004f4c:	bd38      	pop	{r3, r4, r5, pc}
	...

08004f50 <mbed::CAN::CAN(PinName, PinName)>:
 8004f50:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 8004f54:	4b1a      	ldr	r3, [pc, #104]	; (8004fc0 <mbed::CAN::CAN(PinName, PinName)+0x70>)
 8004f56:	6003      	str	r3, [r0, #0]
 8004f58:	4617      	mov	r7, r2
 8004f5a:	f100 030c 	add.w	r3, r0, #12
 8004f5e:	2200      	movs	r2, #0
 8004f60:	4604      	mov	r4, r0
 8004f62:	460e      	mov	r6, r1
 8004f64:	6042      	str	r2, [r0, #4]
 8004f66:	6082      	str	r2, [r0, #8]
 8004f68:	f100 089c 	add.w	r8, r0, #156	; 0x9c
 8004f6c:	461d      	mov	r5, r3
 8004f6e:	60da      	str	r2, [r3, #12]
 8004f70:	3310      	adds	r3, #16
 8004f72:	4543      	cmp	r3, r8
 8004f74:	d1fb      	bne.n	8004f6e <mbed::CAN::CAN(PinName, PinName)+0x1e>
 8004f76:	4640      	mov	r0, r8
 8004f78:	f000 faa8 	bl	80054cc <rtos::Mutex::Mutex()>
 8004f7c:	f8df a048 	ldr.w	r10, [pc, #72]	; 8004fc8 <mbed::CAN::CAN(PinName, PinName)+0x78>
 8004f80:	f8df 9048 	ldr.w	r9, [pc, #72]	; 8004fcc <mbed::CAN::CAN(PinName, PinName)+0x7c>
 8004f84:	4545      	cmp	r5, r8
 8004f86:	d00c      	beq.n	8004fa2 <mbed::CAN::CAN(PinName, PinName)+0x52>
 8004f88:	4669      	mov	r1, sp
 8004f8a:	4628      	mov	r0, r5
 8004f8c:	f8cd a000 	str.w	r10, [sp]
 8004f90:	f8cd 900c 	str.w	r9, [sp, #12]
 8004f94:	f7ff ffc9 	bl	8004f2a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004f98:	4668      	mov	r0, sp
 8004f9a:	f7fb fa00 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 8004f9e:	3510      	adds	r5, #16
 8004fa0:	e7f0      	b.n	8004f84 <mbed::CAN::CAN(PinName, PinName)+0x34>
 8004fa2:	1d25      	adds	r5, r4, #4
 8004fa4:	463a      	mov	r2, r7
 8004fa6:	4631      	mov	r1, r6
 8004fa8:	4628      	mov	r0, r5
 8004faa:	f7fe fa0b 	bl	80033c4 <can_init>
 8004fae:	4628      	mov	r0, r5
 8004fb0:	4622      	mov	r2, r4
 8004fb2:	4904      	ldr	r1, [pc, #16]	; (8004fc4 <mbed::CAN::CAN(PinName, PinName)+0x74>)
 8004fb4:	f7fe f88a 	bl	80030cc <can_irq_init>
 8004fb8:	4620      	mov	r0, r4
 8004fba:	b004      	add	sp, #16
 8004fbc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8004fc0:	08006b5c 	.word	0x08006b5c
 8004fc4:	08004e05 	.word	0x08004e05
 8004fc8:	08004e03 	.word	0x08004e03
 8004fcc:	08006550 	.word	0x08006550

08004fd0 <mbed::donothing()>:
 8004fd0:	4770      	bx	lr

08004fd2 <mbed::SerialBase::lock()>:
 8004fd2:	4770      	bx	lr

08004fd4 <mbed::SerialBase::unlock()>:
 8004fd4:	4770      	bx	lr

08004fd6 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 8004fd6:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004fda:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8004fde:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	4718      	bx	r3

08004fe6 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 8004fe6:	b410      	push	{r4}
 8004fe8:	b180      	cbz	r0, 800500c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8004fea:	6814      	ldr	r4, [r2, #0]
 8004fec:	6853      	ldr	r3, [r2, #4]
 8004fee:	b90c      	cbnz	r4, 8004ff4 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8004ff0:	07da      	lsls	r2, r3, #31
 8004ff2:	d50b      	bpl.n	800500c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8004ff4:	f013 0f01 	tst.w	r3, #1
 8004ff8:	ea4f 0363 	mov.w	r3, r3, asr #1
 8004ffc:	bf1c      	itt	ne
 8004ffe:	58c2      	ldrne	r2, [r0, r3]
 8005000:	5914      	ldrne	r4, [r2, r4]
 8005002:	4418      	add	r0, r3
 8005004:	4623      	mov	r3, r4
 8005006:	f85d 4b04 	ldr.w	r4, [sp], #4
 800500a:	4718      	bx	r3
 800500c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005010:	4770      	bx	lr

08005012 <mbed::SerialBase::baud(int)>:
 8005012:	b570      	push	{r4, r5, r6, lr}
 8005014:	4605      	mov	r5, r0
 8005016:	4604      	mov	r4, r0
 8005018:	f855 3b4c 	ldr.w	r3, [r5], #76
 800501c:	460e      	mov	r6, r1
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	4798      	blx	r3
 8005022:	4628      	mov	r0, r5
 8005024:	4631      	mov	r1, r6
 8005026:	f7fe fcdd 	bl	80039e4 <serial_baud>
 800502a:	6823      	ldr	r3, [r4, #0]
 800502c:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8005030:	4620      	mov	r0, r4
 8005032:	685b      	ldr	r3, [r3, #4]
 8005034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005038:	4718      	bx	r3
	...

0800503c <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 800503c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005040:	b087      	sub	sp, #28
 8005042:	2500      	movs	r5, #0
 8005044:	4691      	mov	r9, r2
 8005046:	9500      	str	r5, [sp, #0]
 8005048:	4602      	mov	r2, r0
 800504a:	9501      	str	r5, [sp, #4]
 800504c:	4604      	mov	r4, r0
 800504e:	4688      	mov	r8, r1
 8005050:	461f      	mov	r7, r3
 8005052:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8005056:	4b27      	ldr	r3, [pc, #156]	; (80050f4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8005058:	f842 3b08 	str.w	r3, [r2], #8
 800505c:	4b26      	ldr	r3, [pc, #152]	; (80050f8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 800505e:	e882 0003 	stmia.w	r2, {r0, r1}
 8005062:	6123      	str	r3, [r4, #16]
 8005064:	f248 0307 	movw	r3, #32775	; 0x8007
 8005068:	6163      	str	r3, [r4, #20]
 800506a:	4b24      	ldr	r3, [pc, #144]	; (80050fc <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 800506c:	61e5      	str	r5, [r4, #28]
 800506e:	61a4      	str	r4, [r4, #24]
 8005070:	6222      	str	r2, [r4, #32]
 8005072:	6263      	str	r3, [r4, #36]	; 0x24
 8005074:	f3bf 8f6f 	isb	sy
 8005078:	f3bf 8f4f 	dsb	sy
 800507c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8005080:	224c      	movs	r2, #76	; 0x4c
 8005082:	6365      	str	r5, [r4, #52]	; 0x34
 8005084:	6465      	str	r5, [r4, #68]	; 0x44
 8005086:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 800508a:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 800508e:	4630      	mov	r0, r6
 8005090:	f000 fd6b 	bl	8005b6a <memset>
 8005094:	a902      	add	r1, sp, #8
 8005096:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 800509a:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 800509e:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 80050a2:	4d17      	ldr	r5, [pc, #92]	; (8005100 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 80050a4:	4f17      	ldr	r7, [pc, #92]	; (8005104 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 80050a6:	9702      	str	r7, [sp, #8]
 80050a8:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80050ac:	9505      	str	r5, [sp, #20]
 80050ae:	f7ff ff3c 	bl	8004f2a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80050b2:	a802      	add	r0, sp, #8
 80050b4:	f7fb f973 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 80050b8:	a902      	add	r1, sp, #8
 80050ba:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 80050be:	9702      	str	r7, [sp, #8]
 80050c0:	9505      	str	r5, [sp, #20]
 80050c2:	f7ff ff32 	bl	8004f2a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80050c6:	a802      	add	r0, sp, #8
 80050c8:	f7fb f969 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 80050cc:	464a      	mov	r2, r9
 80050ce:	4641      	mov	r1, r8
 80050d0:	4630      	mov	r0, r6
 80050d2:	f7fe fb9b 	bl	800380c <serial_init>
 80050d6:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 80050da:	4630      	mov	r0, r6
 80050dc:	f7fe fc82 	bl	80039e4 <serial_baud>
 80050e0:	4630      	mov	r0, r6
 80050e2:	4622      	mov	r2, r4
 80050e4:	4908      	ldr	r1, [pc, #32]	; (8005108 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 80050e6:	f7fe fc81 	bl	80039ec <serial_irq_handler>
 80050ea:	4620      	mov	r0, r4
 80050ec:	b007      	add	sp, #28
 80050ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80050f2:	bf00      	nop
 80050f4:	08006b74 	.word	0x08006b74
 80050f8:	e890a001 	.word	0xe890a001
 80050fc:	08004fe7 	.word	0x08004fe7
 8005100:	08006550 	.word	0x08006550
 8005104:	08004fd1 	.word	0x08004fd1
 8005108:	08004fd7 	.word	0x08004fd7

0800510c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 800510c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005110:	4605      	mov	r5, r0
 8005112:	4688      	mov	r8, r1
 8005114:	f855 3b4c 	ldr.w	r3, [r5], #76
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	4604      	mov	r4, r0
 800511c:	4616      	mov	r6, r2
 800511e:	4798      	blx	r3
 8005120:	f7fc fa9e 	bl	8001660 <core_util_critical_section_enter>
 8005124:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8005128:	0130      	lsls	r0, r6, #4
 800512a:	b197      	cbz	r7, 8005152 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 800512c:	3098      	adds	r0, #152	; 0x98
 800512e:	4641      	mov	r1, r8
 8005130:	4420      	add	r0, r4
 8005132:	f7ff fefa 	bl	8004f2a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005136:	2201      	movs	r2, #1
 8005138:	4631      	mov	r1, r6
 800513a:	4628      	mov	r0, r5
 800513c:	f7fe fc62 	bl	8003a04 <serial_irq_set>
 8005140:	f7fc faa4 	bl	800168c <core_util_critical_section_exit>
 8005144:	6823      	ldr	r3, [r4, #0]
 8005146:	4620      	mov	r0, r4
 8005148:	685b      	ldr	r3, [r3, #4]
 800514a:	4798      	blx	r3
 800514c:	b004      	add	sp, #16
 800514e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005152:	4b07      	ldr	r3, [pc, #28]	; (8005170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8005154:	9300      	str	r3, [sp, #0]
 8005156:	3098      	adds	r0, #152	; 0x98
 8005158:	4b06      	ldr	r3, [pc, #24]	; (8005174 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 800515a:	9303      	str	r3, [sp, #12]
 800515c:	4669      	mov	r1, sp
 800515e:	4420      	add	r0, r4
 8005160:	f7ff fee3 	bl	8004f2a <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8005164:	4668      	mov	r0, sp
 8005166:	f7fb f91a 	bl	800039e <mbed::Callback<void ()>::~Callback()>
 800516a:	463a      	mov	r2, r7
 800516c:	e7e4      	b.n	8005138 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 800516e:	bf00      	nop
 8005170:	08004fd1 	.word	0x08004fd1
 8005174:	08006550 	.word	0x08006550

08005178 <mbed::TimerEvent::irq(unsigned long)>:
 8005178:	6803      	ldr	r3, [r0, #0]
 800517a:	689b      	ldr	r3, [r3, #8]
 800517c:	4718      	bx	r3
	...

08005180 <mbed::TimerEvent::TimerEvent()>:
 8005180:	4b07      	ldr	r3, [pc, #28]	; (80051a0 <mbed::TimerEvent::TimerEvent()+0x20>)
 8005182:	b510      	push	{r4, lr}
 8005184:	6003      	str	r3, [r0, #0]
 8005186:	2300      	movs	r3, #0
 8005188:	6043      	str	r3, [r0, #4]
 800518a:	6083      	str	r3, [r0, #8]
 800518c:	60c3      	str	r3, [r0, #12]
 800518e:	4604      	mov	r4, r0
 8005190:	f7fc f99a 	bl	80014c8 <get_us_ticker_data>
 8005194:	4903      	ldr	r1, [pc, #12]	; (80051a4 <mbed::TimerEvent::TimerEvent()+0x24>)
 8005196:	6120      	str	r0, [r4, #16]
 8005198:	f7fc f9a0 	bl	80014dc <ticker_set_handler>
 800519c:	4620      	mov	r0, r4
 800519e:	bd10      	pop	{r4, pc}
 80051a0:	08006b8c 	.word	0x08006b8c
 80051a4:	08005179 	.word	0x08005179

080051a8 <mbed::TimerEvent::insert(unsigned long)>:
 80051a8:	4603      	mov	r3, r0
 80051aa:	460a      	mov	r2, r1
 80051ac:	1d01      	adds	r1, r0, #4
 80051ae:	6900      	ldr	r0, [r0, #16]
 80051b0:	f7fc b9c0 	b.w	8001534 <ticker_insert_event>

080051b4 <mbed::TimerEvent::remove()>:
 80051b4:	1d01      	adds	r1, r0, #4
 80051b6:	6900      	ldr	r0, [r0, #16]
 80051b8:	f7fc b9dd 	b.w	8001576 <ticker_remove_event>

080051bc <mbed::TimerEvent::~TimerEvent()>:
 80051bc:	b510      	push	{r4, lr}
 80051be:	4b03      	ldr	r3, [pc, #12]	; (80051cc <mbed::TimerEvent::~TimerEvent()+0x10>)
 80051c0:	6003      	str	r3, [r0, #0]
 80051c2:	4604      	mov	r4, r0
 80051c4:	f7ff fff6 	bl	80051b4 <mbed::TimerEvent::remove()>
 80051c8:	4620      	mov	r0, r4
 80051ca:	bd10      	pop	{r4, pc}
 80051cc:	08006b8c 	.word	0x08006b8c

080051d0 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80051d0:	b538      	push	{r3, r4, r5, lr}
 80051d2:	4604      	mov	r4, r0
 80051d4:	b148      	cbz	r0, 80051ea <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80051d6:	3058      	adds	r0, #88	; 0x58
 80051d8:	42a0      	cmp	r0, r4
 80051da:	d006      	beq.n	80051ea <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80051dc:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 80051e0:	3814      	subs	r0, #20
 80051e2:	f7fb ffc2 	bl	800116a <mbed::Callback<void (int)>::~Callback()>
 80051e6:	4628      	mov	r0, r5
 80051e8:	e7f6      	b.n	80051d8 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 80051ea:	4620      	mov	r0, r4
 80051ec:	bd38      	pop	{r3, r4, r5, pc}
	...

080051f0 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 80051f0:	b570      	push	{r4, r5, r6, lr}
 80051f2:	4c0e      	ldr	r4, [pc, #56]	; (800522c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 80051f4:	4620      	mov	r0, r4
 80051f6:	2500      	movs	r5, #0
 80051f8:	2628      	movs	r6, #40	; 0x28
 80051fa:	4632      	mov	r2, r6
 80051fc:	4629      	mov	r1, r5
 80051fe:	f840 5b04 	str.w	r5, [r0], #4
 8005202:	f000 fcb2 	bl	8005b6a <memset>
 8005206:	4632      	mov	r2, r6
 8005208:	4629      	mov	r1, r5
 800520a:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800520e:	62e5      	str	r5, [r4, #44]	; 0x2c
 8005210:	f000 fcab 	bl	8005b6a <memset>
 8005214:	65a5      	str	r5, [r4, #88]	; 0x58
 8005216:	4620      	mov	r0, r4
 8005218:	65e5      	str	r5, [r4, #92]	; 0x5c
 800521a:	4a05      	ldr	r2, [pc, #20]	; (8005230 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 800521c:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 8005220:	4904      	ldr	r1, [pc, #16]	; (8005234 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 8005222:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005226:	f000 b927 	b.w	8005478 <__aeabi_atexit>
 800522a:	bf00      	nop
 800522c:	20001d04 	.word	0x20001d04
 8005230:	20000194 	.word	0x20000194
 8005234:	080051d1 	.word	0x080051d1

08005238 <__wrap__malloc_r>:
 8005238:	f000 bcee 	b.w	8005c18 <_malloc_r>

0800523c <__wrap__realloc_r>:
 800523c:	f000 bd4a 	b.w	8005cd4 <_realloc_r>

08005240 <__wrap__free_r>:
 8005240:	f000 bc9c 	b.w	8005b7c <_free_r>

08005244 <wait_us>:
 8005244:	b570      	push	{r4, r5, r6, lr}
 8005246:	4605      	mov	r5, r0
 8005248:	f7fe f93c 	bl	80034c4 <us_ticker_read>
 800524c:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005250:	fb95 f4f4 	sdiv	r4, r5, r4
 8005254:	2c00      	cmp	r4, #0
 8005256:	4606      	mov	r6, r0
 8005258:	dd02      	ble.n	8005260 <wait_us+0x1c>
 800525a:	f7fc f9fb 	bl	8001654 <core_util_are_interrupts_enabled>
 800525e:	b928      	cbnz	r0, 800526c <wait_us+0x28>
 8005260:	f7fe f930 	bl	80034c4 <us_ticker_read>
 8005264:	1b80      	subs	r0, r0, r6
 8005266:	42a8      	cmp	r0, r5
 8005268:	d3fa      	bcc.n	8005260 <wait_us+0x1c>
 800526a:	bd70      	pop	{r4, r5, r6, pc}
 800526c:	4620      	mov	r0, r4
 800526e:	f000 f92b 	bl	80054c8 <rtos::Thread::wait(unsigned long)>
 8005272:	e7f5      	b.n	8005260 <wait_us+0x1c>

08005274 <wait_ms>:
 8005274:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005278:	4358      	muls	r0, r3
 800527a:	f7ff bfe3 	b.w	8005244 <wait_us>
	...

08005280 <init_serial()>:
 8005280:	b508      	push	{r3, lr}
 8005282:	4b08      	ldr	r3, [pc, #32]	; (80052a4 <init_serial()+0x24>)
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	b95b      	cbnz	r3, 80052a0 <init_serial()+0x20>
 8005288:	2102      	movs	r1, #2
 800528a:	4807      	ldr	r0, [pc, #28]	; (80052a8 <init_serial()+0x28>)
 800528c:	2203      	movs	r2, #3
 800528e:	f7fe fabd 	bl	800380c <serial_init>
 8005292:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8005296:	4804      	ldr	r0, [pc, #16]	; (80052a8 <init_serial()+0x28>)
 8005298:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800529c:	f7fe bba2 	b.w	80039e4 <serial_baud>
 80052a0:	bd08      	pop	{r3, pc}
 80052a2:	bf00      	nop
 80052a4:	20001ad0 	.word	0x20001ad0
 80052a8:	20002700 	.word	0x20002700

080052ac <_close>:
 80052ac:	2802      	cmp	r0, #2
 80052ae:	b510      	push	{r4, lr}
 80052b0:	4604      	mov	r4, r0
 80052b2:	dc01      	bgt.n	80052b8 <_close+0xc>
 80052b4:	2000      	movs	r0, #0
 80052b6:	bd10      	pop	{r4, pc}
 80052b8:	f000 fa16 	bl	80056e8 <__errno>
 80052bc:	2309      	movs	r3, #9
 80052be:	6003      	str	r3, [r0, #0]
 80052c0:	3c03      	subs	r4, #3
 80052c2:	4b09      	ldr	r3, [pc, #36]	; (80052e8 <_close+0x3c>)
 80052c4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80052c8:	2200      	movs	r2, #0
 80052ca:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80052ce:	b140      	cbz	r0, 80052e2 <_close+0x36>
 80052d0:	6803      	ldr	r3, [r0, #0]
 80052d2:	691b      	ldr	r3, [r3, #16]
 80052d4:	4798      	blx	r3
 80052d6:	1e04      	subs	r4, r0, #0
 80052d8:	daec      	bge.n	80052b4 <_close+0x8>
 80052da:	f000 fa05 	bl	80056e8 <__errno>
 80052de:	4264      	negs	r4, r4
 80052e0:	6004      	str	r4, [r0, #0]
 80052e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80052e6:	bd10      	pop	{r4, pc}
 80052e8:	20001d68 	.word	0x20001d68

080052ec <_write>:
 80052ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052ee:	4605      	mov	r5, r0
 80052f0:	460e      	mov	r6, r1
 80052f2:	4614      	mov	r4, r2
 80052f4:	f000 f9f8 	bl	80056e8 <__errno>
 80052f8:	2309      	movs	r3, #9
 80052fa:	2d02      	cmp	r5, #2
 80052fc:	6003      	str	r3, [r0, #0]
 80052fe:	dc0f      	bgt.n	8005320 <_write+0x34>
 8005300:	4b12      	ldr	r3, [pc, #72]	; (800534c <_write+0x60>)
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	b90b      	cbnz	r3, 800530a <_write+0x1e>
 8005306:	f7ff ffbb 	bl	8005280 <init_serial()>
 800530a:	4635      	mov	r5, r6
 800530c:	1937      	adds	r7, r6, r4
 800530e:	4e10      	ldr	r6, [pc, #64]	; (8005350 <_write+0x64>)
 8005310:	42bd      	cmp	r5, r7
 8005312:	d015      	beq.n	8005340 <_write+0x54>
 8005314:	f815 1b01 	ldrb.w	r1, [r5], #1
 8005318:	4630      	mov	r0, r6
 800531a:	f7fe fc0d 	bl	8003b38 <serial_putc>
 800531e:	e7f7      	b.n	8005310 <_write+0x24>
 8005320:	3d03      	subs	r5, #3
 8005322:	4b0c      	ldr	r3, [pc, #48]	; (8005354 <_write+0x68>)
 8005324:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8005328:	b160      	cbz	r0, 8005344 <_write+0x58>
 800532a:	6803      	ldr	r3, [r0, #0]
 800532c:	4622      	mov	r2, r4
 800532e:	68db      	ldr	r3, [r3, #12]
 8005330:	4631      	mov	r1, r6
 8005332:	4798      	blx	r3
 8005334:	1e04      	subs	r4, r0, #0
 8005336:	da03      	bge.n	8005340 <_write+0x54>
 8005338:	f000 f9d6 	bl	80056e8 <__errno>
 800533c:	4263      	negs	r3, r4
 800533e:	6003      	str	r3, [r0, #0]
 8005340:	4620      	mov	r0, r4
 8005342:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005344:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8005348:	e7fa      	b.n	8005340 <_write+0x54>
 800534a:	bf00      	nop
 800534c:	20001ad0 	.word	0x20001ad0
 8005350:	20002700 	.word	0x20002700
 8005354:	20001d68 	.word	0x20001d68

08005358 <_read>:
 8005358:	b570      	push	{r4, r5, r6, lr}
 800535a:	4604      	mov	r4, r0
 800535c:	460d      	mov	r5, r1
 800535e:	4616      	mov	r6, r2
 8005360:	f000 f9c2 	bl	80056e8 <__errno>
 8005364:	2309      	movs	r3, #9
 8005366:	2c02      	cmp	r4, #2
 8005368:	6003      	str	r3, [r0, #0]
 800536a:	dc0b      	bgt.n	8005384 <_read+0x2c>
 800536c:	4b0f      	ldr	r3, [pc, #60]	; (80053ac <_read+0x54>)
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	b90b      	cbnz	r3, 8005376 <_read+0x1e>
 8005372:	f7ff ff85 	bl	8005280 <init_serial()>
 8005376:	480e      	ldr	r0, [pc, #56]	; (80053b0 <_read+0x58>)
 8005378:	f7fe fbbc 	bl	8003af4 <serial_getc>
 800537c:	2401      	movs	r4, #1
 800537e:	7028      	strb	r0, [r5, #0]
 8005380:	4620      	mov	r0, r4
 8005382:	bd70      	pop	{r4, r5, r6, pc}
 8005384:	3c03      	subs	r4, #3
 8005386:	4b0b      	ldr	r3, [pc, #44]	; (80053b4 <_read+0x5c>)
 8005388:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800538c:	b158      	cbz	r0, 80053a6 <_read+0x4e>
 800538e:	6803      	ldr	r3, [r0, #0]
 8005390:	4632      	mov	r2, r6
 8005392:	689b      	ldr	r3, [r3, #8]
 8005394:	4629      	mov	r1, r5
 8005396:	4798      	blx	r3
 8005398:	1e04      	subs	r4, r0, #0
 800539a:	daf1      	bge.n	8005380 <_read+0x28>
 800539c:	f000 f9a4 	bl	80056e8 <__errno>
 80053a0:	4263      	negs	r3, r4
 80053a2:	6003      	str	r3, [r0, #0]
 80053a4:	e7ec      	b.n	8005380 <_read+0x28>
 80053a6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80053aa:	e7e9      	b.n	8005380 <_read+0x28>
 80053ac:	20001ad0 	.word	0x20001ad0
 80053b0:	20002700 	.word	0x20002700
 80053b4:	20001d68 	.word	0x20001d68

080053b8 <_lseek>:
 80053b8:	b570      	push	{r4, r5, r6, lr}
 80053ba:	4604      	mov	r4, r0
 80053bc:	460d      	mov	r5, r1
 80053be:	4616      	mov	r6, r2
 80053c0:	f000 f992 	bl	80056e8 <__errno>
 80053c4:	2309      	movs	r3, #9
 80053c6:	2c02      	cmp	r4, #2
 80053c8:	6003      	str	r3, [r0, #0]
 80053ca:	dd0b      	ble.n	80053e4 <_lseek+0x2c>
 80053cc:	3c03      	subs	r4, #3
 80053ce:	4b08      	ldr	r3, [pc, #32]	; (80053f0 <_lseek+0x38>)
 80053d0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80053d4:	b140      	cbz	r0, 80053e8 <_lseek+0x30>
 80053d6:	6803      	ldr	r3, [r0, #0]
 80053d8:	4632      	mov	r2, r6
 80053da:	4629      	mov	r1, r5
 80053dc:	69db      	ldr	r3, [r3, #28]
 80053de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80053e2:	4718      	bx	r3
 80053e4:	2000      	movs	r0, #0
 80053e6:	bd70      	pop	{r4, r5, r6, pc}
 80053e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80053ec:	bd70      	pop	{r4, r5, r6, pc}
 80053ee:	bf00      	nop
 80053f0:	20001d68 	.word	0x20001d68

080053f4 <software_init_hook>:
 80053f4:	b508      	push	{r3, lr}
 80053f6:	f7fe fbb5 	bl	8003b64 <mbed_sdk_init>
 80053fa:	f7fc fac5 	bl	8001988 <software_init_hook_rtos>
 80053fe:	bd08      	pop	{r3, pc}

08005400 <mbed_main>:
 8005400:	4770      	bx	lr

08005402 <__wrap_main>:
 8005402:	b508      	push	{r3, lr}
 8005404:	f7ff fffc 	bl	8005400 <mbed_main>
 8005408:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800540c:	f7fb bc84 	b.w	8000d18 <main>

08005410 <_sbrk>:
 8005410:	4a0c      	ldr	r2, [pc, #48]	; (8005444 <_sbrk+0x34>)
 8005412:	6813      	ldr	r3, [r2, #0]
 8005414:	b510      	push	{r4, lr}
 8005416:	4418      	add	r0, r3
 8005418:	f3ef 8108 	mrs	r1, MSP
 800541c:	4288      	cmp	r0, r1
 800541e:	d305      	bcc.n	800542c <_sbrk+0x1c>
 8005420:	4b09      	ldr	r3, [pc, #36]	; (8005448 <_sbrk+0x38>)
 8005422:	220c      	movs	r2, #12
 8005424:	601a      	str	r2, [r3, #0]
 8005426:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800542a:	bd10      	pop	{r4, pc}
 800542c:	4907      	ldr	r1, [pc, #28]	; (800544c <_sbrk+0x3c>)
 800542e:	680c      	ldr	r4, [r1, #0]
 8005430:	b124      	cbz	r4, 800543c <_sbrk+0x2c>
 8005432:	4907      	ldr	r1, [pc, #28]	; (8005450 <_sbrk+0x40>)
 8005434:	6809      	ldr	r1, [r1, #0]
 8005436:	4421      	add	r1, r4
 8005438:	4288      	cmp	r0, r1
 800543a:	d2f1      	bcs.n	8005420 <_sbrk+0x10>
 800543c:	6010      	str	r0, [r2, #0]
 800543e:	4618      	mov	r0, r3
 8005440:	bd10      	pop	{r4, pc}
 8005442:	bf00      	nop
 8005444:	200001b4 	.word	0x200001b4
 8005448:	20002750 	.word	0x20002750
 800544c:	20001e68 	.word	0x20001e68
 8005450:	20001e6c 	.word	0x20001e6c

08005454 <_exit>:
 8005454:	4c07      	ldr	r4, [pc, #28]	; (8005474 <_exit+0x20>)
 8005456:	b508      	push	{r3, lr}
 8005458:	6823      	ldr	r3, [r4, #0]
 800545a:	4605      	mov	r5, r0
 800545c:	6898      	ldr	r0, [r3, #8]
 800545e:	f000 f9fb 	bl	8005858 <fflush>
 8005462:	6823      	ldr	r3, [r4, #0]
 8005464:	68d8      	ldr	r0, [r3, #12]
 8005466:	f000 f9f7 	bl	8005858 <fflush>
 800546a:	b10d      	cbz	r5, 8005470 <_exit+0x1c>
 800546c:	f7fc f927 	bl	80016be <mbed_die>
 8005470:	e7fe      	b.n	8005470 <_exit+0x1c>
 8005472:	bf00      	nop
 8005474:	200001b8 	.word	0x200001b8

08005478 <__aeabi_atexit>:
 8005478:	2001      	movs	r0, #1
 800547a:	4770      	bx	lr

0800547c <__wrap_exit>:
 800547c:	b508      	push	{r3, lr}
 800547e:	f7ff ffe9 	bl	8005454 <_exit>

08005482 <__malloc_lock>:
 8005482:	b508      	push	{r3, lr}
 8005484:	f7fc fa8e 	bl	80019a4 <__rtos_malloc_lock>
 8005488:	bd08      	pop	{r3, pc}

0800548a <__malloc_unlock>:
 800548a:	b508      	push	{r3, lr}
 800548c:	f7fc fa92 	bl	80019b4 <__rtos_malloc_unlock>
 8005490:	bd08      	pop	{r3, pc}
	...

08005494 <operator new[](unsigned int)>:
 8005494:	b510      	push	{r4, lr}
 8005496:	f000 fadf 	bl	8005a58 <malloc>
 800549a:	4604      	mov	r4, r0
 800549c:	b910      	cbnz	r0, 80054a4 <operator new[](unsigned int)+0x10>
 800549e:	4802      	ldr	r0, [pc, #8]	; (80054a8 <operator new[](unsigned int)+0x14>)
 80054a0:	f7fc f908 	bl	80016b4 <error>
 80054a4:	4620      	mov	r0, r4
 80054a6:	bd10      	pop	{r4, pc}
 80054a8:	08006b98 	.word	0x08006b98

080054ac <operator delete[](void*)>:
 80054ac:	b108      	cbz	r0, 80054b2 <operator delete[](void*)+0x6>
 80054ae:	f000 badb 	b.w	8005a68 <free>
 80054b2:	4770      	bx	lr

080054b4 <operator delete(void*)>:
 80054b4:	f7ff bffa 	b.w	80054ac <operator delete[](void*)>

080054b8 <thread_terminate_hook>:
 80054b8:	4b02      	ldr	r3, [pc, #8]	; (80054c4 <thread_terminate_hook+0xc>)
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	b103      	cbz	r3, 80054c0 <thread_terminate_hook+0x8>
 80054be:	4718      	bx	r3
 80054c0:	4770      	bx	lr
 80054c2:	bf00      	nop
 80054c4:	20001e70 	.word	0x20001e70

080054c8 <rtos::Thread::wait(unsigned long)>:
 80054c8:	f7fc be4a 	b.w	8002160 <osDelay>

080054cc <rtos::Mutex::Mutex()>:
 80054cc:	b538      	push	{r3, r4, r5, lr}
 80054ce:	f100 0508 	add.w	r5, r0, #8
 80054d2:	4604      	mov	r4, r0
 80054d4:	2210      	movs	r2, #16
 80054d6:	2100      	movs	r1, #0
 80054d8:	4628      	mov	r0, r5
 80054da:	f000 fb46 	bl	8005b6a <memset>
 80054de:	4620      	mov	r0, r4
 80054e0:	f840 5f04 	str.w	r5, [r0, #4]!
 80054e4:	f7fc feae 	bl	8002244 <osMutexCreate>
 80054e8:	6020      	str	r0, [r4, #0]
 80054ea:	b910      	cbnz	r0, 80054f2 <rtos::Mutex::Mutex()+0x26>
 80054ec:	4802      	ldr	r0, [pc, #8]	; (80054f8 <rtos::Mutex::Mutex()+0x2c>)
 80054ee:	f7fc f8e1 	bl	80016b4 <error>
 80054f2:	4620      	mov	r0, r4
 80054f4:	bd38      	pop	{r3, r4, r5, pc}
 80054f6:	bf00      	nop
 80054f8:	08006bb7 	.word	0x08006bb7

080054fc <rtos::Mutex::lock(unsigned long)>:
 80054fc:	6800      	ldr	r0, [r0, #0]
 80054fe:	f7fc bebf 	b.w	8002280 <osMutexWait>

08005502 <rtos::Mutex::unlock()>:
 8005502:	6800      	ldr	r0, [r0, #0]
 8005504:	f7fc bee4 	b.w	80022d0 <osMutexRelease>

08005508 <rtos::Mutex::~Mutex()>:
 8005508:	b510      	push	{r4, lr}
 800550a:	4604      	mov	r4, r0
 800550c:	6800      	ldr	r0, [r0, #0]
 800550e:	f7fc ff25 	bl	800235c <osMutexDelete>
 8005512:	4620      	mov	r0, r4
 8005514:	bd10      	pop	{r4, pc}
	...

08005518 <rt_set_PSP>:
 8005518:	f380 8809 	msr	PSP, r0
 800551c:	4770      	bx	lr

0800551e <rt_get_PSP>:
 800551e:	f3ef 8009 	mrs	r0, PSP
 8005522:	4770      	bx	lr

08005524 <os_set_env>:
 8005524:	4668      	mov	r0, sp
 8005526:	f380 8809 	msr	PSP, r0
 800552a:	485a      	ldr	r0, [pc, #360]	; (8005694 <OS_Tick_Handler+0x10>)
 800552c:	7800      	ldrb	r0, [r0, #0]
 800552e:	07c0      	lsls	r0, r0, #31
 8005530:	bf14      	ite	ne
 8005532:	2002      	movne	r0, #2
 8005534:	2003      	moveq	r0, #3
 8005536:	f380 8814 	msr	CONTROL, r0
 800553a:	4770      	bx	lr

0800553c <_alloc_box>:
 800553c:	f8df c158 	ldr.w	r12, [pc, #344]	; 8005698 <OS_Tick_Handler+0x14>
 8005540:	f3ef 8305 	mrs	r3, IPSR
 8005544:	061b      	lsls	r3, r3, #24
 8005546:	bf18      	it	ne
 8005548:	4760      	bxne	r12
 800554a:	f3ef 8314 	mrs	r3, CONTROL
 800554e:	07db      	lsls	r3, r3, #31
 8005550:	bf08      	it	eq
 8005552:	4760      	bxeq	r12
 8005554:	df00      	svc	0
 8005556:	4770      	bx	lr

08005558 <_free_box>:
 8005558:	f8df c140 	ldr.w	r12, [pc, #320]	; 800569c <OS_Tick_Handler+0x18>
 800555c:	f3ef 8305 	mrs	r3, IPSR
 8005560:	061b      	lsls	r3, r3, #24
 8005562:	bf18      	it	ne
 8005564:	4760      	bxne	r12
 8005566:	f3ef 8314 	mrs	r3, CONTROL
 800556a:	07db      	lsls	r3, r3, #31
 800556c:	bf08      	it	eq
 800556e:	4760      	bxeq	r12
 8005570:	df00      	svc	0
 8005572:	4770      	bx	lr

08005574 <SVC_Handler>:
 8005574:	f3ef 8009 	mrs	r0, PSP
 8005578:	6981      	ldr	r1, [r0, #24]
 800557a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800557e:	bbe1      	cbnz	r1, 80055fa <SVC_User>
 8005580:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8005584:	b510      	push	{r4, lr}
 8005586:	47e0      	blx	r12
 8005588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800558c:	f3ef 8c09 	mrs	r12, PSP
 8005590:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8005594:	4b42      	ldr	r3, [pc, #264]	; (80056a0 <OS_Tick_Handler+0x1c>)
 8005596:	e893 0006 	ldmia.w	r3, {r1, r2}
 800559a:	4291      	cmp	r1, r2
 800559c:	bf08      	it	eq
 800559e:	4770      	bxeq	lr
 80055a0:	b941      	cbnz	r1, 80055b4 <SVC_ContextSave>
 80055a2:	f01e 0f10 	tst.w	lr, #16
 80055a6:	d116      	bne.n	80055d6 <SVC_ContextRestore>
 80055a8:	493e      	ldr	r1, [pc, #248]	; (80056a4 <OS_Tick_Handler+0x20>)
 80055aa:	6808      	ldr	r0, [r1, #0]
 80055ac:	f020 0001 	bic.w	r0, r0, #1
 80055b0:	6008      	str	r0, [r1, #0]
 80055b2:	e010      	b.n	80055d6 <SVC_ContextRestore>

080055b4 <SVC_ContextSave>:
 80055b4:	f01e 0f10 	tst.w	lr, #16
 80055b8:	bf06      	itte	eq
 80055ba:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80055be:	2001      	moveq	r0, #1
 80055c0:	2000      	movne	r0, #0
 80055c2:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 80055c6:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80055ca:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 80055ce:	b40c      	push	{r2, r3}
 80055d0:	f7fc fadc 	bl	8001b8c <rt_stk_check>
 80055d4:	bc0c      	pop	{r2, r3}

080055d6 <SVC_ContextRestore>:
 80055d6:	601a      	str	r2, [r3, #0]
 80055d8:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 80055dc:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80055e0:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80055e4:	2800      	cmp	r0, #0
 80055e6:	bf0e      	itee	eq
 80055e8:	f06f 0e02 	mvneq.w	lr, #2
 80055ec:	f06f 0e12 	mvnne.w	lr, #18
 80055f0:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80055f4:	f38c 8809 	msr	PSP, r12

080055f8 <SVC_Exit>:
 80055f8:	4770      	bx	lr

080055fa <SVC_User>:
 80055fa:	b510      	push	{r4, lr}
 80055fc:	4a2a      	ldr	r2, [pc, #168]	; (80056a8 <OS_Tick_Handler+0x24>)
 80055fe:	6812      	ldr	r2, [r2, #0]
 8005600:	4291      	cmp	r1, r2
 8005602:	d809      	bhi.n	8005618 <SVC_Done>
 8005604:	4c29      	ldr	r4, [pc, #164]	; (80056ac <OS_Tick_Handler+0x28>)
 8005606:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 800560a:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 800560e:	47a0      	blx	r4
 8005610:	f3ef 8c09 	mrs	r12, PSP
 8005614:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08005618 <SVC_Done>:
 8005618:	bd10      	pop	{r4, pc}

0800561a <PendSV_Handler>:
 800561a:	b510      	push	{r4, lr}
 800561c:	f7fc fa42 	bl	8001aa4 <rt_pop_req>

08005620 <Sys_Switch>:
 8005620:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005624:	4b1e      	ldr	r3, [pc, #120]	; (80056a0 <OS_Tick_Handler+0x1c>)
 8005626:	e893 0006 	ldmia.w	r3, {r1, r2}
 800562a:	4291      	cmp	r1, r2
 800562c:	bf08      	it	eq
 800562e:	4770      	bxeq	lr
 8005630:	f3ef 8c09 	mrs	r12, PSP
 8005634:	f01e 0f10 	tst.w	lr, #16
 8005638:	bf06      	itte	eq
 800563a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800563e:	2001      	moveq	r0, #1
 8005640:	2000      	movne	r0, #0
 8005642:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8005646:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800564a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800564e:	b40c      	push	{r2, r3}
 8005650:	f7fc fa9c 	bl	8001b8c <rt_stk_check>
 8005654:	bc0c      	pop	{r2, r3}
 8005656:	601a      	str	r2, [r3, #0]
 8005658:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800565c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8005660:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8005664:	2800      	cmp	r0, #0
 8005666:	bf0e      	itee	eq
 8005668:	f06f 0e02 	mvneq.w	lr, #2
 800566c:	f06f 0e12 	mvnne.w	lr, #18
 8005670:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8005674:	f38c 8809 	msr	PSP, r12

08005678 <Sys_Exit>:
 8005678:	4770      	bx	lr

0800567a <SysTick_Handler>:
 800567a:	b510      	push	{r4, lr}
 800567c:	f7fc fa68 	bl	8001b50 <rt_systick>
 8005680:	f7ff bfce 	b.w	8005620 <Sys_Switch>

08005684 <OS_Tick_Handler>:
 8005684:	b510      	push	{r4, lr}
 8005686:	f7fc fa61 	bl	8001b4c <os_tick_irqack>
 800568a:	f7fc fa61 	bl	8001b50 <rt_systick>
 800568e:	f7ff bfc7 	b.w	8005620 <Sys_Switch>
 8005692:	0000      	.short	0x0000
 8005694:	08006816 	.word	0x08006816
 8005698:	08001bfb 	.word	0x08001bfb
 800569c:	08001c15 	.word	0x08001c15
 80056a0:	20002674 	.word	0x20002674
 80056a4:	e000ef34 	.word	0xe000ef34
 80056a8:	00000000 	.word	0x00000000
 80056ac:	fffffffc 	.word	0xfffffffc

080056b0 <Reset_Handler>:
 80056b0:	f8df d020 	ldr.w	sp, [pc, #32]	; 80056d4 <LoopForever+0x2>
 80056b4:	2100      	movs	r1, #0
 80056b6:	e003      	b.n	80056c0 <LoopCopyDataInit>

080056b8 <CopyDataInit>:
 80056b8:	4b07      	ldr	r3, [pc, #28]	; (80056d8 <LoopForever+0x6>)
 80056ba:	585b      	ldr	r3, [r3, r1]
 80056bc:	5043      	str	r3, [r0, r1]
 80056be:	3104      	adds	r1, #4

080056c0 <LoopCopyDataInit>:
 80056c0:	4806      	ldr	r0, [pc, #24]	; (80056dc <LoopForever+0xa>)
 80056c2:	4b07      	ldr	r3, [pc, #28]	; (80056e0 <LoopForever+0xe>)
 80056c4:	1842      	adds	r2, r0, r1
 80056c6:	429a      	cmp	r2, r3
 80056c8:	d3f6      	bcc.n	80056b8 <CopyDataInit>
 80056ca:	f7fe fadb 	bl	8003c84 <SystemInit>
 80056ce:	f7fb fcbd 	bl	800104c <_start>

080056d2 <LoopForever>:
 80056d2:	e7fe      	b.n	80056d2 <LoopForever>
 80056d4:	20010000 	.word	0x20010000
 80056d8:	08006c80 	.word	0x08006c80
 80056dc:	20000194 	.word	0x20000194
 80056e0:	20000230 	.word	0x20000230

080056e4 <ADC1_2_IRQHandler>:
 80056e4:	e7fe      	b.n	80056e4 <ADC1_2_IRQHandler>
	...

080056e8 <__errno>:
 80056e8:	4b01      	ldr	r3, [pc, #4]	; (80056f0 <__errno+0x8>)
 80056ea:	6818      	ldr	r0, [r3, #0]
 80056ec:	4770      	bx	lr
 80056ee:	bf00      	nop
 80056f0:	200001b8 	.word	0x200001b8

080056f4 <__sflush_r>:
 80056f4:	898a      	ldrh	r2, [r1, #12]
 80056f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056fa:	4605      	mov	r5, r0
 80056fc:	0710      	lsls	r0, r2, #28
 80056fe:	460c      	mov	r4, r1
 8005700:	d45a      	bmi.n	80057b8 <__sflush_r+0xc4>
 8005702:	684b      	ldr	r3, [r1, #4]
 8005704:	2b00      	cmp	r3, #0
 8005706:	dc05      	bgt.n	8005714 <__sflush_r+0x20>
 8005708:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800570a:	2b00      	cmp	r3, #0
 800570c:	dc02      	bgt.n	8005714 <__sflush_r+0x20>
 800570e:	2000      	movs	r0, #0
 8005710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005714:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005716:	2e00      	cmp	r6, #0
 8005718:	d0f9      	beq.n	800570e <__sflush_r+0x1a>
 800571a:	2300      	movs	r3, #0
 800571c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005720:	682f      	ldr	r7, [r5, #0]
 8005722:	602b      	str	r3, [r5, #0]
 8005724:	d033      	beq.n	800578e <__sflush_r+0x9a>
 8005726:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005728:	89a3      	ldrh	r3, [r4, #12]
 800572a:	075a      	lsls	r2, r3, #29
 800572c:	d505      	bpl.n	800573a <__sflush_r+0x46>
 800572e:	6863      	ldr	r3, [r4, #4]
 8005730:	1ac0      	subs	r0, r0, r3
 8005732:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005734:	b10b      	cbz	r3, 800573a <__sflush_r+0x46>
 8005736:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005738:	1ac0      	subs	r0, r0, r3
 800573a:	2300      	movs	r3, #0
 800573c:	4602      	mov	r2, r0
 800573e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005740:	6a21      	ldr	r1, [r4, #32]
 8005742:	4628      	mov	r0, r5
 8005744:	47b0      	blx	r6
 8005746:	1c43      	adds	r3, r0, #1
 8005748:	89a3      	ldrh	r3, [r4, #12]
 800574a:	d106      	bne.n	800575a <__sflush_r+0x66>
 800574c:	6829      	ldr	r1, [r5, #0]
 800574e:	291d      	cmp	r1, #29
 8005750:	d84b      	bhi.n	80057ea <__sflush_r+0xf6>
 8005752:	4a2b      	ldr	r2, [pc, #172]	; (8005800 <__sflush_r+0x10c>)
 8005754:	40ca      	lsrs	r2, r1
 8005756:	07d6      	lsls	r6, r2, #31
 8005758:	d547      	bpl.n	80057ea <__sflush_r+0xf6>
 800575a:	2200      	movs	r2, #0
 800575c:	6062      	str	r2, [r4, #4]
 800575e:	04d9      	lsls	r1, r3, #19
 8005760:	6922      	ldr	r2, [r4, #16]
 8005762:	6022      	str	r2, [r4, #0]
 8005764:	d504      	bpl.n	8005770 <__sflush_r+0x7c>
 8005766:	1c42      	adds	r2, r0, #1
 8005768:	d101      	bne.n	800576e <__sflush_r+0x7a>
 800576a:	682b      	ldr	r3, [r5, #0]
 800576c:	b903      	cbnz	r3, 8005770 <__sflush_r+0x7c>
 800576e:	6560      	str	r0, [r4, #84]	; 0x54
 8005770:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005772:	602f      	str	r7, [r5, #0]
 8005774:	2900      	cmp	r1, #0
 8005776:	d0ca      	beq.n	800570e <__sflush_r+0x1a>
 8005778:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800577c:	4299      	cmp	r1, r3
 800577e:	d002      	beq.n	8005786 <__sflush_r+0x92>
 8005780:	4628      	mov	r0, r5
 8005782:	f7ff fd5d 	bl	8005240 <__wrap__free_r>
 8005786:	2000      	movs	r0, #0
 8005788:	6360      	str	r0, [r4, #52]	; 0x34
 800578a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800578e:	6a21      	ldr	r1, [r4, #32]
 8005790:	2301      	movs	r3, #1
 8005792:	4628      	mov	r0, r5
 8005794:	47b0      	blx	r6
 8005796:	1c41      	adds	r1, r0, #1
 8005798:	d1c6      	bne.n	8005728 <__sflush_r+0x34>
 800579a:	682b      	ldr	r3, [r5, #0]
 800579c:	2b00      	cmp	r3, #0
 800579e:	d0c3      	beq.n	8005728 <__sflush_r+0x34>
 80057a0:	2b1d      	cmp	r3, #29
 80057a2:	d001      	beq.n	80057a8 <__sflush_r+0xb4>
 80057a4:	2b16      	cmp	r3, #22
 80057a6:	d101      	bne.n	80057ac <__sflush_r+0xb8>
 80057a8:	602f      	str	r7, [r5, #0]
 80057aa:	e7b0      	b.n	800570e <__sflush_r+0x1a>
 80057ac:	89a3      	ldrh	r3, [r4, #12]
 80057ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80057b2:	81a3      	strh	r3, [r4, #12]
 80057b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057b8:	690f      	ldr	r7, [r1, #16]
 80057ba:	2f00      	cmp	r7, #0
 80057bc:	d0a7      	beq.n	800570e <__sflush_r+0x1a>
 80057be:	0793      	lsls	r3, r2, #30
 80057c0:	680e      	ldr	r6, [r1, #0]
 80057c2:	bf08      	it	eq
 80057c4:	694b      	ldreq	r3, [r1, #20]
 80057c6:	600f      	str	r7, [r1, #0]
 80057c8:	bf18      	it	ne
 80057ca:	2300      	movne	r3, #0
 80057cc:	eba6 0807 	sub.w	r8, r6, r7
 80057d0:	608b      	str	r3, [r1, #8]
 80057d2:	f1b8 0f00 	cmp.w	r8, #0
 80057d6:	dd9a      	ble.n	800570e <__sflush_r+0x1a>
 80057d8:	4643      	mov	r3, r8
 80057da:	463a      	mov	r2, r7
 80057dc:	6a21      	ldr	r1, [r4, #32]
 80057de:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80057e0:	4628      	mov	r0, r5
 80057e2:	47b0      	blx	r6
 80057e4:	2800      	cmp	r0, #0
 80057e6:	dc07      	bgt.n	80057f8 <__sflush_r+0x104>
 80057e8:	89a3      	ldrh	r3, [r4, #12]
 80057ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80057ee:	81a3      	strh	r3, [r4, #12]
 80057f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80057f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80057f8:	4407      	add	r7, r0
 80057fa:	eba8 0800 	sub.w	r8, r8, r0
 80057fe:	e7e8      	b.n	80057d2 <__sflush_r+0xde>
 8005800:	20400001 	.word	0x20400001

08005804 <_fflush_r>:
 8005804:	b538      	push	{r3, r4, r5, lr}
 8005806:	690b      	ldr	r3, [r1, #16]
 8005808:	4605      	mov	r5, r0
 800580a:	460c      	mov	r4, r1
 800580c:	b1db      	cbz	r3, 8005846 <_fflush_r+0x42>
 800580e:	b118      	cbz	r0, 8005818 <_fflush_r+0x14>
 8005810:	6983      	ldr	r3, [r0, #24]
 8005812:	b90b      	cbnz	r3, 8005818 <_fflush_r+0x14>
 8005814:	f000 f872 	bl	80058fc <__sinit>
 8005818:	4b0c      	ldr	r3, [pc, #48]	; (800584c <_fflush_r+0x48>)
 800581a:	429c      	cmp	r4, r3
 800581c:	d109      	bne.n	8005832 <_fflush_r+0x2e>
 800581e:	686c      	ldr	r4, [r5, #4]
 8005820:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005824:	b17b      	cbz	r3, 8005846 <_fflush_r+0x42>
 8005826:	4621      	mov	r1, r4
 8005828:	4628      	mov	r0, r5
 800582a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800582e:	f7ff bf61 	b.w	80056f4 <__sflush_r>
 8005832:	4b07      	ldr	r3, [pc, #28]	; (8005850 <_fflush_r+0x4c>)
 8005834:	429c      	cmp	r4, r3
 8005836:	d101      	bne.n	800583c <_fflush_r+0x38>
 8005838:	68ac      	ldr	r4, [r5, #8]
 800583a:	e7f1      	b.n	8005820 <_fflush_r+0x1c>
 800583c:	4b05      	ldr	r3, [pc, #20]	; (8005854 <_fflush_r+0x50>)
 800583e:	429c      	cmp	r4, r3
 8005840:	bf08      	it	eq
 8005842:	68ec      	ldreq	r4, [r5, #12]
 8005844:	e7ec      	b.n	8005820 <_fflush_r+0x1c>
 8005846:	2000      	movs	r0, #0
 8005848:	bd38      	pop	{r3, r4, r5, pc}
 800584a:	bf00      	nop
 800584c:	08006bfc 	.word	0x08006bfc
 8005850:	08006c1c 	.word	0x08006c1c
 8005854:	08006bdc 	.word	0x08006bdc

08005858 <fflush>:
 8005858:	4601      	mov	r1, r0
 800585a:	b920      	cbnz	r0, 8005866 <fflush+0xe>
 800585c:	4b04      	ldr	r3, [pc, #16]	; (8005870 <fflush+0x18>)
 800585e:	4905      	ldr	r1, [pc, #20]	; (8005874 <fflush+0x1c>)
 8005860:	6818      	ldr	r0, [r3, #0]
 8005862:	f000 b8b7 	b.w	80059d4 <_fwalk_reent>
 8005866:	4b04      	ldr	r3, [pc, #16]	; (8005878 <fflush+0x20>)
 8005868:	6818      	ldr	r0, [r3, #0]
 800586a:	f7ff bfcb 	b.w	8005804 <_fflush_r>
 800586e:	bf00      	nop
 8005870:	08006c3c 	.word	0x08006c3c
 8005874:	08005805 	.word	0x08005805
 8005878:	200001b8 	.word	0x200001b8

0800587c <_cleanup_r>:
 800587c:	4901      	ldr	r1, [pc, #4]	; (8005884 <_cleanup_r+0x8>)
 800587e:	f000 b8a9 	b.w	80059d4 <_fwalk_reent>
 8005882:	bf00      	nop
 8005884:	08005805 	.word	0x08005805

08005888 <std.isra.0>:
 8005888:	2300      	movs	r3, #0
 800588a:	b510      	push	{r4, lr}
 800588c:	4604      	mov	r4, r0
 800588e:	6003      	str	r3, [r0, #0]
 8005890:	6043      	str	r3, [r0, #4]
 8005892:	6083      	str	r3, [r0, #8]
 8005894:	8181      	strh	r1, [r0, #12]
 8005896:	6643      	str	r3, [r0, #100]	; 0x64
 8005898:	81c2      	strh	r2, [r0, #14]
 800589a:	6103      	str	r3, [r0, #16]
 800589c:	6143      	str	r3, [r0, #20]
 800589e:	6183      	str	r3, [r0, #24]
 80058a0:	4619      	mov	r1, r3
 80058a2:	2208      	movs	r2, #8
 80058a4:	305c      	adds	r0, #92	; 0x5c
 80058a6:	f000 f960 	bl	8005b6a <memset>
 80058aa:	4b05      	ldr	r3, [pc, #20]	; (80058c0 <std.isra.0+0x38>)
 80058ac:	6263      	str	r3, [r4, #36]	; 0x24
 80058ae:	4b05      	ldr	r3, [pc, #20]	; (80058c4 <std.isra.0+0x3c>)
 80058b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80058b2:	4b05      	ldr	r3, [pc, #20]	; (80058c8 <std.isra.0+0x40>)
 80058b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80058b6:	4b05      	ldr	r3, [pc, #20]	; (80058cc <std.isra.0+0x44>)
 80058b8:	6224      	str	r4, [r4, #32]
 80058ba:	6323      	str	r3, [r4, #48]	; 0x30
 80058bc:	bd10      	pop	{r4, pc}
 80058be:	bf00      	nop
 80058c0:	0800607d 	.word	0x0800607d
 80058c4:	0800609f 	.word	0x0800609f
 80058c8:	080060d7 	.word	0x080060d7
 80058cc:	080060fb 	.word	0x080060fb

080058d0 <__sfmoreglue>:
 80058d0:	b570      	push	{r4, r5, r6, lr}
 80058d2:	1e4a      	subs	r2, r1, #1
 80058d4:	2568      	movs	r5, #104	; 0x68
 80058d6:	4355      	muls	r5, r2
 80058d8:	460e      	mov	r6, r1
 80058da:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80058de:	f7ff fcab 	bl	8005238 <__wrap__malloc_r>
 80058e2:	4604      	mov	r4, r0
 80058e4:	b140      	cbz	r0, 80058f8 <__sfmoreglue+0x28>
 80058e6:	2100      	movs	r1, #0
 80058e8:	e880 0042 	stmia.w	r0, {r1, r6}
 80058ec:	300c      	adds	r0, #12
 80058ee:	60a0      	str	r0, [r4, #8]
 80058f0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80058f4:	f000 f939 	bl	8005b6a <memset>
 80058f8:	4620      	mov	r0, r4
 80058fa:	bd70      	pop	{r4, r5, r6, pc}

080058fc <__sinit>:
 80058fc:	6983      	ldr	r3, [r0, #24]
 80058fe:	b510      	push	{r4, lr}
 8005900:	4604      	mov	r4, r0
 8005902:	bb33      	cbnz	r3, 8005952 <__sinit+0x56>
 8005904:	6483      	str	r3, [r0, #72]	; 0x48
 8005906:	64c3      	str	r3, [r0, #76]	; 0x4c
 8005908:	6503      	str	r3, [r0, #80]	; 0x50
 800590a:	4b12      	ldr	r3, [pc, #72]	; (8005954 <__sinit+0x58>)
 800590c:	4a12      	ldr	r2, [pc, #72]	; (8005958 <__sinit+0x5c>)
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	6282      	str	r2, [r0, #40]	; 0x28
 8005912:	4298      	cmp	r0, r3
 8005914:	bf04      	itt	eq
 8005916:	2301      	moveq	r3, #1
 8005918:	6183      	streq	r3, [r0, #24]
 800591a:	f000 f81f 	bl	800595c <__sfp>
 800591e:	6060      	str	r0, [r4, #4]
 8005920:	4620      	mov	r0, r4
 8005922:	f000 f81b 	bl	800595c <__sfp>
 8005926:	60a0      	str	r0, [r4, #8]
 8005928:	4620      	mov	r0, r4
 800592a:	f000 f817 	bl	800595c <__sfp>
 800592e:	2200      	movs	r2, #0
 8005930:	60e0      	str	r0, [r4, #12]
 8005932:	2104      	movs	r1, #4
 8005934:	6860      	ldr	r0, [r4, #4]
 8005936:	f7ff ffa7 	bl	8005888 <std.isra.0>
 800593a:	2201      	movs	r2, #1
 800593c:	2109      	movs	r1, #9
 800593e:	68a0      	ldr	r0, [r4, #8]
 8005940:	f7ff ffa2 	bl	8005888 <std.isra.0>
 8005944:	2202      	movs	r2, #2
 8005946:	2112      	movs	r1, #18
 8005948:	68e0      	ldr	r0, [r4, #12]
 800594a:	f7ff ff9d 	bl	8005888 <std.isra.0>
 800594e:	2301      	movs	r3, #1
 8005950:	61a3      	str	r3, [r4, #24]
 8005952:	bd10      	pop	{r4, pc}
 8005954:	08006c3c 	.word	0x08006c3c
 8005958:	0800587d 	.word	0x0800587d

0800595c <__sfp>:
 800595c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800595e:	4b1c      	ldr	r3, [pc, #112]	; (80059d0 <__sfp+0x74>)
 8005960:	681e      	ldr	r6, [r3, #0]
 8005962:	69b3      	ldr	r3, [r6, #24]
 8005964:	4607      	mov	r7, r0
 8005966:	b913      	cbnz	r3, 800596e <__sfp+0x12>
 8005968:	4630      	mov	r0, r6
 800596a:	f7ff ffc7 	bl	80058fc <__sinit>
 800596e:	3648      	adds	r6, #72	; 0x48
 8005970:	68b4      	ldr	r4, [r6, #8]
 8005972:	6873      	ldr	r3, [r6, #4]
 8005974:	3b01      	subs	r3, #1
 8005976:	d503      	bpl.n	8005980 <__sfp+0x24>
 8005978:	6833      	ldr	r3, [r6, #0]
 800597a:	b133      	cbz	r3, 800598a <__sfp+0x2e>
 800597c:	6836      	ldr	r6, [r6, #0]
 800597e:	e7f7      	b.n	8005970 <__sfp+0x14>
 8005980:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005984:	b16d      	cbz	r5, 80059a2 <__sfp+0x46>
 8005986:	3468      	adds	r4, #104	; 0x68
 8005988:	e7f4      	b.n	8005974 <__sfp+0x18>
 800598a:	2104      	movs	r1, #4
 800598c:	4638      	mov	r0, r7
 800598e:	f7ff ff9f 	bl	80058d0 <__sfmoreglue>
 8005992:	6030      	str	r0, [r6, #0]
 8005994:	2800      	cmp	r0, #0
 8005996:	d1f1      	bne.n	800597c <__sfp+0x20>
 8005998:	230c      	movs	r3, #12
 800599a:	603b      	str	r3, [r7, #0]
 800599c:	4604      	mov	r4, r0
 800599e:	4620      	mov	r0, r4
 80059a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80059a2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80059a6:	81e3      	strh	r3, [r4, #14]
 80059a8:	2301      	movs	r3, #1
 80059aa:	81a3      	strh	r3, [r4, #12]
 80059ac:	6665      	str	r5, [r4, #100]	; 0x64
 80059ae:	6025      	str	r5, [r4, #0]
 80059b0:	60a5      	str	r5, [r4, #8]
 80059b2:	6065      	str	r5, [r4, #4]
 80059b4:	6125      	str	r5, [r4, #16]
 80059b6:	6165      	str	r5, [r4, #20]
 80059b8:	61a5      	str	r5, [r4, #24]
 80059ba:	2208      	movs	r2, #8
 80059bc:	4629      	mov	r1, r5
 80059be:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80059c2:	f000 f8d2 	bl	8005b6a <memset>
 80059c6:	6365      	str	r5, [r4, #52]	; 0x34
 80059c8:	63a5      	str	r5, [r4, #56]	; 0x38
 80059ca:	64a5      	str	r5, [r4, #72]	; 0x48
 80059cc:	64e5      	str	r5, [r4, #76]	; 0x4c
 80059ce:	e7e6      	b.n	800599e <__sfp+0x42>
 80059d0:	08006c3c 	.word	0x08006c3c

080059d4 <_fwalk_reent>:
 80059d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80059d8:	4680      	mov	r8, r0
 80059da:	4689      	mov	r9, r1
 80059dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80059e0:	2600      	movs	r6, #0
 80059e2:	b914      	cbnz	r4, 80059ea <_fwalk_reent+0x16>
 80059e4:	4630      	mov	r0, r6
 80059e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80059ea:	68a5      	ldr	r5, [r4, #8]
 80059ec:	6867      	ldr	r7, [r4, #4]
 80059ee:	3f01      	subs	r7, #1
 80059f0:	d501      	bpl.n	80059f6 <_fwalk_reent+0x22>
 80059f2:	6824      	ldr	r4, [r4, #0]
 80059f4:	e7f5      	b.n	80059e2 <_fwalk_reent+0xe>
 80059f6:	89ab      	ldrh	r3, [r5, #12]
 80059f8:	2b01      	cmp	r3, #1
 80059fa:	d907      	bls.n	8005a0c <_fwalk_reent+0x38>
 80059fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005a00:	3301      	adds	r3, #1
 8005a02:	d003      	beq.n	8005a0c <_fwalk_reent+0x38>
 8005a04:	4629      	mov	r1, r5
 8005a06:	4640      	mov	r0, r8
 8005a08:	47c8      	blx	r9
 8005a0a:	4306      	orrs	r6, r0
 8005a0c:	3568      	adds	r5, #104	; 0x68
 8005a0e:	e7ee      	b.n	80059ee <_fwalk_reent+0x1a>

08005a10 <__libc_init_array>:
 8005a10:	b570      	push	{r4, r5, r6, lr}
 8005a12:	4e0d      	ldr	r6, [pc, #52]	; (8005a48 <__libc_init_array+0x38>)
 8005a14:	4c0d      	ldr	r4, [pc, #52]	; (8005a4c <__libc_init_array+0x3c>)
 8005a16:	1ba4      	subs	r4, r4, r6
 8005a18:	10a4      	asrs	r4, r4, #2
 8005a1a:	2500      	movs	r5, #0
 8005a1c:	42a5      	cmp	r5, r4
 8005a1e:	d109      	bne.n	8005a34 <__libc_init_array+0x24>
 8005a20:	4e0b      	ldr	r6, [pc, #44]	; (8005a50 <__libc_init_array+0x40>)
 8005a22:	4c0c      	ldr	r4, [pc, #48]	; (8005a54 <__libc_init_array+0x44>)
 8005a24:	f000 fd36 	bl	8006494 <_init>
 8005a28:	1ba4      	subs	r4, r4, r6
 8005a2a:	10a4      	asrs	r4, r4, #2
 8005a2c:	2500      	movs	r5, #0
 8005a2e:	42a5      	cmp	r5, r4
 8005a30:	d105      	bne.n	8005a3e <__libc_init_array+0x2e>
 8005a32:	bd70      	pop	{r4, r5, r6, pc}
 8005a34:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005a38:	4798      	blx	r3
 8005a3a:	3501      	adds	r5, #1
 8005a3c:	e7ee      	b.n	8005a1c <__libc_init_array+0xc>
 8005a3e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8005a42:	4798      	blx	r3
 8005a44:	3501      	adds	r5, #1
 8005a46:	e7f2      	b.n	8005a2e <__libc_init_array+0x1e>
 8005a48:	2000021c 	.word	0x2000021c
 8005a4c:	2000021c 	.word	0x2000021c
 8005a50:	2000021c 	.word	0x2000021c
 8005a54:	20000228 	.word	0x20000228

08005a58 <malloc>:
 8005a58:	4b02      	ldr	r3, [pc, #8]	; (8005a64 <malloc+0xc>)
 8005a5a:	4601      	mov	r1, r0
 8005a5c:	6818      	ldr	r0, [r3, #0]
 8005a5e:	f7ff bbeb 	b.w	8005238 <__wrap__malloc_r>
 8005a62:	bf00      	nop
 8005a64:	200001b8 	.word	0x200001b8

08005a68 <free>:
 8005a68:	4b02      	ldr	r3, [pc, #8]	; (8005a74 <free+0xc>)
 8005a6a:	4601      	mov	r1, r0
 8005a6c:	6818      	ldr	r0, [r3, #0]
 8005a6e:	f7ff bbe7 	b.w	8005240 <__wrap__free_r>
 8005a72:	bf00      	nop
 8005a74:	200001b8 	.word	0x200001b8
	...

08005a80 <memchr>:
 8005a80:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005a84:	2a10      	cmp	r2, #16
 8005a86:	db2b      	blt.n	8005ae0 <memchr+0x60>
 8005a88:	f010 0f07 	tst.w	r0, #7
 8005a8c:	d008      	beq.n	8005aa0 <memchr+0x20>
 8005a8e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005a92:	3a01      	subs	r2, #1
 8005a94:	428b      	cmp	r3, r1
 8005a96:	d02d      	beq.n	8005af4 <memchr+0x74>
 8005a98:	f010 0f07 	tst.w	r0, #7
 8005a9c:	b342      	cbz	r2, 8005af0 <memchr+0x70>
 8005a9e:	d1f6      	bne.n	8005a8e <memchr+0xe>
 8005aa0:	b4f0      	push	{r4, r5, r6, r7}
 8005aa2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005aa6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8005aaa:	f022 0407 	bic.w	r4, r2, #7
 8005aae:	f07f 0700 	mvns.w	r7, #0
 8005ab2:	2300      	movs	r3, #0
 8005ab4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8005ab8:	3c08      	subs	r4, #8
 8005aba:	ea85 0501 	eor.w	r5, r5, r1
 8005abe:	ea86 0601 	eor.w	r6, r6, r1
 8005ac2:	fa85 f547 	uadd8	r5, r5, r7
 8005ac6:	faa3 f587 	sel	r5, r3, r7
 8005aca:	fa86 f647 	uadd8	r6, r6, r7
 8005ace:	faa5 f687 	sel	r6, r5, r7
 8005ad2:	b98e      	cbnz	r6, 8005af8 <memchr+0x78>
 8005ad4:	d1ee      	bne.n	8005ab4 <memchr+0x34>
 8005ad6:	bcf0      	pop	{r4, r5, r6, r7}
 8005ad8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8005adc:	f002 0207 	and.w	r2, r2, #7
 8005ae0:	b132      	cbz	r2, 8005af0 <memchr+0x70>
 8005ae2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005ae6:	3a01      	subs	r2, #1
 8005ae8:	ea83 0301 	eor.w	r3, r3, r1
 8005aec:	b113      	cbz	r3, 8005af4 <memchr+0x74>
 8005aee:	d1f8      	bne.n	8005ae2 <memchr+0x62>
 8005af0:	2000      	movs	r0, #0
 8005af2:	4770      	bx	lr
 8005af4:	3801      	subs	r0, #1
 8005af6:	4770      	bx	lr
 8005af8:	2d00      	cmp	r5, #0
 8005afa:	bf06      	itte	eq
 8005afc:	4635      	moveq	r5, r6
 8005afe:	3803      	subeq	r0, #3
 8005b00:	3807      	subne	r0, #7
 8005b02:	f015 0f01 	tst.w	r5, #1
 8005b06:	d107      	bne.n	8005b18 <memchr+0x98>
 8005b08:	3001      	adds	r0, #1
 8005b0a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8005b0e:	bf02      	ittt	eq
 8005b10:	3001      	addeq	r0, #1
 8005b12:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005b16:	3001      	addeq	r0, #1
 8005b18:	bcf0      	pop	{r4, r5, r6, r7}
 8005b1a:	3801      	subs	r0, #1
 8005b1c:	4770      	bx	lr
 8005b1e:	bf00      	nop

08005b20 <memcpy>:
 8005b20:	b510      	push	{r4, lr}
 8005b22:	1e43      	subs	r3, r0, #1
 8005b24:	440a      	add	r2, r1
 8005b26:	4291      	cmp	r1, r2
 8005b28:	d100      	bne.n	8005b2c <memcpy+0xc>
 8005b2a:	bd10      	pop	{r4, pc}
 8005b2c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005b30:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005b34:	e7f7      	b.n	8005b26 <memcpy+0x6>

08005b36 <memmove>:
 8005b36:	4288      	cmp	r0, r1
 8005b38:	b510      	push	{r4, lr}
 8005b3a:	eb01 0302 	add.w	r3, r1, r2
 8005b3e:	d803      	bhi.n	8005b48 <memmove+0x12>
 8005b40:	1e42      	subs	r2, r0, #1
 8005b42:	4299      	cmp	r1, r3
 8005b44:	d10c      	bne.n	8005b60 <memmove+0x2a>
 8005b46:	bd10      	pop	{r4, pc}
 8005b48:	4298      	cmp	r0, r3
 8005b4a:	d2f9      	bcs.n	8005b40 <memmove+0xa>
 8005b4c:	1881      	adds	r1, r0, r2
 8005b4e:	1ad2      	subs	r2, r2, r3
 8005b50:	42d3      	cmn	r3, r2
 8005b52:	d100      	bne.n	8005b56 <memmove+0x20>
 8005b54:	bd10      	pop	{r4, pc}
 8005b56:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005b5a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8005b5e:	e7f7      	b.n	8005b50 <memmove+0x1a>
 8005b60:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005b64:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005b68:	e7eb      	b.n	8005b42 <memmove+0xc>

08005b6a <memset>:
 8005b6a:	4402      	add	r2, r0
 8005b6c:	4603      	mov	r3, r0
 8005b6e:	4293      	cmp	r3, r2
 8005b70:	d100      	bne.n	8005b74 <memset+0xa>
 8005b72:	4770      	bx	lr
 8005b74:	f803 1b01 	strb.w	r1, [r3], #1
 8005b78:	e7f9      	b.n	8005b6e <memset+0x4>
	...

08005b7c <_free_r>:
 8005b7c:	b538      	push	{r3, r4, r5, lr}
 8005b7e:	4605      	mov	r5, r0
 8005b80:	2900      	cmp	r1, #0
 8005b82:	d045      	beq.n	8005c10 <_free_r+0x94>
 8005b84:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005b88:	1f0c      	subs	r4, r1, #4
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	bfb8      	it	lt
 8005b8e:	18e4      	addlt	r4, r4, r3
 8005b90:	f7ff fc77 	bl	8005482 <__malloc_lock>
 8005b94:	4a1f      	ldr	r2, [pc, #124]	; (8005c14 <_free_r+0x98>)
 8005b96:	6813      	ldr	r3, [r2, #0]
 8005b98:	4610      	mov	r0, r2
 8005b9a:	b933      	cbnz	r3, 8005baa <_free_r+0x2e>
 8005b9c:	6063      	str	r3, [r4, #4]
 8005b9e:	6014      	str	r4, [r2, #0]
 8005ba0:	4628      	mov	r0, r5
 8005ba2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005ba6:	f7ff bc70 	b.w	800548a <__malloc_unlock>
 8005baa:	42a3      	cmp	r3, r4
 8005bac:	d90c      	bls.n	8005bc8 <_free_r+0x4c>
 8005bae:	6821      	ldr	r1, [r4, #0]
 8005bb0:	1862      	adds	r2, r4, r1
 8005bb2:	4293      	cmp	r3, r2
 8005bb4:	bf04      	itt	eq
 8005bb6:	681a      	ldreq	r2, [r3, #0]
 8005bb8:	685b      	ldreq	r3, [r3, #4]
 8005bba:	6063      	str	r3, [r4, #4]
 8005bbc:	bf04      	itt	eq
 8005bbe:	1852      	addeq	r2, r2, r1
 8005bc0:	6022      	streq	r2, [r4, #0]
 8005bc2:	6004      	str	r4, [r0, #0]
 8005bc4:	e7ec      	b.n	8005ba0 <_free_r+0x24>
 8005bc6:	4613      	mov	r3, r2
 8005bc8:	685a      	ldr	r2, [r3, #4]
 8005bca:	b10a      	cbz	r2, 8005bd0 <_free_r+0x54>
 8005bcc:	42a2      	cmp	r2, r4
 8005bce:	d9fa      	bls.n	8005bc6 <_free_r+0x4a>
 8005bd0:	6819      	ldr	r1, [r3, #0]
 8005bd2:	1858      	adds	r0, r3, r1
 8005bd4:	42a0      	cmp	r0, r4
 8005bd6:	d10b      	bne.n	8005bf0 <_free_r+0x74>
 8005bd8:	6820      	ldr	r0, [r4, #0]
 8005bda:	4401      	add	r1, r0
 8005bdc:	1858      	adds	r0, r3, r1
 8005bde:	4282      	cmp	r2, r0
 8005be0:	6019      	str	r1, [r3, #0]
 8005be2:	d1dd      	bne.n	8005ba0 <_free_r+0x24>
 8005be4:	6810      	ldr	r0, [r2, #0]
 8005be6:	6852      	ldr	r2, [r2, #4]
 8005be8:	605a      	str	r2, [r3, #4]
 8005bea:	4401      	add	r1, r0
 8005bec:	6019      	str	r1, [r3, #0]
 8005bee:	e7d7      	b.n	8005ba0 <_free_r+0x24>
 8005bf0:	d902      	bls.n	8005bf8 <_free_r+0x7c>
 8005bf2:	230c      	movs	r3, #12
 8005bf4:	602b      	str	r3, [r5, #0]
 8005bf6:	e7d3      	b.n	8005ba0 <_free_r+0x24>
 8005bf8:	6820      	ldr	r0, [r4, #0]
 8005bfa:	1821      	adds	r1, r4, r0
 8005bfc:	428a      	cmp	r2, r1
 8005bfe:	bf04      	itt	eq
 8005c00:	6811      	ldreq	r1, [r2, #0]
 8005c02:	6852      	ldreq	r2, [r2, #4]
 8005c04:	6062      	str	r2, [r4, #4]
 8005c06:	bf04      	itt	eq
 8005c08:	1809      	addeq	r1, r1, r0
 8005c0a:	6021      	streq	r1, [r4, #0]
 8005c0c:	605c      	str	r4, [r3, #4]
 8005c0e:	e7c7      	b.n	8005ba0 <_free_r+0x24>
 8005c10:	bd38      	pop	{r3, r4, r5, pc}
 8005c12:	bf00      	nop
 8005c14:	20001e74 	.word	0x20001e74

08005c18 <_malloc_r>:
 8005c18:	b570      	push	{r4, r5, r6, lr}
 8005c1a:	1ccd      	adds	r5, r1, #3
 8005c1c:	f025 0503 	bic.w	r5, r5, #3
 8005c20:	3508      	adds	r5, #8
 8005c22:	2d0c      	cmp	r5, #12
 8005c24:	bf38      	it	cc
 8005c26:	250c      	movcc	r5, #12
 8005c28:	2d00      	cmp	r5, #0
 8005c2a:	4606      	mov	r6, r0
 8005c2c:	db01      	blt.n	8005c32 <_malloc_r+0x1a>
 8005c2e:	42a9      	cmp	r1, r5
 8005c30:	d903      	bls.n	8005c3a <_malloc_r+0x22>
 8005c32:	230c      	movs	r3, #12
 8005c34:	6033      	str	r3, [r6, #0]
 8005c36:	2000      	movs	r0, #0
 8005c38:	bd70      	pop	{r4, r5, r6, pc}
 8005c3a:	f7ff fc22 	bl	8005482 <__malloc_lock>
 8005c3e:	4a23      	ldr	r2, [pc, #140]	; (8005ccc <_malloc_r+0xb4>)
 8005c40:	6814      	ldr	r4, [r2, #0]
 8005c42:	4621      	mov	r1, r4
 8005c44:	b991      	cbnz	r1, 8005c6c <_malloc_r+0x54>
 8005c46:	4c22      	ldr	r4, [pc, #136]	; (8005cd0 <_malloc_r+0xb8>)
 8005c48:	6823      	ldr	r3, [r4, #0]
 8005c4a:	b91b      	cbnz	r3, 8005c54 <_malloc_r+0x3c>
 8005c4c:	4630      	mov	r0, r6
 8005c4e:	f000 fa05 	bl	800605c <_sbrk_r>
 8005c52:	6020      	str	r0, [r4, #0]
 8005c54:	4629      	mov	r1, r5
 8005c56:	4630      	mov	r0, r6
 8005c58:	f000 fa00 	bl	800605c <_sbrk_r>
 8005c5c:	1c43      	adds	r3, r0, #1
 8005c5e:	d126      	bne.n	8005cae <_malloc_r+0x96>
 8005c60:	230c      	movs	r3, #12
 8005c62:	6033      	str	r3, [r6, #0]
 8005c64:	4630      	mov	r0, r6
 8005c66:	f7ff fc10 	bl	800548a <__malloc_unlock>
 8005c6a:	e7e4      	b.n	8005c36 <_malloc_r+0x1e>
 8005c6c:	680b      	ldr	r3, [r1, #0]
 8005c6e:	1b5b      	subs	r3, r3, r5
 8005c70:	d41a      	bmi.n	8005ca8 <_malloc_r+0x90>
 8005c72:	2b0b      	cmp	r3, #11
 8005c74:	d90f      	bls.n	8005c96 <_malloc_r+0x7e>
 8005c76:	600b      	str	r3, [r1, #0]
 8005c78:	50cd      	str	r5, [r1, r3]
 8005c7a:	18cc      	adds	r4, r1, r3
 8005c7c:	4630      	mov	r0, r6
 8005c7e:	f7ff fc04 	bl	800548a <__malloc_unlock>
 8005c82:	f104 000b 	add.w	r0, r4, #11
 8005c86:	1d23      	adds	r3, r4, #4
 8005c88:	f020 0007 	bic.w	r0, r0, #7
 8005c8c:	1ac3      	subs	r3, r0, r3
 8005c8e:	d01b      	beq.n	8005cc8 <_malloc_r+0xb0>
 8005c90:	425a      	negs	r2, r3
 8005c92:	50e2      	str	r2, [r4, r3]
 8005c94:	bd70      	pop	{r4, r5, r6, pc}
 8005c96:	428c      	cmp	r4, r1
 8005c98:	bf0d      	iteet	eq
 8005c9a:	6863      	ldreq	r3, [r4, #4]
 8005c9c:	684b      	ldrne	r3, [r1, #4]
 8005c9e:	6063      	strne	r3, [r4, #4]
 8005ca0:	6013      	streq	r3, [r2, #0]
 8005ca2:	bf18      	it	ne
 8005ca4:	460c      	movne	r4, r1
 8005ca6:	e7e9      	b.n	8005c7c <_malloc_r+0x64>
 8005ca8:	460c      	mov	r4, r1
 8005caa:	6849      	ldr	r1, [r1, #4]
 8005cac:	e7ca      	b.n	8005c44 <_malloc_r+0x2c>
 8005cae:	1cc4      	adds	r4, r0, #3
 8005cb0:	f024 0403 	bic.w	r4, r4, #3
 8005cb4:	42a0      	cmp	r0, r4
 8005cb6:	d005      	beq.n	8005cc4 <_malloc_r+0xac>
 8005cb8:	1a21      	subs	r1, r4, r0
 8005cba:	4630      	mov	r0, r6
 8005cbc:	f000 f9ce 	bl	800605c <_sbrk_r>
 8005cc0:	3001      	adds	r0, #1
 8005cc2:	d0cd      	beq.n	8005c60 <_malloc_r+0x48>
 8005cc4:	6025      	str	r5, [r4, #0]
 8005cc6:	e7d9      	b.n	8005c7c <_malloc_r+0x64>
 8005cc8:	bd70      	pop	{r4, r5, r6, pc}
 8005cca:	bf00      	nop
 8005ccc:	20001e74 	.word	0x20001e74
 8005cd0:	20001e78 	.word	0x20001e78

08005cd4 <_realloc_r>:
 8005cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005cd6:	4607      	mov	r7, r0
 8005cd8:	4614      	mov	r4, r2
 8005cda:	460e      	mov	r6, r1
 8005cdc:	b921      	cbnz	r1, 8005ce8 <_realloc_r+0x14>
 8005cde:	4611      	mov	r1, r2
 8005ce0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005ce4:	f7ff baa8 	b.w	8005238 <__wrap__malloc_r>
 8005ce8:	b922      	cbnz	r2, 8005cf4 <_realloc_r+0x20>
 8005cea:	f7ff faa9 	bl	8005240 <__wrap__free_r>
 8005cee:	4625      	mov	r5, r4
 8005cf0:	4628      	mov	r0, r5
 8005cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005cf4:	f000 fa64 	bl	80061c0 <_malloc_usable_size_r>
 8005cf8:	4284      	cmp	r4, r0
 8005cfa:	d90f      	bls.n	8005d1c <_realloc_r+0x48>
 8005cfc:	4621      	mov	r1, r4
 8005cfe:	4638      	mov	r0, r7
 8005d00:	f7ff fa9a 	bl	8005238 <__wrap__malloc_r>
 8005d04:	4605      	mov	r5, r0
 8005d06:	2800      	cmp	r0, #0
 8005d08:	d0f2      	beq.n	8005cf0 <_realloc_r+0x1c>
 8005d0a:	4631      	mov	r1, r6
 8005d0c:	4622      	mov	r2, r4
 8005d0e:	f7ff ff07 	bl	8005b20 <memcpy>
 8005d12:	4631      	mov	r1, r6
 8005d14:	4638      	mov	r0, r7
 8005d16:	f7ff fa93 	bl	8005240 <__wrap__free_r>
 8005d1a:	e7e9      	b.n	8005cf0 <_realloc_r+0x1c>
 8005d1c:	4635      	mov	r5, r6
 8005d1e:	e7e7      	b.n	8005cf0 <_realloc_r+0x1c>

08005d20 <_printf_common>:
 8005d20:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005d24:	4691      	mov	r9, r2
 8005d26:	461f      	mov	r7, r3
 8005d28:	688a      	ldr	r2, [r1, #8]
 8005d2a:	690b      	ldr	r3, [r1, #16]
 8005d2c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005d30:	4293      	cmp	r3, r2
 8005d32:	bfb8      	it	lt
 8005d34:	4613      	movlt	r3, r2
 8005d36:	f8c9 3000 	str.w	r3, [r9]
 8005d3a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005d3e:	4606      	mov	r6, r0
 8005d40:	460c      	mov	r4, r1
 8005d42:	b112      	cbz	r2, 8005d4a <_printf_common+0x2a>
 8005d44:	3301      	adds	r3, #1
 8005d46:	f8c9 3000 	str.w	r3, [r9]
 8005d4a:	6823      	ldr	r3, [r4, #0]
 8005d4c:	0699      	lsls	r1, r3, #26
 8005d4e:	bf42      	ittt	mi
 8005d50:	f8d9 3000 	ldrmi.w	r3, [r9]
 8005d54:	3302      	addmi	r3, #2
 8005d56:	f8c9 3000 	strmi.w	r3, [r9]
 8005d5a:	6825      	ldr	r5, [r4, #0]
 8005d5c:	f015 0506 	ands.w	r5, r5, #6
 8005d60:	d107      	bne.n	8005d72 <_printf_common+0x52>
 8005d62:	f104 0a19 	add.w	r10, r4, #25
 8005d66:	68e3      	ldr	r3, [r4, #12]
 8005d68:	f8d9 2000 	ldr.w	r2, [r9]
 8005d6c:	1a9b      	subs	r3, r3, r2
 8005d6e:	429d      	cmp	r5, r3
 8005d70:	db29      	blt.n	8005dc6 <_printf_common+0xa6>
 8005d72:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8005d76:	6822      	ldr	r2, [r4, #0]
 8005d78:	3300      	adds	r3, #0
 8005d7a:	bf18      	it	ne
 8005d7c:	2301      	movne	r3, #1
 8005d7e:	0692      	lsls	r2, r2, #26
 8005d80:	d42e      	bmi.n	8005de0 <_printf_common+0xc0>
 8005d82:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005d86:	4639      	mov	r1, r7
 8005d88:	4630      	mov	r0, r6
 8005d8a:	47c0      	blx	r8
 8005d8c:	3001      	adds	r0, #1
 8005d8e:	d021      	beq.n	8005dd4 <_printf_common+0xb4>
 8005d90:	6823      	ldr	r3, [r4, #0]
 8005d92:	68e5      	ldr	r5, [r4, #12]
 8005d94:	f8d9 2000 	ldr.w	r2, [r9]
 8005d98:	f003 0306 	and.w	r3, r3, #6
 8005d9c:	2b04      	cmp	r3, #4
 8005d9e:	bf08      	it	eq
 8005da0:	1aad      	subeq	r5, r5, r2
 8005da2:	68a3      	ldr	r3, [r4, #8]
 8005da4:	6922      	ldr	r2, [r4, #16]
 8005da6:	bf0c      	ite	eq
 8005da8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005dac:	2500      	movne	r5, #0
 8005dae:	4293      	cmp	r3, r2
 8005db0:	bfc4      	itt	gt
 8005db2:	1a9b      	subgt	r3, r3, r2
 8005db4:	18ed      	addgt	r5, r5, r3
 8005db6:	f04f 0900 	mov.w	r9, #0
 8005dba:	341a      	adds	r4, #26
 8005dbc:	454d      	cmp	r5, r9
 8005dbe:	d11b      	bne.n	8005df8 <_printf_common+0xd8>
 8005dc0:	2000      	movs	r0, #0
 8005dc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005dc6:	2301      	movs	r3, #1
 8005dc8:	4652      	mov	r2, r10
 8005dca:	4639      	mov	r1, r7
 8005dcc:	4630      	mov	r0, r6
 8005dce:	47c0      	blx	r8
 8005dd0:	3001      	adds	r0, #1
 8005dd2:	d103      	bne.n	8005ddc <_printf_common+0xbc>
 8005dd4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005dd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005ddc:	3501      	adds	r5, #1
 8005dde:	e7c2      	b.n	8005d66 <_printf_common+0x46>
 8005de0:	18e1      	adds	r1, r4, r3
 8005de2:	1c5a      	adds	r2, r3, #1
 8005de4:	2030      	movs	r0, #48	; 0x30
 8005de6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005dea:	4422      	add	r2, r4
 8005dec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005df0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005df4:	3302      	adds	r3, #2
 8005df6:	e7c4      	b.n	8005d82 <_printf_common+0x62>
 8005df8:	2301      	movs	r3, #1
 8005dfa:	4622      	mov	r2, r4
 8005dfc:	4639      	mov	r1, r7
 8005dfe:	4630      	mov	r0, r6
 8005e00:	47c0      	blx	r8
 8005e02:	3001      	adds	r0, #1
 8005e04:	d0e6      	beq.n	8005dd4 <_printf_common+0xb4>
 8005e06:	f109 0901 	add.w	r9, r9, #1
 8005e0a:	e7d7      	b.n	8005dbc <_printf_common+0x9c>

08005e0c <_printf_i>:
 8005e0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005e10:	4617      	mov	r7, r2
 8005e12:	7e0a      	ldrb	r2, [r1, #24]
 8005e14:	b085      	sub	sp, #20
 8005e16:	2a6e      	cmp	r2, #110	; 0x6e
 8005e18:	4698      	mov	r8, r3
 8005e1a:	4606      	mov	r6, r0
 8005e1c:	460c      	mov	r4, r1
 8005e1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e20:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8005e24:	f000 80bc 	beq.w	8005fa0 <_printf_i+0x194>
 8005e28:	d81a      	bhi.n	8005e60 <_printf_i+0x54>
 8005e2a:	2a63      	cmp	r2, #99	; 0x63
 8005e2c:	d02e      	beq.n	8005e8c <_printf_i+0x80>
 8005e2e:	d80a      	bhi.n	8005e46 <_printf_i+0x3a>
 8005e30:	2a00      	cmp	r2, #0
 8005e32:	f000 80c8 	beq.w	8005fc6 <_printf_i+0x1ba>
 8005e36:	2a58      	cmp	r2, #88	; 0x58
 8005e38:	f000 808a 	beq.w	8005f50 <_printf_i+0x144>
 8005e3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005e40:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8005e44:	e02a      	b.n	8005e9c <_printf_i+0x90>
 8005e46:	2a64      	cmp	r2, #100	; 0x64
 8005e48:	d001      	beq.n	8005e4e <_printf_i+0x42>
 8005e4a:	2a69      	cmp	r2, #105	; 0x69
 8005e4c:	d1f6      	bne.n	8005e3c <_printf_i+0x30>
 8005e4e:	6821      	ldr	r1, [r4, #0]
 8005e50:	681a      	ldr	r2, [r3, #0]
 8005e52:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005e56:	d023      	beq.n	8005ea0 <_printf_i+0x94>
 8005e58:	1d11      	adds	r1, r2, #4
 8005e5a:	6019      	str	r1, [r3, #0]
 8005e5c:	6813      	ldr	r3, [r2, #0]
 8005e5e:	e027      	b.n	8005eb0 <_printf_i+0xa4>
 8005e60:	2a73      	cmp	r2, #115	; 0x73
 8005e62:	f000 80b4 	beq.w	8005fce <_printf_i+0x1c2>
 8005e66:	d808      	bhi.n	8005e7a <_printf_i+0x6e>
 8005e68:	2a6f      	cmp	r2, #111	; 0x6f
 8005e6a:	d02a      	beq.n	8005ec2 <_printf_i+0xb6>
 8005e6c:	2a70      	cmp	r2, #112	; 0x70
 8005e6e:	d1e5      	bne.n	8005e3c <_printf_i+0x30>
 8005e70:	680a      	ldr	r2, [r1, #0]
 8005e72:	f042 0220 	orr.w	r2, r2, #32
 8005e76:	600a      	str	r2, [r1, #0]
 8005e78:	e003      	b.n	8005e82 <_printf_i+0x76>
 8005e7a:	2a75      	cmp	r2, #117	; 0x75
 8005e7c:	d021      	beq.n	8005ec2 <_printf_i+0xb6>
 8005e7e:	2a78      	cmp	r2, #120	; 0x78
 8005e80:	d1dc      	bne.n	8005e3c <_printf_i+0x30>
 8005e82:	2278      	movs	r2, #120	; 0x78
 8005e84:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8005e88:	496e      	ldr	r1, [pc, #440]	; (8006044 <_printf_i+0x238>)
 8005e8a:	e064      	b.n	8005f56 <_printf_i+0x14a>
 8005e8c:	681a      	ldr	r2, [r3, #0]
 8005e8e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8005e92:	1d11      	adds	r1, r2, #4
 8005e94:	6019      	str	r1, [r3, #0]
 8005e96:	6813      	ldr	r3, [r2, #0]
 8005e98:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005e9c:	2301      	movs	r3, #1
 8005e9e:	e0a3      	b.n	8005fe8 <_printf_i+0x1dc>
 8005ea0:	f011 0f40 	tst.w	r1, #64	; 0x40
 8005ea4:	f102 0104 	add.w	r1, r2, #4
 8005ea8:	6019      	str	r1, [r3, #0]
 8005eaa:	d0d7      	beq.n	8005e5c <_printf_i+0x50>
 8005eac:	f9b2 3000 	ldrsh.w	r3, [r2]
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	da03      	bge.n	8005ebc <_printf_i+0xb0>
 8005eb4:	222d      	movs	r2, #45	; 0x2d
 8005eb6:	425b      	negs	r3, r3
 8005eb8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8005ebc:	4962      	ldr	r1, [pc, #392]	; (8006048 <_printf_i+0x23c>)
 8005ebe:	220a      	movs	r2, #10
 8005ec0:	e017      	b.n	8005ef2 <_printf_i+0xe6>
 8005ec2:	6820      	ldr	r0, [r4, #0]
 8005ec4:	6819      	ldr	r1, [r3, #0]
 8005ec6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005eca:	d003      	beq.n	8005ed4 <_printf_i+0xc8>
 8005ecc:	1d08      	adds	r0, r1, #4
 8005ece:	6018      	str	r0, [r3, #0]
 8005ed0:	680b      	ldr	r3, [r1, #0]
 8005ed2:	e006      	b.n	8005ee2 <_printf_i+0xd6>
 8005ed4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005ed8:	f101 0004 	add.w	r0, r1, #4
 8005edc:	6018      	str	r0, [r3, #0]
 8005ede:	d0f7      	beq.n	8005ed0 <_printf_i+0xc4>
 8005ee0:	880b      	ldrh	r3, [r1, #0]
 8005ee2:	4959      	ldr	r1, [pc, #356]	; (8006048 <_printf_i+0x23c>)
 8005ee4:	2a6f      	cmp	r2, #111	; 0x6f
 8005ee6:	bf14      	ite	ne
 8005ee8:	220a      	movne	r2, #10
 8005eea:	2208      	moveq	r2, #8
 8005eec:	2000      	movs	r0, #0
 8005eee:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8005ef2:	6865      	ldr	r5, [r4, #4]
 8005ef4:	60a5      	str	r5, [r4, #8]
 8005ef6:	2d00      	cmp	r5, #0
 8005ef8:	f2c0 809c 	blt.w	8006034 <_printf_i+0x228>
 8005efc:	6820      	ldr	r0, [r4, #0]
 8005efe:	f020 0004 	bic.w	r0, r0, #4
 8005f02:	6020      	str	r0, [r4, #0]
 8005f04:	2b00      	cmp	r3, #0
 8005f06:	d13f      	bne.n	8005f88 <_printf_i+0x17c>
 8005f08:	2d00      	cmp	r5, #0
 8005f0a:	f040 8095 	bne.w	8006038 <_printf_i+0x22c>
 8005f0e:	4675      	mov	r5, lr
 8005f10:	2a08      	cmp	r2, #8
 8005f12:	d10b      	bne.n	8005f2c <_printf_i+0x120>
 8005f14:	6823      	ldr	r3, [r4, #0]
 8005f16:	07da      	lsls	r2, r3, #31
 8005f18:	d508      	bpl.n	8005f2c <_printf_i+0x120>
 8005f1a:	6923      	ldr	r3, [r4, #16]
 8005f1c:	6862      	ldr	r2, [r4, #4]
 8005f1e:	429a      	cmp	r2, r3
 8005f20:	bfde      	ittt	le
 8005f22:	2330      	movle	r3, #48	; 0x30
 8005f24:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005f28:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8005f2c:	ebae 0305 	sub.w	r3, lr, r5
 8005f30:	6123      	str	r3, [r4, #16]
 8005f32:	f8cd 8000 	str.w	r8, [sp]
 8005f36:	463b      	mov	r3, r7
 8005f38:	aa03      	add	r2, sp, #12
 8005f3a:	4621      	mov	r1, r4
 8005f3c:	4630      	mov	r0, r6
 8005f3e:	f7ff feef 	bl	8005d20 <_printf_common>
 8005f42:	3001      	adds	r0, #1
 8005f44:	d155      	bne.n	8005ff2 <_printf_i+0x1e6>
 8005f46:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005f4a:	b005      	add	sp, #20
 8005f4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005f50:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005f54:	493c      	ldr	r1, [pc, #240]	; (8006048 <_printf_i+0x23c>)
 8005f56:	6822      	ldr	r2, [r4, #0]
 8005f58:	6818      	ldr	r0, [r3, #0]
 8005f5a:	f012 0f80 	tst.w	r2, #128	; 0x80
 8005f5e:	f100 0504 	add.w	r5, r0, #4
 8005f62:	601d      	str	r5, [r3, #0]
 8005f64:	d001      	beq.n	8005f6a <_printf_i+0x15e>
 8005f66:	6803      	ldr	r3, [r0, #0]
 8005f68:	e002      	b.n	8005f70 <_printf_i+0x164>
 8005f6a:	0655      	lsls	r5, r2, #25
 8005f6c:	d5fb      	bpl.n	8005f66 <_printf_i+0x15a>
 8005f6e:	8803      	ldrh	r3, [r0, #0]
 8005f70:	07d0      	lsls	r0, r2, #31
 8005f72:	bf44      	itt	mi
 8005f74:	f042 0220 	orrmi.w	r2, r2, #32
 8005f78:	6022      	strmi	r2, [r4, #0]
 8005f7a:	b91b      	cbnz	r3, 8005f84 <_printf_i+0x178>
 8005f7c:	6822      	ldr	r2, [r4, #0]
 8005f7e:	f022 0220 	bic.w	r2, r2, #32
 8005f82:	6022      	str	r2, [r4, #0]
 8005f84:	2210      	movs	r2, #16
 8005f86:	e7b1      	b.n	8005eec <_printf_i+0xe0>
 8005f88:	4675      	mov	r5, lr
 8005f8a:	fbb3 f0f2 	udiv	r0, r3, r2
 8005f8e:	fb02 3310 	mls	r3, r2, r0, r3
 8005f92:	5ccb      	ldrb	r3, [r1, r3]
 8005f94:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8005f98:	4603      	mov	r3, r0
 8005f9a:	2800      	cmp	r0, #0
 8005f9c:	d1f5      	bne.n	8005f8a <_printf_i+0x17e>
 8005f9e:	e7b7      	b.n	8005f10 <_printf_i+0x104>
 8005fa0:	6808      	ldr	r0, [r1, #0]
 8005fa2:	681a      	ldr	r2, [r3, #0]
 8005fa4:	6949      	ldr	r1, [r1, #20]
 8005fa6:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005faa:	d004      	beq.n	8005fb6 <_printf_i+0x1aa>
 8005fac:	1d10      	adds	r0, r2, #4
 8005fae:	6018      	str	r0, [r3, #0]
 8005fb0:	6813      	ldr	r3, [r2, #0]
 8005fb2:	6019      	str	r1, [r3, #0]
 8005fb4:	e007      	b.n	8005fc6 <_printf_i+0x1ba>
 8005fb6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005fba:	f102 0004 	add.w	r0, r2, #4
 8005fbe:	6018      	str	r0, [r3, #0]
 8005fc0:	6813      	ldr	r3, [r2, #0]
 8005fc2:	d0f6      	beq.n	8005fb2 <_printf_i+0x1a6>
 8005fc4:	8019      	strh	r1, [r3, #0]
 8005fc6:	2300      	movs	r3, #0
 8005fc8:	6123      	str	r3, [r4, #16]
 8005fca:	4675      	mov	r5, lr
 8005fcc:	e7b1      	b.n	8005f32 <_printf_i+0x126>
 8005fce:	681a      	ldr	r2, [r3, #0]
 8005fd0:	1d11      	adds	r1, r2, #4
 8005fd2:	6019      	str	r1, [r3, #0]
 8005fd4:	6815      	ldr	r5, [r2, #0]
 8005fd6:	6862      	ldr	r2, [r4, #4]
 8005fd8:	2100      	movs	r1, #0
 8005fda:	4628      	mov	r0, r5
 8005fdc:	f7ff fd50 	bl	8005a80 <memchr>
 8005fe0:	b108      	cbz	r0, 8005fe6 <_printf_i+0x1da>
 8005fe2:	1b40      	subs	r0, r0, r5
 8005fe4:	6060      	str	r0, [r4, #4]
 8005fe6:	6863      	ldr	r3, [r4, #4]
 8005fe8:	6123      	str	r3, [r4, #16]
 8005fea:	2300      	movs	r3, #0
 8005fec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005ff0:	e79f      	b.n	8005f32 <_printf_i+0x126>
 8005ff2:	6923      	ldr	r3, [r4, #16]
 8005ff4:	462a      	mov	r2, r5
 8005ff6:	4639      	mov	r1, r7
 8005ff8:	4630      	mov	r0, r6
 8005ffa:	47c0      	blx	r8
 8005ffc:	3001      	adds	r0, #1
 8005ffe:	d0a2      	beq.n	8005f46 <_printf_i+0x13a>
 8006000:	6823      	ldr	r3, [r4, #0]
 8006002:	079b      	lsls	r3, r3, #30
 8006004:	d507      	bpl.n	8006016 <_printf_i+0x20a>
 8006006:	2500      	movs	r5, #0
 8006008:	f104 0919 	add.w	r9, r4, #25
 800600c:	68e3      	ldr	r3, [r4, #12]
 800600e:	9a03      	ldr	r2, [sp, #12]
 8006010:	1a9b      	subs	r3, r3, r2
 8006012:	429d      	cmp	r5, r3
 8006014:	db05      	blt.n	8006022 <_printf_i+0x216>
 8006016:	68e0      	ldr	r0, [r4, #12]
 8006018:	9b03      	ldr	r3, [sp, #12]
 800601a:	4298      	cmp	r0, r3
 800601c:	bfb8      	it	lt
 800601e:	4618      	movlt	r0, r3
 8006020:	e793      	b.n	8005f4a <_printf_i+0x13e>
 8006022:	2301      	movs	r3, #1
 8006024:	464a      	mov	r2, r9
 8006026:	4639      	mov	r1, r7
 8006028:	4630      	mov	r0, r6
 800602a:	47c0      	blx	r8
 800602c:	3001      	adds	r0, #1
 800602e:	d08a      	beq.n	8005f46 <_printf_i+0x13a>
 8006030:	3501      	adds	r5, #1
 8006032:	e7eb      	b.n	800600c <_printf_i+0x200>
 8006034:	2b00      	cmp	r3, #0
 8006036:	d1a7      	bne.n	8005f88 <_printf_i+0x17c>
 8006038:	780b      	ldrb	r3, [r1, #0]
 800603a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800603e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8006042:	e765      	b.n	8005f10 <_printf_i+0x104>
 8006044:	08006c51 	.word	0x08006c51
 8006048:	08006c40 	.word	0x08006c40

0800604c <realloc>:
 800604c:	4b02      	ldr	r3, [pc, #8]	; (8006058 <realloc+0xc>)
 800604e:	460a      	mov	r2, r1
 8006050:	4601      	mov	r1, r0
 8006052:	6818      	ldr	r0, [r3, #0]
 8006054:	f7ff b8f2 	b.w	800523c <__wrap__realloc_r>
 8006058:	200001b8 	.word	0x200001b8

0800605c <_sbrk_r>:
 800605c:	b538      	push	{r3, r4, r5, lr}
 800605e:	4c06      	ldr	r4, [pc, #24]	; (8006078 <_sbrk_r+0x1c>)
 8006060:	2300      	movs	r3, #0
 8006062:	4605      	mov	r5, r0
 8006064:	4608      	mov	r0, r1
 8006066:	6023      	str	r3, [r4, #0]
 8006068:	f7ff f9d2 	bl	8005410 <_sbrk>
 800606c:	1c43      	adds	r3, r0, #1
 800606e:	d102      	bne.n	8006076 <_sbrk_r+0x1a>
 8006070:	6823      	ldr	r3, [r4, #0]
 8006072:	b103      	cbz	r3, 8006076 <_sbrk_r+0x1a>
 8006074:	602b      	str	r3, [r5, #0]
 8006076:	bd38      	pop	{r3, r4, r5, pc}
 8006078:	20002750 	.word	0x20002750

0800607c <__sread>:
 800607c:	b510      	push	{r4, lr}
 800607e:	460c      	mov	r4, r1
 8006080:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006084:	f000 f9f4 	bl	8006470 <_read_r>
 8006088:	2800      	cmp	r0, #0
 800608a:	bfab      	itete	ge
 800608c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800608e:	89a3      	ldrhlt	r3, [r4, #12]
 8006090:	181b      	addge	r3, r3, r0
 8006092:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006096:	bfac      	ite	ge
 8006098:	6563      	strge	r3, [r4, #84]	; 0x54
 800609a:	81a3      	strhlt	r3, [r4, #12]
 800609c:	bd10      	pop	{r4, pc}

0800609e <__swrite>:
 800609e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80060a2:	461f      	mov	r7, r3
 80060a4:	898b      	ldrh	r3, [r1, #12]
 80060a6:	05db      	lsls	r3, r3, #23
 80060a8:	4605      	mov	r5, r0
 80060aa:	460c      	mov	r4, r1
 80060ac:	4616      	mov	r6, r2
 80060ae:	d505      	bpl.n	80060bc <__swrite+0x1e>
 80060b0:	2302      	movs	r3, #2
 80060b2:	2200      	movs	r2, #0
 80060b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80060b8:	f000 f870 	bl	800619c <_lseek_r>
 80060bc:	89a3      	ldrh	r3, [r4, #12]
 80060be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80060c2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80060c6:	81a3      	strh	r3, [r4, #12]
 80060c8:	4632      	mov	r2, r6
 80060ca:	463b      	mov	r3, r7
 80060cc:	4628      	mov	r0, r5
 80060ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80060d2:	f000 b841 	b.w	8006158 <_write_r>

080060d6 <__sseek>:
 80060d6:	b510      	push	{r4, lr}
 80060d8:	460c      	mov	r4, r1
 80060da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80060de:	f000 f85d 	bl	800619c <_lseek_r>
 80060e2:	1c43      	adds	r3, r0, #1
 80060e4:	89a3      	ldrh	r3, [r4, #12]
 80060e6:	bf15      	itete	ne
 80060e8:	6560      	strne	r0, [r4, #84]	; 0x54
 80060ea:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80060ee:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80060f2:	81a3      	strheq	r3, [r4, #12]
 80060f4:	bf18      	it	ne
 80060f6:	81a3      	strhne	r3, [r4, #12]
 80060f8:	bd10      	pop	{r4, pc}

080060fa <__sclose>:
 80060fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80060fe:	f000 b83d 	b.w	800617c <_close_r>

08006102 <strlen>:
 8006102:	4603      	mov	r3, r0
 8006104:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006108:	2a00      	cmp	r2, #0
 800610a:	d1fb      	bne.n	8006104 <strlen+0x2>
 800610c:	1a18      	subs	r0, r3, r0
 800610e:	3801      	subs	r0, #1
 8006110:	4770      	bx	lr

08006112 <_vsiprintf_r>:
 8006112:	b510      	push	{r4, lr}
 8006114:	b09a      	sub	sp, #104	; 0x68
 8006116:	f44f 7402 	mov.w	r4, #520	; 0x208
 800611a:	9100      	str	r1, [sp, #0]
 800611c:	9104      	str	r1, [sp, #16]
 800611e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8006122:	9102      	str	r1, [sp, #8]
 8006124:	9105      	str	r1, [sp, #20]
 8006126:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800612a:	f8ad 100e 	strh.w	r1, [sp, #14]
 800612e:	4669      	mov	r1, sp
 8006130:	f8ad 400c 	strh.w	r4, [sp, #12]
 8006134:	f000 f8a8 	bl	8006288 <_svfiprintf_r>
 8006138:	9b00      	ldr	r3, [sp, #0]
 800613a:	2200      	movs	r2, #0
 800613c:	701a      	strb	r2, [r3, #0]
 800613e:	b01a      	add	sp, #104	; 0x68
 8006140:	bd10      	pop	{r4, pc}
	...

08006144 <vsiprintf>:
 8006144:	4613      	mov	r3, r2
 8006146:	460a      	mov	r2, r1
 8006148:	4601      	mov	r1, r0
 800614a:	4802      	ldr	r0, [pc, #8]	; (8006154 <vsiprintf+0x10>)
 800614c:	6800      	ldr	r0, [r0, #0]
 800614e:	f7ff bfe0 	b.w	8006112 <_vsiprintf_r>
 8006152:	bf00      	nop
 8006154:	200001b8 	.word	0x200001b8

08006158 <_write_r>:
 8006158:	b538      	push	{r3, r4, r5, lr}
 800615a:	4c07      	ldr	r4, [pc, #28]	; (8006178 <_write_r+0x20>)
 800615c:	4605      	mov	r5, r0
 800615e:	4608      	mov	r0, r1
 8006160:	4611      	mov	r1, r2
 8006162:	2200      	movs	r2, #0
 8006164:	6022      	str	r2, [r4, #0]
 8006166:	461a      	mov	r2, r3
 8006168:	f7ff f8c0 	bl	80052ec <_write>
 800616c:	1c43      	adds	r3, r0, #1
 800616e:	d102      	bne.n	8006176 <_write_r+0x1e>
 8006170:	6823      	ldr	r3, [r4, #0]
 8006172:	b103      	cbz	r3, 8006176 <_write_r+0x1e>
 8006174:	602b      	str	r3, [r5, #0]
 8006176:	bd38      	pop	{r3, r4, r5, pc}
 8006178:	20002750 	.word	0x20002750

0800617c <_close_r>:
 800617c:	b538      	push	{r3, r4, r5, lr}
 800617e:	4c06      	ldr	r4, [pc, #24]	; (8006198 <_close_r+0x1c>)
 8006180:	2300      	movs	r3, #0
 8006182:	4605      	mov	r5, r0
 8006184:	4608      	mov	r0, r1
 8006186:	6023      	str	r3, [r4, #0]
 8006188:	f7ff f890 	bl	80052ac <_close>
 800618c:	1c43      	adds	r3, r0, #1
 800618e:	d102      	bne.n	8006196 <_close_r+0x1a>
 8006190:	6823      	ldr	r3, [r4, #0]
 8006192:	b103      	cbz	r3, 8006196 <_close_r+0x1a>
 8006194:	602b      	str	r3, [r5, #0]
 8006196:	bd38      	pop	{r3, r4, r5, pc}
 8006198:	20002750 	.word	0x20002750

0800619c <_lseek_r>:
 800619c:	b538      	push	{r3, r4, r5, lr}
 800619e:	4c07      	ldr	r4, [pc, #28]	; (80061bc <_lseek_r+0x20>)
 80061a0:	4605      	mov	r5, r0
 80061a2:	4608      	mov	r0, r1
 80061a4:	4611      	mov	r1, r2
 80061a6:	2200      	movs	r2, #0
 80061a8:	6022      	str	r2, [r4, #0]
 80061aa:	461a      	mov	r2, r3
 80061ac:	f7ff f904 	bl	80053b8 <_lseek>
 80061b0:	1c43      	adds	r3, r0, #1
 80061b2:	d102      	bne.n	80061ba <_lseek_r+0x1e>
 80061b4:	6823      	ldr	r3, [r4, #0]
 80061b6:	b103      	cbz	r3, 80061ba <_lseek_r+0x1e>
 80061b8:	602b      	str	r3, [r5, #0]
 80061ba:	bd38      	pop	{r3, r4, r5, pc}
 80061bc:	20002750 	.word	0x20002750

080061c0 <_malloc_usable_size_r>:
 80061c0:	f851 0c04 	ldr.w	r0, [r1, #-4]
 80061c4:	2800      	cmp	r0, #0
 80061c6:	f1a0 0004 	sub.w	r0, r0, #4
 80061ca:	bfbc      	itt	lt
 80061cc:	580b      	ldrlt	r3, [r1, r0]
 80061ce:	18c0      	addlt	r0, r0, r3
 80061d0:	4770      	bx	lr

080061d2 <__ssputs_r>:
 80061d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80061d6:	688e      	ldr	r6, [r1, #8]
 80061d8:	429e      	cmp	r6, r3
 80061da:	4682      	mov	r10, r0
 80061dc:	460c      	mov	r4, r1
 80061de:	4691      	mov	r9, r2
 80061e0:	4698      	mov	r8, r3
 80061e2:	d835      	bhi.n	8006250 <__ssputs_r+0x7e>
 80061e4:	898a      	ldrh	r2, [r1, #12]
 80061e6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80061ea:	d031      	beq.n	8006250 <__ssputs_r+0x7e>
 80061ec:	6825      	ldr	r5, [r4, #0]
 80061ee:	6909      	ldr	r1, [r1, #16]
 80061f0:	1a6f      	subs	r7, r5, r1
 80061f2:	6965      	ldr	r5, [r4, #20]
 80061f4:	2302      	movs	r3, #2
 80061f6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80061fa:	fb95 f5f3 	sdiv	r5, r5, r3
 80061fe:	f108 0301 	add.w	r3, r8, #1
 8006202:	443b      	add	r3, r7
 8006204:	429d      	cmp	r5, r3
 8006206:	bf38      	it	cc
 8006208:	461d      	movcc	r5, r3
 800620a:	0553      	lsls	r3, r2, #21
 800620c:	d531      	bpl.n	8006272 <__ssputs_r+0xa0>
 800620e:	4629      	mov	r1, r5
 8006210:	f7ff f812 	bl	8005238 <__wrap__malloc_r>
 8006214:	4606      	mov	r6, r0
 8006216:	b950      	cbnz	r0, 800622e <__ssputs_r+0x5c>
 8006218:	230c      	movs	r3, #12
 800621a:	f8ca 3000 	str.w	r3, [r10]
 800621e:	89a3      	ldrh	r3, [r4, #12]
 8006220:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006224:	81a3      	strh	r3, [r4, #12]
 8006226:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800622a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800622e:	463a      	mov	r2, r7
 8006230:	6921      	ldr	r1, [r4, #16]
 8006232:	f7ff fc75 	bl	8005b20 <memcpy>
 8006236:	89a3      	ldrh	r3, [r4, #12]
 8006238:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800623c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006240:	81a3      	strh	r3, [r4, #12]
 8006242:	6126      	str	r6, [r4, #16]
 8006244:	6165      	str	r5, [r4, #20]
 8006246:	443e      	add	r6, r7
 8006248:	1bed      	subs	r5, r5, r7
 800624a:	6026      	str	r6, [r4, #0]
 800624c:	60a5      	str	r5, [r4, #8]
 800624e:	4646      	mov	r6, r8
 8006250:	4546      	cmp	r6, r8
 8006252:	bf28      	it	cs
 8006254:	4646      	movcs	r6, r8
 8006256:	4632      	mov	r2, r6
 8006258:	4649      	mov	r1, r9
 800625a:	6820      	ldr	r0, [r4, #0]
 800625c:	f7ff fc6b 	bl	8005b36 <memmove>
 8006260:	68a3      	ldr	r3, [r4, #8]
 8006262:	1b9b      	subs	r3, r3, r6
 8006264:	60a3      	str	r3, [r4, #8]
 8006266:	6823      	ldr	r3, [r4, #0]
 8006268:	441e      	add	r6, r3
 800626a:	6026      	str	r6, [r4, #0]
 800626c:	2000      	movs	r0, #0
 800626e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8006272:	462a      	mov	r2, r5
 8006274:	f7fe ffe2 	bl	800523c <__wrap__realloc_r>
 8006278:	4606      	mov	r6, r0
 800627a:	2800      	cmp	r0, #0
 800627c:	d1e1      	bne.n	8006242 <__ssputs_r+0x70>
 800627e:	6921      	ldr	r1, [r4, #16]
 8006280:	4650      	mov	r0, r10
 8006282:	f7fe ffdd 	bl	8005240 <__wrap__free_r>
 8006286:	e7c7      	b.n	8006218 <__ssputs_r+0x46>

08006288 <_svfiprintf_r>:
 8006288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800628c:	b09d      	sub	sp, #116	; 0x74
 800628e:	4680      	mov	r8, r0
 8006290:	9303      	str	r3, [sp, #12]
 8006292:	898b      	ldrh	r3, [r1, #12]
 8006294:	061c      	lsls	r4, r3, #24
 8006296:	460d      	mov	r5, r1
 8006298:	4616      	mov	r6, r2
 800629a:	d50f      	bpl.n	80062bc <_svfiprintf_r+0x34>
 800629c:	690b      	ldr	r3, [r1, #16]
 800629e:	b96b      	cbnz	r3, 80062bc <_svfiprintf_r+0x34>
 80062a0:	2140      	movs	r1, #64	; 0x40
 80062a2:	f7fe ffc9 	bl	8005238 <__wrap__malloc_r>
 80062a6:	6028      	str	r0, [r5, #0]
 80062a8:	6128      	str	r0, [r5, #16]
 80062aa:	b928      	cbnz	r0, 80062b8 <_svfiprintf_r+0x30>
 80062ac:	230c      	movs	r3, #12
 80062ae:	f8c8 3000 	str.w	r3, [r8]
 80062b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80062b6:	e0c5      	b.n	8006444 <_svfiprintf_r+0x1bc>
 80062b8:	2340      	movs	r3, #64	; 0x40
 80062ba:	616b      	str	r3, [r5, #20]
 80062bc:	2300      	movs	r3, #0
 80062be:	9309      	str	r3, [sp, #36]	; 0x24
 80062c0:	2320      	movs	r3, #32
 80062c2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80062c6:	2330      	movs	r3, #48	; 0x30
 80062c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80062cc:	f04f 0b01 	mov.w	r11, #1
 80062d0:	4637      	mov	r7, r6
 80062d2:	463c      	mov	r4, r7
 80062d4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d13c      	bne.n	8006356 <_svfiprintf_r+0xce>
 80062dc:	ebb7 0a06 	subs.w	r10, r7, r6
 80062e0:	d00b      	beq.n	80062fa <_svfiprintf_r+0x72>
 80062e2:	4653      	mov	r3, r10
 80062e4:	4632      	mov	r2, r6
 80062e6:	4629      	mov	r1, r5
 80062e8:	4640      	mov	r0, r8
 80062ea:	f7ff ff72 	bl	80061d2 <__ssputs_r>
 80062ee:	3001      	adds	r0, #1
 80062f0:	f000 80a3 	beq.w	800643a <_svfiprintf_r+0x1b2>
 80062f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062f6:	4453      	add	r3, r10
 80062f8:	9309      	str	r3, [sp, #36]	; 0x24
 80062fa:	783b      	ldrb	r3, [r7, #0]
 80062fc:	2b00      	cmp	r3, #0
 80062fe:	f000 809c 	beq.w	800643a <_svfiprintf_r+0x1b2>
 8006302:	2300      	movs	r3, #0
 8006304:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006308:	9304      	str	r3, [sp, #16]
 800630a:	9307      	str	r3, [sp, #28]
 800630c:	9205      	str	r2, [sp, #20]
 800630e:	9306      	str	r3, [sp, #24]
 8006310:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006314:	931a      	str	r3, [sp, #104]	; 0x68
 8006316:	2205      	movs	r2, #5
 8006318:	7821      	ldrb	r1, [r4, #0]
 800631a:	4850      	ldr	r0, [pc, #320]	; (800645c <_svfiprintf_r+0x1d4>)
 800631c:	f7ff fbb0 	bl	8005a80 <memchr>
 8006320:	1c67      	adds	r7, r4, #1
 8006322:	9b04      	ldr	r3, [sp, #16]
 8006324:	b9d8      	cbnz	r0, 800635e <_svfiprintf_r+0xd6>
 8006326:	06d9      	lsls	r1, r3, #27
 8006328:	bf44      	itt	mi
 800632a:	2220      	movmi	r2, #32
 800632c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006330:	071a      	lsls	r2, r3, #28
 8006332:	bf44      	itt	mi
 8006334:	222b      	movmi	r2, #43	; 0x2b
 8006336:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800633a:	7822      	ldrb	r2, [r4, #0]
 800633c:	2a2a      	cmp	r2, #42	; 0x2a
 800633e:	d016      	beq.n	800636e <_svfiprintf_r+0xe6>
 8006340:	9a07      	ldr	r2, [sp, #28]
 8006342:	2100      	movs	r1, #0
 8006344:	200a      	movs	r0, #10
 8006346:	4627      	mov	r7, r4
 8006348:	3401      	adds	r4, #1
 800634a:	783b      	ldrb	r3, [r7, #0]
 800634c:	3b30      	subs	r3, #48	; 0x30
 800634e:	2b09      	cmp	r3, #9
 8006350:	d951      	bls.n	80063f6 <_svfiprintf_r+0x16e>
 8006352:	b1c9      	cbz	r1, 8006388 <_svfiprintf_r+0x100>
 8006354:	e011      	b.n	800637a <_svfiprintf_r+0xf2>
 8006356:	2b25      	cmp	r3, #37	; 0x25
 8006358:	d0c0      	beq.n	80062dc <_svfiprintf_r+0x54>
 800635a:	4627      	mov	r7, r4
 800635c:	e7b9      	b.n	80062d2 <_svfiprintf_r+0x4a>
 800635e:	4a3f      	ldr	r2, [pc, #252]	; (800645c <_svfiprintf_r+0x1d4>)
 8006360:	1a80      	subs	r0, r0, r2
 8006362:	fa0b f000 	lsl.w	r0, r11, r0
 8006366:	4318      	orrs	r0, r3
 8006368:	9004      	str	r0, [sp, #16]
 800636a:	463c      	mov	r4, r7
 800636c:	e7d3      	b.n	8006316 <_svfiprintf_r+0x8e>
 800636e:	9a03      	ldr	r2, [sp, #12]
 8006370:	1d11      	adds	r1, r2, #4
 8006372:	6812      	ldr	r2, [r2, #0]
 8006374:	9103      	str	r1, [sp, #12]
 8006376:	2a00      	cmp	r2, #0
 8006378:	db01      	blt.n	800637e <_svfiprintf_r+0xf6>
 800637a:	9207      	str	r2, [sp, #28]
 800637c:	e004      	b.n	8006388 <_svfiprintf_r+0x100>
 800637e:	4252      	negs	r2, r2
 8006380:	f043 0302 	orr.w	r3, r3, #2
 8006384:	9207      	str	r2, [sp, #28]
 8006386:	9304      	str	r3, [sp, #16]
 8006388:	783b      	ldrb	r3, [r7, #0]
 800638a:	2b2e      	cmp	r3, #46	; 0x2e
 800638c:	d10e      	bne.n	80063ac <_svfiprintf_r+0x124>
 800638e:	787b      	ldrb	r3, [r7, #1]
 8006390:	2b2a      	cmp	r3, #42	; 0x2a
 8006392:	f107 0101 	add.w	r1, r7, #1
 8006396:	d132      	bne.n	80063fe <_svfiprintf_r+0x176>
 8006398:	9b03      	ldr	r3, [sp, #12]
 800639a:	1d1a      	adds	r2, r3, #4
 800639c:	681b      	ldr	r3, [r3, #0]
 800639e:	9203      	str	r2, [sp, #12]
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	bfb8      	it	lt
 80063a4:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80063a8:	3702      	adds	r7, #2
 80063aa:	9305      	str	r3, [sp, #20]
 80063ac:	4c2c      	ldr	r4, [pc, #176]	; (8006460 <_svfiprintf_r+0x1d8>)
 80063ae:	7839      	ldrb	r1, [r7, #0]
 80063b0:	2203      	movs	r2, #3
 80063b2:	4620      	mov	r0, r4
 80063b4:	f7ff fb64 	bl	8005a80 <memchr>
 80063b8:	b138      	cbz	r0, 80063ca <_svfiprintf_r+0x142>
 80063ba:	2340      	movs	r3, #64	; 0x40
 80063bc:	1b00      	subs	r0, r0, r4
 80063be:	fa03 f000 	lsl.w	r0, r3, r0
 80063c2:	9b04      	ldr	r3, [sp, #16]
 80063c4:	4303      	orrs	r3, r0
 80063c6:	9304      	str	r3, [sp, #16]
 80063c8:	3701      	adds	r7, #1
 80063ca:	7839      	ldrb	r1, [r7, #0]
 80063cc:	4825      	ldr	r0, [pc, #148]	; (8006464 <_svfiprintf_r+0x1dc>)
 80063ce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80063d2:	2206      	movs	r2, #6
 80063d4:	1c7e      	adds	r6, r7, #1
 80063d6:	f7ff fb53 	bl	8005a80 <memchr>
 80063da:	2800      	cmp	r0, #0
 80063dc:	d035      	beq.n	800644a <_svfiprintf_r+0x1c2>
 80063de:	4b22      	ldr	r3, [pc, #136]	; (8006468 <_svfiprintf_r+0x1e0>)
 80063e0:	b9fb      	cbnz	r3, 8006422 <_svfiprintf_r+0x19a>
 80063e2:	9b03      	ldr	r3, [sp, #12]
 80063e4:	3307      	adds	r3, #7
 80063e6:	f023 0307 	bic.w	r3, r3, #7
 80063ea:	3308      	adds	r3, #8
 80063ec:	9303      	str	r3, [sp, #12]
 80063ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80063f0:	444b      	add	r3, r9
 80063f2:	9309      	str	r3, [sp, #36]	; 0x24
 80063f4:	e76c      	b.n	80062d0 <_svfiprintf_r+0x48>
 80063f6:	fb00 3202 	mla	r2, r0, r2, r3
 80063fa:	2101      	movs	r1, #1
 80063fc:	e7a3      	b.n	8006346 <_svfiprintf_r+0xbe>
 80063fe:	2300      	movs	r3, #0
 8006400:	9305      	str	r3, [sp, #20]
 8006402:	4618      	mov	r0, r3
 8006404:	240a      	movs	r4, #10
 8006406:	460f      	mov	r7, r1
 8006408:	3101      	adds	r1, #1
 800640a:	783a      	ldrb	r2, [r7, #0]
 800640c:	3a30      	subs	r2, #48	; 0x30
 800640e:	2a09      	cmp	r2, #9
 8006410:	d903      	bls.n	800641a <_svfiprintf_r+0x192>
 8006412:	2b00      	cmp	r3, #0
 8006414:	d0ca      	beq.n	80063ac <_svfiprintf_r+0x124>
 8006416:	9005      	str	r0, [sp, #20]
 8006418:	e7c8      	b.n	80063ac <_svfiprintf_r+0x124>
 800641a:	fb04 2000 	mla	r0, r4, r0, r2
 800641e:	2301      	movs	r3, #1
 8006420:	e7f1      	b.n	8006406 <_svfiprintf_r+0x17e>
 8006422:	ab03      	add	r3, sp, #12
 8006424:	9300      	str	r3, [sp, #0]
 8006426:	462a      	mov	r2, r5
 8006428:	4b10      	ldr	r3, [pc, #64]	; (800646c <_svfiprintf_r+0x1e4>)
 800642a:	a904      	add	r1, sp, #16
 800642c:	4640      	mov	r0, r8
 800642e:	f3af 8000 	nop.w
 8006432:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8006436:	4681      	mov	r9, r0
 8006438:	d1d9      	bne.n	80063ee <_svfiprintf_r+0x166>
 800643a:	89ab      	ldrh	r3, [r5, #12]
 800643c:	065b      	lsls	r3, r3, #25
 800643e:	f53f af38 	bmi.w	80062b2 <_svfiprintf_r+0x2a>
 8006442:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006444:	b01d      	add	sp, #116	; 0x74
 8006446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800644a:	ab03      	add	r3, sp, #12
 800644c:	9300      	str	r3, [sp, #0]
 800644e:	462a      	mov	r2, r5
 8006450:	4b06      	ldr	r3, [pc, #24]	; (800646c <_svfiprintf_r+0x1e4>)
 8006452:	a904      	add	r1, sp, #16
 8006454:	4640      	mov	r0, r8
 8006456:	f7ff fcd9 	bl	8005e0c <_printf_i>
 800645a:	e7ea      	b.n	8006432 <_svfiprintf_r+0x1aa>
 800645c:	08006c62 	.word	0x08006c62
 8006460:	08006c68 	.word	0x08006c68
 8006464:	08006c6c 	.word	0x08006c6c
 8006468:	00000000 	.word	0x00000000
 800646c:	080061d3 	.word	0x080061d3

08006470 <_read_r>:
 8006470:	b538      	push	{r3, r4, r5, lr}
 8006472:	4c07      	ldr	r4, [pc, #28]	; (8006490 <_read_r+0x20>)
 8006474:	4605      	mov	r5, r0
 8006476:	4608      	mov	r0, r1
 8006478:	4611      	mov	r1, r2
 800647a:	2200      	movs	r2, #0
 800647c:	6022      	str	r2, [r4, #0]
 800647e:	461a      	mov	r2, r3
 8006480:	f7fe ff6a 	bl	8005358 <_read>
 8006484:	1c43      	adds	r3, r0, #1
 8006486:	d102      	bne.n	800648e <_read_r+0x1e>
 8006488:	6823      	ldr	r3, [r4, #0]
 800648a:	b103      	cbz	r3, 800648e <_read_r+0x1e>
 800648c:	602b      	str	r3, [r5, #0]
 800648e:	bd38      	pop	{r3, r4, r5, pc}
 8006490:	20002750 	.word	0x20002750

08006494 <_init>:
 8006494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006496:	bf00      	nop
 8006498:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800649a:	bc08      	pop	{r3}
 800649c:	469e      	mov	lr, r3
 800649e:	4770      	bx	lr

080064a0 <_fini>:
 80064a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064a2:	bf00      	nop
 80064a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064a6:	bc08      	pop	{r3}
 80064a8:	469e      	mov	lr, r3
 80064aa:	4770      	bx	lr

080064ac <vtable for std_msgs::Time>:
	...
 80064b4:	0201 0800 0229 0800 0265 0800 026d 0800     ....)...e...m...

080064c4 <vtable for rosserial_msgs::TopicInfo>:
	...
 80064cc:	051f 0800 05f9 0800 0275 0800 027d 0800     ........u...}...

080064dc <vtable for rosserial_msgs::Log>:
	...
 80064e4:	04f3 0800 05c3 0800 0285 0800 028d 0800     ................

080064f4 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80064fc:	0411 0800 06af 0800 0295 0800 029d 0800     ................

0800650c <vtable for std_msgs::Int32>:
	...
 8006514:	02a5 0800 02b9 0800 02c1 0800 02c9 0800     ................

08006524 <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 800652c:	0f75 0800 0af9 0800 0325 0800               u.......%...

08006538 <vtable for ros::Subscriber<std_msgs::Int32, void>>:
	...
 8006540:	02f7 0800 030f 0800 0315 0800 031d 0800     ................

08006550 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006550:	02e9 0800 02ed 0800 02f5 0800 6f6d 6f74     ............moto
 8006560:	5f72 0030 6f6d 6f74 5f72 0031 6e65 6f63     r_0.motor_1.enco
 8006570:	6564 5f72 0030 6e65 6f63 6564 5f72 0031     der_0.encoder_1.
 8006580:	6639 6530 3839 6462 3661 3935 3138 3839     9f0e98bda6598198
 8006590:	6436 6664 3335 6661 3761 3461 6530 3934     6ddf53afa7a40e49
 80065a0:	3100 6131 6462 3337 6331 3532 3339 3233     .11abd731c259332
 80065b0:	3136 6463 3136 3338 6462 3231 3664 3932     61cd6183bd12d629
 80065c0:	0035 6f72 7373 7265 6169 5f6c 736d 7367     5.rosserial_msgs
 80065d0:	4c2f 676f 3000 6461 3135 3866 6638 3463     /Log.0ad51f88fc4
 80065e0:	3834 3239 3866 3163 3630 3438 3730 3637     4892f8c106840776
 80065f0:	3634 3030 0035 6f72 7373 7265 6169 5f6c     46005.rosserial_
 8006600:	736d 7367 542f 706f 6369 6e49 6f66 7200          msgs/TopicInfo.

0800660f <rosserial_msgs::REQUESTPARAM>:
 800660f:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 800661f:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 800662f:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 800663f:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 800664f:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 800665f:	6566 2e72 6300 3764 3631 6336 3437 3563     fer..cd7166c74c5
 800666f:	3235 3363 3131 6266 6363 6632 3565 3761     52c311fbcc2fe5a7
 800667f:	6362 3832 0039 7473 5f64 736d 7367 542f     bc289.std_msgs/T
 800668f:	6d69 0065 6164 3935 3930 6266 3365 3837     ime.da5909fbe378
 800669f:	6561 6661 3538 3565 3734 3865 3033 6363     aeaf85e547e830cc
 80066af:	6231 3762 7300 6474 6d5f 6773 2f73 6e49     1bb7.std_msgs/In
 80066bf:	3374 0032 ef00                                   t32..

080066c4 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 80066c4:	10ef 0800 10e1 0800 10ed 0800 682f 6d6f     ............/hom
 80066d4:	2f65 6168 696a 656d 722f 736f 6c2f 6269     e/hajime/ros/lib
 80066e4:	722f 736f 6c5f 6269 422f 6675 6566 6572     /ros_lib/Buffere
 80066f4:	5364 7265 6169 2f6c 7542 6666 7265 6465     dSerial/Buffered
 8006704:	6553 6972 6c61 632e 7070 2500 2073 6425     Serial.cpp.%s %d
 8006714:	6220 6675 6566 2072 766f 7265 7277 7469      buffer overwrit
 8006724:	2065 6d28 7861 625f 6675 735f 7a69 3a65     e (max_buf_size:
 8006734:	2520 2064 7865 6563 6465 6465 203a 6425      %d exceeded: %d
 8006744:	2129 0a0d 0000 0000                         )!......

0800674c <vtable for BufferedSerial>:
	...
 8006754:	4d25 0800 4d25 0800 11c9 0800 1221 0800     %M..%M......!...
 8006764:	10a1 0800 10b1 0800 10b5 0800 1341 0800     ............A...
 8006774:	1359 0800 13d5 0800 1397 0800               Y...........

08006780 <us_data>:
 8006780:	6788 0800 09e0 2000                         .g..... 

08006788 <us_interface>:
 8006788:	34a5 0800 34c5 0800 34f5 0800 350d 0800     .4...4...4...5..
 8006798:	34dd 0800 6970 6d6e 7061 6d20 7369 6d2d     .4..pinmap mis-m
 80067a8:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 80067b8:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 80067c8:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 80067d8:	6e69 756f 0074 0000                         inout...

080067e0 <mp_stk_size>:
 80067e0:	0210 0000                                   ....

080067e4 <mp_tcb_size>:
 80067e4:	01cc                                        ..

080067e6 <mp_tmr_size>:
	...

080067e8 <os_clockrate>:
 80067e8:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 80067f8:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8006808:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08006815 <os_fifo_size>:
 8006815:	0110                                             .

08006816 <os_flags>:
 8006816:	0001                                        ..

08006818 <os_maxtaskrun>:
 8006818:	0007 0000                                   ....

0800681c <os_messageQ_def_osTimerMessageQ>:
 800681c:	0004 0000 0a04 2000                         ....... 

08006824 <os_mutex_def_env_mutex>:
 8006824:	0a24 2000                                   $.. 

08006828 <os_mutex_def_malloc_mutex>:
 8006828:	0a34 2000                                   4.. 

0800682c <os_mutex_def_singleton_mutex>:
 800682c:	0a44 2000                                   D.. 

08006830 <os_rrobin>:
 8006830:	0005 0001                                   ....

08006834 <os_stackinfo>:
 8006834:	0200 0100                                   ....

08006838 <os_thread_def_osTimerThread>:
 8006838:	2591 0800 0002 0000 0001 0000 0320 0000     .%.......... ...
 8006848:	2168 2000                                   h!. 

0800684c <os_trv>:
 800684c:	193f 0001                                   ?...

08006850 <os_mutex_def_osThreadMutex>:
 8006850:	1a58 2000 6950 6d6e 7061 6520 7272 726f     X.. Pinmap error
 8006860:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8006870:	6562 2e72 4300 6e61 6f6e 2074 6e69 7469     ber..Cannot init
 8006880:	6169 696c 657a 4320 4e41 0000               ialize CAN..

0800688c <timing_pts>:
	...
 8006894:	0001 0000 0000 0000 0002 0000 0000 0000     ................
 80068a4:	0003 0000 0000 0000 0003 0000 0001 0000     ................
 80068b4:	0004 0000 0001 0000 0005 0000 0001 0000     ................
 80068c4:	0006 0000 0001 0000 0006 0000 0002 0000     ................
 80068d4:	0007 0000 0002 0000 0008 0000 0002 0000     ................
 80068e4:	0009 0000 0002 0000 0009 0000 0003 0000     ................
 80068f4:	000a 0000 0003 0000 000b 0000 0003 0000     ................
 8006904:	000c 0000 0003 0000 000d 0000 0003 0000     ................
 8006914:	000d 0000 0004 0000 000e 0000 0004 0000     ................
 8006924:	000f 0000 0004 0000 000f 0000 0005 0000     ................
 8006934:	000f 0000 0006 0000 000f 0000 0007 0000     ................

08006944 <ll_pin_defines>:
 8006944:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8006954:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8006964:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8006974:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8006984:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8006994:	2065 4155 5452 000a                         e UART..

0800699c <PinMap_CAN_RD>:
 800699c:	0018 0000 6400 4000 0902 0000 000b 0000     .....d.@........
 80069ac:	6400 4000 0902 0000 ffff 0000 ffff ffff     .d.@............
 80069bc:	0000 0000                                   ....

080069c0 <PinMap_CAN_TD>:
 80069c0:	0019 0000 6400 4000 0902 0000 000c 0000     .....d.@........
 80069d0:	6400 4000 0902 0000 ffff 0000 ffff ffff     .d.@............
 80069e0:	0000 0000                                   ....

080069e4 <PinMap_UART_RX>:
 80069e4:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 80069f4:	3800 4001 0712 0000 000f 0000 4400 4000     .8.@.........D.@
 8006a04:	0712 0000 0014 0000 4400 4000 0712 0000     .........D.@....
 8006a14:	0017 0000 3800 4001 0712 0000 0018 0000     .....8.@........
 8006a24:	4800 4000 0712 0000 001b 0000 4800 4000     .H.@.........H.@
 8006a34:	0712 0000 0025 0000 3800 4001 0712 0000     ....%....8.@....
 8006a44:	002b 0000 4c00 4000 0512 0000 0032 0000     +....L.@....2...
 8006a54:	5000 4000 0512 0000 ffff 0000 ffff ffff     .P.@............
 8006a64:	0000 0000                                   ....

08006a68 <PinMap_UART_TX>:
 8006a68:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8006a78:	3800 4001 0712 0000 000e 0000 4400 4000     .8.@.........D.@
 8006a88:	0712 0000 0013 0000 4400 4000 0712 0000     .........D.@....
 8006a98:	0016 0000 3800 4001 0712 0000 0019 0000     .....8.@........
 8006aa8:	4800 4000 0712 0000 001a 0000 4800 4000     .H.@.........H.@
 8006ab8:	0712 0000 0024 0000 3800 4001 0712 0000     ....$....8.@....
 8006ac8:	002a 0000 4c00 4000 0512 0000 002c 0000     *....L.@....,...
 8006ad8:	5000 4000 0512 0000 ffff 0000 ffff ffff     .P.@............
 8006ae8:	0000 0000                                   ....

08006aec <AHBPrescTable>:
	...
 8006af4:	0201 0403 0706 0908                         ........

08006afc <APBPrescTable>:
 8006afc:	0000 0000 0201 0403                         ........

08006b04 <aPLLMULFactorTable>:
 8006b04:	0302 0504 0706 0908 0b0a 0d0c 0f0e 1010     ................

08006b14 <aPredivFactorTable>:
 8006b14:	0201 0403 0605 0807 0a09 0c0b 0e0d 100f     ................

08006b24 <CSWTCH.45>:
 8006b24:	0401 0208                                   ....

08006b28 <vtable for mbed::Ticker>:
	...
 8006b30:	03b1 0800 03d5 0800 4c9f 0800               .........L..

08006b3c <vtable for mbed::RawSerial>:
	...
 8006b44:	4d25 0800 4d25 0800 4d3d 0800 4d51 0800     %M..%M..=M..QM..

08006b54 <vtable for mbed::CAN>:
	...
 8006b5c:	4ed9 0800 4f19 0800 4e13 0800 4e1d 0800     .N...O...N...N..

08006b6c <vtable for mbed::SerialBase>:
	...
 8006b74:	4fd3 0800 4fd5 0800 117d 0800 11b5 0800     .O...O..}.......

08006b84 <vtable for mbed::TimerEvent>:
	...
 8006b94:	107d 0800 704f 7265 7461 726f 6e20 7765     }...Operator new
 8006ba4:	5d5b 6f20 7475 6f20 2066 656d 6f6d 7972     [] out of memory
 8006bb4:	0a0d 4500 7272 726f 6920 696e 6974 6c61     ...Error initial
 8006bc4:	7a69 6e69 2067 6874 2065 756d 6574 2078     izing the mutex 
 8006bd4:	626f 656a 7463 000a                         object..

08006bdc <__sf_fake_stderr>:
	...

08006bfc <__sf_fake_stdin>:
	...

08006c1c <__sf_fake_stdout>:
	...

08006c3c <_global_impure_ptr>:
 8006c3c:	01bc 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8006c4c:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8006c5c:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8006c6c:	6665 4567 4746 0000                         efgEFG..

08006c74 <__EH_FRAME_BEGIN__>:
 8006c74:	0000 0000                                   ....
